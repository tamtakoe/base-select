{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/myer-array-diff.ts","webpack:///./src/select.html","webpack:///./src/dom-builder.ts","webpack:///./src/select.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","myer_array_diff_1","getElementContainer","element","containerElement","className","document","body","classList","ownerDocument","nodeType","indexOf","parentElement","mergeWithDefaults","obj","newObj","defaults","k","newValue","bindFocusBlur","inputElement","isFocused","isMousedown","isBlur","shadowHost","parentNode","addEventListener","clickHandler","mousedownHandler","blurHandler","focusHandler","host","event","target","setTimeout","dispatchEvent","Event","console","log","nodeName","activeElement","isSelectElement","focus","unbind","removeEventListener","scrollActiveOption","list","item","y","height_menu","height_item","scroll","scroll_top","scroll_bottom","offsetHeight","elem","extra","val","offsetWidth","styles","getComputedStyle","style","rnumnonpx","test","parseFloat","isBorderBox","cssExpand","getStyleValue","augmentWidthOrHeight","getWidthOrHeight","scrollTop","getOffset","top","RegExp","source","docElem","win","box","getBoundingClientRect","doc","documentElement","defaultView","getWindow","pageYOffset","clientTop","left","pageXOffset","clientLeft","deepEqual","actual","expected","strict","Date","getTime","b","ka","keys","kb","length","sort","e","objEqual","toString","String","hasNoSpaceBelowForMenu","toggleElement","menuElement","defaultMenuHeightPx","spaceAbove","spaceBelow","innerHeight","bottom","parseInt","groupsIsEmpty","groups","intersection","xArr","yArr","invert","j","filteredX","out","slice","splice","push","rEscapableCharacters","sEscapeMatch","escapeCharacters","string","replace","deepFind","path","originalIfNotFound","undefined","paths","split","current","ascSort","items","query","getLabel","options","isFound","output","output1","output2","output3","orderFactor","regExpParams","getLabelArr","fields","map","field","safeQuery","matchRegExp","firstMatchRegExp","label","concat","A","B","localeCompare","distributeOptionsByGroup","groupNameGetter","optionGroupName","optionGroup","optionGroups","","findIndex","trackByGetter","removeChildren","firstChild","removeChild","updateElements","newItems","elementConstructor","trackFieldGetter","appendUndefinedItems","newItemIds","itemsMap","oldItemIds","elementsArr","Array","from","children","track","id","uncountableElementId","Error","data","Map","forEach","itemId","set","oldElementId","myer","diff","args","arg","operation","startIndex","amount","remove","removeElements","newElements","after","apply","prepend","addElements","deepReplace","oldVal","newVal","newObject","copy","clone","highlight","str","substr","tagName","tagTemplate","html","debounceEventValue","fn","timeout","timer","_this","this","clearTimeout","getItemsByField","fieldGetter","isArray","find","filter","noopPipe","noop","QueryCache","cache","getValue","cacheItem","q","getLast","unshift","v","clear","diff_match_patch","Diff_Timeout","diff_main","text1","text2","opt_deadline","Number","MAX_VALUE","deadline","commonlength","diff_commonPrefix","commonprefix","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","find_csa","shift","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","diff_bisect_","text1_length","text2_length","max_d","Math","ceil","v_offset","v_length","v1","v2","x","delta","front","k1start","k1end","k2start","k2end","k1","k1_offset","x1","y1","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","compare_arrays","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","pointer","count_delete","count_insert","text_delete","text_insert","diffItem","prevDiffValues","diffValues","pop","changes","arr","subarr","from_index","sl","loop","arr1","arr2","transform_to_splice_arguments","sDiffs","cursor","sDiff","nextDiff","newItems_1","oldArr","newArr","__webpack_exports__","select_html_1","utils_1","CssClass","select","open","multiple","active","focused","loading","removable","selected","readonly","disabled","limited","above","hide","selectedItem","inputNote","selectedItemRemove","listItem","SelectDom","styleElement","paramsDefault","placeholder","multiplePlaceholder","emptyDropdownLabel","openByRemove","openByActiveRemove","openByInputClick","closeByRemove","closeBySelect","activeByOpen","keepOpened","hideSelected","getItems","selectedItemsForQuery","getItemsByValue","valueField","groupField","searchField","trackField","disabledField","dropdownItemLabelField","selectedItemLabelField","valueFieldGetter","searchFieldGetter","disabledFieldGetter","selectedItemLabelGetter","dropdownItemLabelGetter","groupLabelGetter","groupFieldGetter","customAreaGetter","infoGetter","hiddenItemsNumber","creatable","createItemFn","removeItemFn","saveTrigger","editable","editItemFn","multipleVisibleLimit","Infinity","multipleLimit","multipleLimitBlinkDelay","debounce","useCache","rotateList","position","debug","params","assign","selectedItems","tmpl","isOpen","isLoading","isRemovable","isEmpty","isDisabled","isReadonly","isDropdownAbove","unbindFocusBlur","focusBlurInstance","searchFocusHandler","setFocus","searchBlurHandler","closeList","setActiveSelectedElement","insertListItems","setQuery","searchInputHandler","searchChange","searchKeydownHandler","searchKeydown","searchContainerClickHandler","selectedItemElement","dropdownContainer","selectedItemRemoveElement","selectedItemClick","inputFieldClick","listItemClickHandler","listItemElement","listItemClick","nextListItemElement","elementFromPoint","pageX","pageY","getFirstListElement","setActiveListElement","listItemMousemoveHandler","optionElement","activeListElement","stopImmediatePropagation","createElement","innerHTML","before","default","searchContainer","querySelector","searchPlaceholder","selection","selectionRemoveBtn","searchInputInfo","searchInputItem","searchInputNote","searchInput","searchLoader","dropdownCustomArea","dropdownEmpty","optionGroupHeader","option","add","addListeners","bindInput","removeListeners","blinkRestriction","setDropdownAbove","isFocus","setLoading","setElementLoading","setRemovable","setElementDisabled","isElementDisabled","contains","setDisabled","setAttribute","removeAttribute","setReadonly","openList","setFirstActiveListElement","updatePlaceholder","useMultiplePlaceholder","setPlaceholder","text","setInputInfo","updateInputInfo","setDropdownLabel","setEmpty","selectAll","setSelectionRange","getQuery","isListElementSelected","setListElementSelected","unsetListElementSelected","blur","setMultiple","isMultiple","getSelectedItemElementByItem","getListElementByItem","groupElements","isDataElement","itemElements","createListItemsGroupElement","groupName","itemsGroupElement","cloneNode","itemsGroupHeaderElement","appendChild","createListItemElement","createSelectedItemElement","selectedElement","outerHTML","postRenderSelectedElements","insertSelectedElements","insertSelectedElement","itemElement","insertBefore","removeElement","sortedList","groupNames","updatedGroupElements","groupElement","items_1","updatedItemElementsContainer","some","insertCustomArea","customAreaElement","append","activeSelectedElement","firstListElement","getLastListElement","setNextActiveListElement","isPrevious","nextElement","getSiblingElement","nextGroup","findFirstChildElementWithData","setPreviousActiveListElement","siblingFieldName","firstGroup","lastGroup","findLastChildElementWithData","total","f","childElement","bootstrapStyle","dom_builder_1","style1","Select","_super","localStyle","setParams","__extends","emitEvent","hasProperty","hasFalsyProperty","values","loadListItems","then","valueIsChanged","updateDropdownListItems","selectItems","dispatchValue","close","cachedItems","loadItemsPromise","Promise","resolve","catch","error","reverse","saveOn","selectItem","newItem","newElement","updateValue","updateSelectedElementList","isNewItem","searchItemElement","deselectItem","deselectAllItems","addToSelectedElementList","isRemoveButton","isMultipleEditable","removeSelectedItem","success","itemIndex","dispatchCustomInputEvent","preventDefault","lastSelectedElement"],"mappings":"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","file":"select.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","import { myer } from './myer-array-diff';\n\n/**\n * Merge object by another one. Use default value if new value is undefined or null\n * @param obj\n * @param newObj\n * @param defaults\n * @returns {any}\n */\nexport function mergeWithDefaults(obj, newObj = {}, defaults = {}) {\n    for (let k in newObj) {\n        const newValue = newObj[k];\n\n        if (newObj.hasOwnProperty(k)) {\n            obj[k] = newValue != null ? newValue :  defaults[k]; //(obj[k] != null ? obj[k] : defaults[k]);\n        }\n    }\n    return obj;\n}\n\n/**\n * Return DOM element which is/into container and contains defined class\n *\n * @param {HTMLElement} element\n * @param {HTMLElement} containerElement\n * @param {string} className\n * @returns {HTMLElement}\n */\nexport function getElementContainer(element: HTMLElement, containerElement: HTMLElement = document.body, className?:string) {\n    while (element && element.classList && element.ownerDocument && element.nodeType !== 11 ) { // 11 - DOCUMENT_FRAGMENT_NODE\n        if ((className && element.className.indexOf(className) >= 0) || (!className && element === containerElement)) { // current.classList.contains(className) doesn't work in IE9\n            return element;\n        }\n\n        element = element.parentElement;\n    }\n}\n\n/**\n * Simulate focus/blur events of the inner input element to the outer element\n *\n * @param {HTMLElement} element\n * @param {HTMLElement} inputElement\n * @returns {function} unbind function for listeners.\n */\nexport function bindFocusBlur(element: HTMLElement, inputElement: HTMLElement) {\n    let isFocused, isMousedown, isBlur, shadowHost, parentNode: any = element.parentNode;\n\n    document.addEventListener('click', clickHandler, true);\n    element.addEventListener('mousedown', mousedownHandler, true);\n    element.addEventListener('blur', blurHandler, true);\n    inputElement.addEventListener('focus', focusHandler, true);\n\n    // Check if element is in shadow DOM\n    while (parentNode) {\n        if (parentNode.host) {\n            shadowHost = parentNode.host;\n            break;\n        }\n        parentNode = parentNode.parentNode;\n    }\n\n    function blurHandler(event?) {\n        // console.log('+++ blurHandler', isMousedown);\n        // if (event && event.target.nodeName !== 'INPUT') return; //for IE\n        if (event && event.target !== inputElement) return; //for IE\n\n        isBlur = false;\n        isFocused = false;\n\n        if (isMousedown) {\n            isBlur = true;\n            return;\n        }\n\n        setTimeout(function () {\n            element.dispatchEvent(new Event('blur'));\n            // element.dispatchEvent(new Event('blur', {bubbles: true, composed: true}));\n        });\n    }\n\n    function focusHandler() {\n        // console.log('+++ focusHandler', isFocused);\n        if (!isFocused) {\n            isFocused = true;\n\n            setTimeout(function () {\n                element.dispatchEvent(new Event('focus'));\n            });\n        }\n    }\n\n    function mousedownHandler() {\n        // console.log('+++ mousedownHandler');\n        isMousedown = true;\n    }\n\n    function clickHandler(event) {\n        console.log('+++ clickHandler', !!getElementContainer(event.target, element), event.target, event.target !== inputElement, event.target.nodeName);\n        isMousedown = false;\n\n        const activeElement = shadowHost && event.target === shadowHost ? element : event.target;\n\n        const isSelectElement = !!getElementContainer(activeElement, element);\n\n        if (isBlur && !isSelectElement) {\n            blurHandler();\n        }\n\n        // if (isSelectElement && activeElement.nodeName !== 'INPUT') {\n        if (isSelectElement && activeElement !== inputElement) {\n            setTimeout(function () {\n                inputElement.focus();\n            });\n        }\n\n        if (!isSelectElement && isFocused) {\n            isFocused = false;\n        }\n    }\n\n    return {\n        element: element,\n        inputElement: inputElement,\n        unbind: () => {\n            document.removeEventListener('click', clickHandler, true);\n            element.removeEventListener('mousedown', mousedownHandler, true);\n            element.removeEventListener('blur', blurHandler, true);\n            inputElement.removeEventListener('focus', focusHandler);\n        }\n    }\n\n    // return {\n    //     unbindAll: () => {\n    //         document.removeEventListener('click', clickHandler, true);\n    //         element.removeEventListener('mousedown', mousedownHandler, true);\n    //         element.removeEventListener('blur', blurHandler, true);\n    //         inputElement.removeEventListener('focus', focusHandler);\n    //     },\n    //     bindInput: (newInputElement) => {\n    //         inputElement.removeEventListener('focus', focusHandler);\n    //         inputElement = newInputElement;\n    //         inputElement.addEventListener('focus', focusHandler, true);\n    //     }\n    // }\n\n    // return function () {\n    //     document.removeEventListener('click', clickHandler, true);\n    //     element.removeEventListener('mousedown', mousedownHandler, true);\n    //     element.removeEventListener('blur', blurHandler, true);\n    //     inputElement.removeEventListener('focus', focusHandler, true);\n    // }\n}\n\n/**\n * Sets the selected item in the dropdown menu\n * of available loadedListItems.\n *\n * @param {object} list\n * @param {object} item\n */\nexport function scrollActiveOption(list, item) {\n    let y, height_menu, height_item, scroll, scroll_top, scroll_bottom;\n\n    if (item) {\n        height_menu = list.offsetHeight;\n        height_item = getWidthOrHeight(item, 'height', 'margin'); //outerHeight(true);\n        scroll = list.scrollTop || 0;\n        y = getOffset(item).top - getOffset(list).top + scroll;\n        scroll_top = y;\n        scroll_bottom = y - height_menu + height_item;\n\n        //TODO Make animation\n        if (y + height_item > height_menu + scroll) {\n            list.scrollTop = scroll_bottom;\n        } else if (y < scroll) {\n            list.scrollTop = scroll_top;\n        }\n    }\n}\n\n// Used for matching numbers\nconst core_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\nconst rnumnonpx = new RegExp(\"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\");\n\nfunction augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n    let i = extra === (isBorderBox ? 'border' : 'content') ?\n        // If we already have the right measurement, avoid augmentation\n        4 :\n        // Otherwise initialize for horizontal or vertical properties\n        name === 'width' ? 1 : 0,\n\n        val = 0,\n        cssExpand = ['Top', 'Right', 'Bottom', 'Left'];\n\n    //TODO Use angular.element.css instead of getStyleValue after https://github.com/caitp/angular.js/commit/92bbb5e225253ebddd38ef5735d66ffef76b6a14 will be applied\n    function getStyleValue(name) {\n        return parseFloat(styles[name]);\n    }\n\n    for (; i < 4; i += 2) {\n        // both box models exclude margin, so add it if we want it\n        if (extra === 'margin') {\n            val += getStyleValue(extra + cssExpand[i]);\n        }\n\n        if (isBorderBox) {\n            // border-box includes padding, so remove it if we want content\n            if (extra === 'content') {\n                val -= getStyleValue('padding' + cssExpand[i]);\n            }\n\n            // at this point, extra isn't border nor margin, so remove border\n            if (extra !== 'margin') {\n                val -= getStyleValue('border' + cssExpand[i] + 'Width');\n            }\n        } else {\n            val += getStyleValue('padding' + cssExpand[i]);\n\n            // at this point, extra isn't content nor padding, so add border\n            if (extra !== 'padding') {\n                val += getStyleValue('border' + cssExpand[i] + 'Width');\n            }\n        }\n    }\n\n    return val;\n}\n\nfunction getOffset(elem) {\n    let docElem, win,\n        box = elem.getBoundingClientRect(),\n        doc = elem && elem.ownerDocument;\n\n    if (!doc) {\n        return;\n    }\n\n    docElem = doc.documentElement;\n    win = getWindow(doc);\n\n    return {\n        top: box.top + win.pageYOffset - docElem.clientTop,\n        left: box.left + win.pageXOffset - docElem.clientLeft\n    };\n}\n\nfunction getWindow(elem) {\n    return elem != null && elem === elem.window ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\nfunction getWidthOrHeight(elem, name, extra) {\n    // Start with offset property, which is equivalent to the border-box selectedItems\n    let valueIsBorderBox = true,\n        val = name === 'width' ? elem.offsetWidth : elem.offsetHeight,\n        styles = window.getComputedStyle(elem, null),\n\n        //TODO Make isBorderBox after https://github.com/caitp/angular.js/commit/92bbb5e225253ebddd38ef5735d66ffef76b6a14 will be applied\n        isBorderBox = false; //jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n    // some non-html elements return undefined for offsetWidth, so check for null/undefined\n    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n    if (val <= 0 || val == null) {\n        // Fall back to computed then uncomputed css if necessary\n        val = styles[name];\n\n        if (val < 0 || val == null) {\n            val = elem.style[name];\n        }\n\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n\n        // we need the check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        //valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n    }\n\n    // use the active box-sizing model to add/subtract irrelevant styles\n    return val + augmentWidthOrHeight(elem, name, extra || ( isBorderBox ? \"border\" : \"content\" ), valueIsBorderBox, styles);\n}\n\n/**\n * Calculate free space for menu and return true if need to change menu direction\n * @param toggleElement\n * @param menuElement\n * @param defaultMenuHeightPx\n * @returns {boolean}\n */\nexport function hasNoSpaceBelowForMenu(toggleElement, menuElement, defaultMenuHeightPx = 100) {\n    const spaceAbove = toggleElement.getBoundingClientRect().top;\n    const spaceBelow = window.innerHeight - toggleElement.getBoundingClientRect().bottom;\n    const maxMenuHeight = parseInt(window.getComputedStyle(menuElement)['max-height']) || defaultMenuHeightPx;\n\n    return spaceBelow < maxMenuHeight && spaceBelow < spaceAbove;\n}\n\nexport function groupsIsEmpty(groups) {\n    for (let k in groups) {\n        if (groups.hasOwnProperty(k) && groups[k].length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Find array intersections\n * Equal of lodash _.intersection + getter + invert\n *\n * @param {any[]} xArr\n * @param {any[]} yArr\n * @param {Function} getter\n * @param {boolean} invert\n * @returns {any[]}\n */\nexport function intersection(xArr: any[], yArr: any[], getter?: Function, invert?: boolean): any[] {\n    let i, j, n, filteredX, filteredY, out: any[] = invert ? xArr.slice() : [];\n\n    for (i = 0, n = xArr.length; i < xArr.length; i++) {\n        filteredX = getter ? getter(xArr[i]) : xArr[i];\n\n        for (j = 0; j < yArr.length; j++) {\n            filteredY = getter ? getter(yArr[j]) : yArr[j];\n\n            if (deepEqual(filteredX, filteredY)) {\n                invert ? out.splice(i + out.length - n, 1) : out.push(yArr[j]);\n                break;\n            }\n        }\n    }\n    return out;\n}\n\n/**\n * Deep comparing of two values\n *\n * @param actual\n * @param expected\n * @param {boolean} strict\n * @returns {any}\n */\nfunction deepEqual(actual, expected, strict = true) {\n    if (actual === expected) {\n        return true;\n\n    } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n\n    } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n        return strict ? actual === expected : actual == expected;\n\n    } else {\n        return objEqual(actual, expected, strict);\n    }\n}\n\n/**\n * Deep comparison of two objects\n *\n * @param a\n * @param b\n * @param strict\n * @returns {boolean}\n */\nfunction objEqual(a, b, strict) {\n    let i, key;\n\n    if (a == null || b == null) {\n        return false;\n    }\n\n    if (a.prototype !== b.prototype) return false;\n\n    try {\n        let ka = Object.keys(a),\n            kb = Object.keys(b);\n\n        if (ka.length !== kb.length)\n            return false;\n\n        ka.sort();\n        kb.sort();\n\n        //cheap key test\n        for (i = ka.length - 1; i >= 0; i--) {\n            if (ka[i] != kb[i])\n                return false;\n        }\n\n        //possibly expensive deep test\n        for (i = ka.length - 1; i >= 0; i--) {\n            key = ka[i];\n            if (!deepEqual(a[key], b[key], strict)) return false;\n        }\n\n        return typeof a === typeof b;\n\n    } catch (e) {//happens when one is a string literal and the other isn't\n        return false;\n    }\n}\n\nfunction toString(value) {\n    return String(value !== void 0 ? value : '');\n}\n\n// todo: remove excess chars\nconst rEscapableCharacters = /[-\\/\\\\^$*+?.()|[\\]{}]/g;  // cache escape + match String\nconst sEscapeMatch = '\\\\$&';\n\n/**\n * Escape special chars\n * @param string\n * @returns {string}\n */\nfunction escapeCharacters(string: string) {\n    return string.replace(rEscapableCharacters, sEscapeMatch);\n}\n\n/**\n * Filter items by comparison label (=getLabel(item)) and query\n * asc sorting of result\n *\n * @param items\n * @param query\n * @param {Function} getLabel\n * @param {{fields?: any[]; sort?: (\"asc\" | \"desc\"); strict?: boolean}} options\n * @returns {any[]}\n */\nexport function ascSort(items: any, query: any, getLabel: Function, options: {fields?: any[], sort?: 'asc'|'desc', strict?: boolean} = {}) {\n    let i, j, isFound, item, output, output1 = [], output2 = [], output3 = [],\n        sort = options.sort,\n        strict = options.strict,\n        orderFactor = sort === 'desc' ? -1 : 1,\n        regExpParams = strict ? '' : 'i';\n\n    let getLabelArr: any[] = [getLabel];\n\n    if (options.fields) {\n        getLabelArr = options.fields.map(field => typeof field === 'function' ? field : item => deepFind(item, field, true))\n    }\n\n    getLabel = getLabelArr[0];\n\n    if (query !== '' && getLabel) {\n        const safeQuery = escapeCharacters(toString(query));\n        const matchRegExp = new RegExp(safeQuery, regExpParams);\n        const firstMatchRegExp = new RegExp('^' + safeQuery, regExpParams);\n\n        // Filtering\n        for (i = 0, isFound = false; i < items.length; i++) {\n            item = items[i];\n\n            for (j = 0; j < getLabelArr.length; j++) {\n                const label = getLabelArr[j](item);\n\n                isFound = label === query || !strict && label == query || query !== undefined && matchRegExp.test(toString(label));\n\n                if (isFound) break;\n            }\n\n            if (isFound) {\n                output1.push(item);\n            }\n        }\n\n        if (sort) {\n            output = output1;\n\n        } else {\n            // Place items starting with query on the top of list\n            for (i = 0; i < output1.length; i++) {\n                item = output1[i];\n\n                if (firstMatchRegExp.test(toString(getLabel(item)))) {\n                    output2.push(item);\n                } else {\n                    output3.push(item);\n                }\n            }\n            output = output2.concat(output3);\n        }\n\n    } else {\n        output = [].concat(items);\n    }\n\n    if (sort) {\n        output = output.sort((A, B) => toString(getLabel(A)).localeCompare(toString(getLabel(B))) * orderFactor);\n    }\n\n    return output;\n}\n\n/**\n * Transform flat loadedListItems array to groupped object\n *\n * Example:\n * const loadedListItems = [{t: 'A', g: 'x'}, {t: 'B', g: 'x'}, {t: 'C'}]\n * const getter = (option) => option.g\n *\n * groupOptions(loadedListItems, getter)\n * // Result: {'x': [{t: 'A', g: 'x'}, {t: 'B', g: 'x'}], '': [{t: 'C'}]}\n *\n * @param {Array} options\n * @param {(option) => string} groupNameGetter\n * @returns {{: Array}}\n */\nexport function distributeOptionsByGroup(options = [], groupNameGetter = (item) => '') {\n    let optionGroups = {'':[]},\n        optionGroupName,\n        optionGroup;\n\n    for (let i = 0; i < options.length; i++) {\n        optionGroupName = groupNameGetter(options[i]) || '';\n\n        if (!(optionGroup = optionGroups[optionGroupName])) {\n            optionGroup = optionGroups[optionGroupName] = [];\n        }\n        optionGroup.push(options[i]);\n    }\n\n    return optionGroups;\n}\n\nexport function findIndex(items = [], item, trackByGetter = (item) => item) {\n    for (let i = 0; i < items.length; i++) {\n        if (trackByGetter(items[i]) === trackByGetter(item)) {\n            return i;\n        }\n    }\n}\n\nexport function removeChildren(element) {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n}\n\n/**\n *\n * @param {HTMLElement} containerElement\n * @param {any[]} newItems\n * @param {(item) => Element} elementConstructor\n * @param {Function} trackFieldGetter\n * @param {boolean} appendUndefinedItems - place undefined items to the end of list (they prepend by default)\n * @returns {HTMLElement} containerElement with changes\n */\nexport function updateElements(containerElement: HTMLElement, newItems: any[], elementConstructor: (item) => Element, trackFieldGetter?: Function, appendUndefinedItems?: boolean) {\n    const elementsArr = Array.from(containerElement.children);\n    const track = (item) => {\n        const id = item !== undefined && (trackFieldGetter ? trackFieldGetter(item) : item);\n\n        if (id || id === 0) return id;\n    };\n    const uncountableElementId = new Error('Uncountable element'); // We use this id for interface (no data) elements\n    let newItemIds,\n        itemsMap,\n        oldItemIds;\n\n    if (trackFieldGetter) {\n        oldItemIds = elementsArr.map((element: any) => element.hasOwnProperty('data') ? track(element.data) : uncountableElementId);\n        newItemIds = [];\n        itemsMap = new Map(); //trackFieldGetter can return original item by default\n        newItems.forEach(item => {\n            const itemId = track(item);\n\n            itemsMap.set(itemId, item); // Save item for fast later retrieval\n            newItemIds.push(itemId);\n        });\n\n    } else {\n        oldItemIds = elementsArr.map((element: any) => element.hasOwnProperty('data') ? element.data : uncountableElementId);\n        newItemIds = newItems.slice();\n    }\n\n    // Make undefined items for elements which are out of the list (have no data)\n    oldItemIds.forEach((oldElementId: any) => {\n        if (oldElementId === uncountableElementId) {\n            newItemIds[appendUndefinedItems ? 'push' : 'unshift'](uncountableElementId);\n        } else {\n            appendUndefinedItems = true;\n        }\n    });\n\n    const instructions = myer.diff(oldItemIds, newItemIds);\n    const operations = instructions.map(args => { //convert id to element for insert operations\n        if (args.hasOwnProperty(2)) { //if we have ids for new elements\n            return args.map((arg, i) => i < 2 ? arg : elementConstructor(itemsMap ? itemsMap.get(arg) : arg));\n        }\n        return args;\n    });\n\n    operations.forEach(operation => {\n        if (operation.hasOwnProperty(1)) {\n            removeElements(containerElement, operation[0], operation[1]);\n        }\n\n        if (operation.hasOwnProperty(2)) {\n            addElements(containerElement, operation[0], operation.slice(2))\n        }\n    });\n\n    return containerElement;\n}\n\nfunction removeElements(containerElement, startIndex, amount) {\n    const children = containerElement.children;\n\n    for (let i = 0; i < amount; i++) {\n        children[startIndex].remove();\n    }\n}\n\nfunction addElements(containerElement, startIndex, newElements) {\n    const children = containerElement.children;\n\n    if (startIndex) {\n        children[startIndex - 1].after.apply(children[startIndex - 1], newElements);\n    } else {\n        containerElement.prepend.apply(containerElement, newElements)\n    }\n}\n\n/**\n * Replace field value in deep object\n *\n * @param oldVal\n * @param newVal\n * @param {Object} object\n * @returns {{} & Object}\n */\nexport function deepReplace(oldVal: any, newVal: any, object: object) {\n    const newObject = copy(object);\n\n    Object.keys(object).forEach(key => {\n        const val = object[key];\n\n        if (val === oldVal) {\n            newObject[key] = newVal;\n\n        } else if (val != null && typeof val === 'object') {\n            newObject[key] = deepReplace(oldVal, newVal, val);\n        }\n    });\n\n    return newObject;\n}\n\n/**\n * Deep copy\n *\n * @param {Object} obj\n * @returns {Array | {}}\n */\nfunction copy(obj: object) {\n    const clone = {};\n\n    for(let i in obj) {\n        if (obj[i] != null && typeof obj[i] === 'object') {\n            clone[i] = copy(obj[i]);\n        } else {\n            clone[i] = obj[i];\n        }\n    }\n    return clone;\n}\n\n/**\n * Find value in object by path\n *\n * Example:\n * deepFind({a: {b: 1}}, 'a.b') //1\n *\n * @param {Object} obj\n * @param {string} path\n * @param {boolean} originalIfNotFound\n * @returns {any}\n */\nexport function deepFind(obj: any, path: string, originalIfNotFound?: boolean) {\n    if (!path || typeof obj !== 'object') return originalIfNotFound ? obj : undefined;\n\n    const paths = path.split('.');\n    let i, current = obj;\n\n    for (i = 0; i < paths.length; ++i) {\n        if (current[paths[i]] == undefined) {\n            return undefined;\n        } else {\n            current = current[paths[i]];\n        }\n    }\n    return current;\n}\n\n/**\n * Highlight `substr` in `str` by `<mark>` or custom tag\n *\n * @param {string} str\n * @param {string} substr\n * @param {string} tagName. `mark` by default\n * @returns {string} highlighted string\n */\nexport function highlight(str: string = '', substr: string = '', tagName?: string) {\n    const tagTemplate = tagName ? `<${tagName}>$&</${tagName}>` : `<mark>$&</mark>`;\n    let html = str;\n\n    substr = String(substr);\n\n    if (substr.length > 0) {\n        str = String(str);\n        substr = escapeCharacters(substr);\n\n        html = str.replace(new RegExp(substr, 'gi'), tagTemplate);\n    }\n\n    return html;\n}\n\n/**\n * Debounce and extract target value from event\n * Useful for shadow-dom case when universal debounce works incorrect\n * @param fn\n * @param timeout\n * @returns {(e) => any}\n */\nexport function debounceEventValue(fn, timeout) {\n    let timer = null;\n\n    return function (e) {\n        // Save `e.target.value` to value because `e` will be changed in shadow-dom case\n        const value = e.target.value;\n        const onComplete = () => {\n            fn.call(this, value);\n            timer = null;\n        };\n\n        if (timer) {\n            clearTimeout(timer);\n        }\n\n        timer = setTimeout(onComplete, timeout);\n    };\n}\n\n// Getters\nexport function getItemsByField(fields: any, items: any[], fieldGetter: Function) {\n    fields = Array.isArray(fields) ? fields : [fields];\n\n    return fields.map(field => {\n        return items.find(item => fieldGetter(item) === field);\n    }).filter(item => item);\n}\n\nexport const noopPipe = (item?) => item;\nexport const noop = (item?) => {};\n\n\n/**\n * Cache value for '' query and last value\n */\nexport class QueryCache {\n    private cache: {q: string, v: any, t: number}[] = [];\n\n    get(query: string = '') {\n        return this.getValue(this.cache.find(cacheItem => cacheItem.q === query));\n    }\n\n    getLast() {\n        return this.getValue(this.cache[0]);\n    }\n\n    set(query: string = '', value: any) {\n        // Remove duplicates, remove all except ''\n        this.cache = this.cache.filter(cacheItem => cacheItem.q !== query && cacheItem.q === '');\n\n        this.cache.unshift({q: query, v: value, t: (new Date().getTime())})\n    }\n\n    clear() {\n        this.cache = [];\n    }\n\n    private getValue(cacheItem) {\n        if (cacheItem) {\n            return cacheItem.v;\n        }\n    }\n}\n\n","/**\n * Array Diff\n *\n * Based on https://github.com/google/diff-match-patch\n *\n * This library implements Myer's diff algorithm which is generally considered to be the best general-purpose diff.\n * A layer of pre-diff speedups and post-diff cleanups surround the diff algorithm, improving both performance and output quality.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a editor prescription.\n * Applies the prescription onto another text, allowing for errors.\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n    // Defaults.\n    // Redefine these in your program to override the defaults.\n\n    // Number of seconds to map a diff before giving up (0 for infinity).\n    this.Diff_Timeout = 1.0;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nconst DIFF_DELETE = -1;\nconst DIFF_INSERT = 1;\nconst DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_deadline) {\n    // Set a deadline by which time the diff must be complete.\n    if (typeof opt_deadline === 'undefined') {\n        if (this.Diff_Timeout <= 0) {\n            opt_deadline = Number.MAX_VALUE;\n        } else {\n            opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n        }\n    }\n    const deadline = opt_deadline;\n\n    // Check for null inputs.\n    if (text1 === null || text2 === null) {\n        throw new Error('Null input. (diff_main)');\n    }\n\n    // Check for equality (speedup).\n    if (text1 === text2) {\n        if (text1.length) {\n            return [[DIFF_EQUAL, text1]];\n        }\n        return [];\n    }\n\n    // Trim off common prefix (speedup).\n    let commonlength = this.diff_commonPrefix(text1, text2);\n\n    const commonprefix = text1.slice(0, commonlength);\n    text1 = text1.slice(commonlength);\n    text2 = text2.slice(commonlength);\n\n    // Trim off common suffix (speedup).\n    commonlength = this.diff_commonSuffix(text1, text2);\n    const commonsuffix = text1.slice(text1.length - commonlength);\n    text1 = text1.slice(0, text1.length - commonlength);\n    text2 = text2.slice(0, text2.length - commonlength);\n\n    // Compute the diff on the middle block.\n    const diffs = this.diff_compute_(text1, text2, deadline);\n\n    // Restore the prefix and suffix.\n    if (commonprefix.length) {\n        diffs.unshift([DIFF_EQUAL, commonprefix]);\n    }\n    if (commonsuffix.length) {\n        diffs.push([DIFF_EQUAL, commonsuffix]);\n    }\n    this.diff_cleanupMerge(diffs);\n    return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, deadline) {\n    let diffs;\n\n    if (!text1.length) {\n        // Just add some text (speedup).\n        return [[DIFF_INSERT, text2]];\n    }\n\n    if (!text2.length) {\n        // Just delete some text (speedup).\n        return [[DIFF_DELETE, text1]];\n    }\n\n    const longtext = text1.length > text2.length ? text1 : text2;\n    const shorttext = text1.length > text2.length ? text2 : text1;\n    let i = this.find_csa(longtext, shorttext);\n    if (i !== -1) {\n        // Shorter text is inside the longer text (speedup).\n        //console.log();\n        diffs = [[DIFF_INSERT, longtext.slice(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.slice(i + shorttext.length)]];\n\n        // Swap insertions for deletions if diff is reversed.\n        if (text1.length > text2.length) {\n            diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n        }\n\n        // Remove diff with empty value\n        if (!diffs[0][1].length) {\n            diffs.shift();\n        }\n\n        return diffs;\n    }\n\n    if (shorttext.length === 1) {\n        // Single character string.\n        // After the previous speedup, the character can't be an equality.\n        return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n    }\n\n    // Check to see if the problem can be split in two.\n    const hm = this.diff_halfMatch_(text1, text2);\n    if (hm) {\n        // A half-match was found, sort out the return data.\n        const text1_a = hm[0];\n        const text1_b = hm[1];\n        const text2_a = hm[2];\n        const text2_b = hm[3];\n        const mid_common = hm[4];\n        // Send both pairs off for separate processing.\n        const diffs_a = this.diff_main(text1_a, text2_a, deadline);\n        const diffs_b = this.diff_main(text1_b, text2_b, deadline);\n        // Merge the results.\n        return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n    }\n\n    return this.diff_bisect_(text1, text2, deadline);\n};\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n    // Cache the text lengths to prevent multiple calls.\n    const text1_length = text1.length;\n    const text2_length = text2.length;\n    const max_d = Math.ceil((text1_length + text2_length) / 2);\n    const v_offset = max_d;\n    const v_length = 2 * max_d;\n    const v1 = new Array(v_length);\n    const v2 = new Array(v_length);\n    // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n    // integers and undefined.\n    for (let x = 0; x < v_length; x++) {\n        v1[x] = -1;\n        v2[x] = -1;\n    }\n    v1[v_offset + 1] = 0;\n    v2[v_offset + 1] = 0;\n    const delta = text1_length - text2_length;\n    // If the total number of characters is odd, then the front path will collide\n    // with the reverse path.\n    const front = (delta % 2 !== 0);\n    // Offsets for start and end of k loop.\n    // Prevents mapping of space beyond the grid.\n    let k1start = 0;\n    let k1end = 0;\n    let k2start = 0;\n    let k2end = 0;\n    for (let d = 0; d < max_d; d++) {\n        // Bail out if deadline is reached.\n        if ((new Date()).getTime() > deadline) {\n            break;\n        }\n\n        // Walk the front path one step.\n        for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n            const k1_offset = v_offset + k1;\n            let x1;\n            if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n                x1 = v1[k1_offset + 1];\n            } else {\n                x1 = v1[k1_offset - 1] + 1;\n            }\n            let y1 = x1 - k1;\n            while (x1 < text1_length && y1 < text2_length && text1[x1] === text2[y1]) {\n                x1++;\n                y1++;\n            }\n            v1[k1_offset] = x1;\n            if (x1 > text1_length) {\n                // Ran off the right of the graph.\n                k1end += 2;\n            } else if (y1 > text2_length) {\n                // Ran off the bottom of the graph.\n                k1start += 2;\n            } else if (front) {\n                let k2_offset = v_offset + delta - k1;\n                if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n                    // Mirror x2 onto top-left coordinate system.\n                    let x2 = text1_length - v2[k2_offset];\n                    if (x1 >= x2) {\n                        // Overlap detected.\n                        return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n                    }\n                }\n            }\n        }\n\n        // Walk the reverse path one step.\n        for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n            const k2_offset = v_offset + k2;\n            let x2;\n            if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n                x2 = v2[k2_offset + 1];\n            } else {\n                x2 = v2[k2_offset - 1] + 1;\n            }\n            let y2 = x2 - k2;\n            while (x2 < text1_length && y2 < text2_length &&\n            text1[text1_length - x2 - 1] === text2[text2_length - y2 - 1]) {\n                x2++;\n                y2++;\n            }\n            v2[k2_offset] = x2;\n            if (x2 > text1_length) {\n                // Ran off the left of the graph.\n                k2end += 2;\n            } else if (y2 > text2_length) {\n                // Ran off the top of the graph.\n                k2start += 2;\n            } else if (!front) {\n                const k1_offset = v_offset + delta - k2;\n                if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n                    let x1 = v1[k1_offset];\n                    let y1 = v_offset + x1 - k1_offset;\n                    // Mirror x2 onto top-left coordinate system.\n                    x2 = text1_length - x2;\n                    if (x1 >= x2) {\n                        // Overlap detected.\n                        return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n                    }\n                }\n            }\n        }\n    }\n    // Diff took too long and hit the deadline or\n    // number of diffs equals number of characters, no commonality at all.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y, deadline) {\n    const text1a = text1.slice(0, x);\n    const text2a = text2.slice(0, y);\n    const text1b = text1.slice(x);\n    const text2b = text2.slice(y);\n\n    // Compute both diffs serially.\n    const diffs = this.diff_main(text1a, text2a, deadline);\n    const diffsb = this.diff_main(text1b, text2b, deadline);\n    return diffs.concat(diffsb);\n};\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n    // Quick check for common null cases.\n    if (!text1.length || !text2.length || text1[0] !== text2[0]) {\n        return 0;\n    }\n    // Binary search.\n    // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n    let pointermin = 0;\n    let pointermax = Math.min(text1.length, text2.length);\n    let pointermid = pointermax;\n    let pointerstart = 0;\n    while (pointermin < pointermid) {\n        if (text1.slice(pointerstart, pointermid) === text2.slice(pointerstart, pointermid)) {\n            pointermin = pointermid;\n            pointerstart = pointermin;\n        } else {\n            pointermax = pointermid;\n        }\n        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n    }\n    return pointermid;\n};\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n    // Quick check for common null cases.\n    if (!text1.length || !text2.length ||\n        text1[text1.length - 1] !== text2[text2.length - 1]) {\n        return 0;\n    }\n    // Binary search.\n    // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n    let pointermin = 0;\n    let pointermax = Math.min(text1.length, text2.length);\n    let pointermid = pointermax;\n    let pointerend = 0;\n    while (pointermin < pointermid) {\n        if (this.compare_arrays(text1.slice(text1.length - pointermid, text1.length - pointerend), text2.slice(text2.length - pointermid, text2.length - pointerend))) {\n            pointermin = pointermid;\n            pointerend = pointermin;\n        } else {\n            pointermax = pointermid;\n        }\n        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n    }\n    return pointermid;\n};\n\n/**\n * Do the two texts share a slice which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n    if (this.Diff_Timeout <= 0) {\n        // Don't risk returning a non-optimal diff if we have unlimited time.\n        return null;\n    }\n    var longtext = text1.length > text2.length ? text1 : text2;\n    var shorttext = text1.length > text2.length ? text2 : text1;\n    if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n        return null;  // Pointless.\n    }\n    var dmp = this;  // 'this' becomes 'window' in a closure.\n\n    /**\n     * Does a slice of shorttext exist within longtext such that the slice\n     * is at least half the length of longtext?\n     * Closure, but does not reference any external variables.\n     * @param {string} longtext Longer string.\n     * @param {string} shorttext Shorter string.\n     * @param {number} i Start index of quarter length slice within longtext.\n     * @return {Array.<string>} Five element Array, containing the prefix of\n     *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n     *     of shorttext and the common middle.  Or null if there was no match.\n     * @private\n     */\n    function diff_halfMatchI_(longtext, shorttext, i) {\n        // Start with a 1/4 length slice at position i as a seed.\n        const seed = longtext.slice(i, i + Math.floor(longtext.length / 4));\n        let j = -1;\n        let best_common = [];\n        let best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n\n        while ((j = dmp.find_csa(shorttext, seed, j + 1)) !== -1) {\n            const prefixLength = dmp.diff_commonPrefix(longtext.slice(i), shorttext.slice(j));\n            const suffixLength = dmp.diff_commonSuffix(longtext.slice(0, i), shorttext.slice(0, j));\n            if (best_common.length < suffixLength + prefixLength) {\n                best_common = shorttext.slice(j - suffixLength, j);\n                best_common.push.apply(best_common, shorttext.slice(j, j + prefixLength));\n                best_longtext_a = longtext.slice(0, i - suffixLength);\n                best_longtext_b = longtext.slice(i + prefixLength);\n                best_shorttext_a = shorttext.slice(0, j - suffixLength);\n                best_shorttext_b = shorttext.slice(j + prefixLength);\n            }\n        }\n        if (best_common.length * 2 >= longtext.length) {\n            //console.log(best_common);\n            return [best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b, best_common];\n        } else {\n            return null;\n        }\n    }\n\n    // First check if the second quarter is the seed for a half-match.\n    const hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n    // Check again based on the third quarter.\n    const hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n    let hm;\n    if (!hm1 && !hm2) {\n        return null;\n    } else if (!hm2) {\n        hm = hm1;\n    } else if (!hm1) {\n        hm = hm2;\n    } else {\n        // Both matched.  Select the longest.\n        hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n    }\n\n    // A half-match was found, sort out the return data.\n    let text1_a, text1_b, text2_a, text2_b;\n    if (text1.length > text2.length) {\n        text1_a = hm[0];\n        text1_b = hm[1];\n        text2_a = hm[2];\n        text2_b = hm[3];\n    } else {\n        text2_a = hm[0];\n        text2_b = hm[1];\n        text1_a = hm[2];\n        text1_b = hm[3];\n    }\n    const mid_common = hm[4];\n    return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n    diffs.push([DIFF_EQUAL, []]);  // Add a dummy entry at the end.\n    var pointer = 0;\n    var count_delete = 0;\n    var count_insert = 0;\n    var text_delete = [];\n    var text_insert = [];\n    var commonlength;\n    while (pointer < diffs.length) {\n        switch (diffs[pointer][0]) {\n            case DIFF_INSERT:\n                count_insert++;\n                text_insert.push.apply(text_insert, diffs[pointer][1]);\n                pointer++;\n                break;\n            case DIFF_DELETE:\n                count_delete++;\n                text_delete.push.apply(text_delete, diffs[pointer][1]);\n                pointer++;\n                break;\n            case DIFF_EQUAL:\n                // Upon reaching an equality, check for prior redundancies.\n                if (count_delete + count_insert > 1) {\n                    if (count_delete !== 0 && count_insert !== 0) {\n                        // Factor out any common prefixies.\n                        commonlength = this.diff_commonPrefix(text_insert, text_delete);\n                        if (commonlength !== 0) {\n                            const diffItem = diffs[pointer - count_delete - count_insert - 1];\n\n                            if ((pointer - count_delete - count_insert) > 0 && diffItem[0] === DIFF_EQUAL) {\n                                diffItem[1].push.apply(diffItem[1], text_insert.slice(0, commonlength));\n                            } else {\n                                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.slice(0, commonlength)]);\n                                pointer++;\n                            }\n                            text_insert = text_insert.slice(commonlength);\n                            text_delete = text_delete.slice(commonlength);\n                        }\n                        // Factor out any common suffixies.\n                        commonlength = this.diff_commonSuffix(text_insert, text_delete);\n                        if (commonlength !== 0) {\n                            const diffItem = diffs[pointer][1];\n                            diffItem.unshift.apply(diffItem, text_insert.slice(text_insert.length - commonlength));\n                            text_insert = text_insert.slice(0, text_insert.length - commonlength);\n                            text_delete = text_delete.slice(0, text_delete.length - commonlength);\n                        }\n                    }\n                    // Delete the offending records and add the merged ones.\n                    if (count_delete === 0) {\n                        diffs.splice(pointer - count_insert, count_delete + count_insert, [DIFF_INSERT, text_insert]);\n                    } else if (count_insert === 0) {\n                        diffs.splice(pointer - count_delete, count_delete + count_insert, [DIFF_DELETE, text_delete]);\n                    } else {\n                        diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n                    }\n                    pointer = pointer - count_delete - count_insert +\n                        (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n                } else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n                    // Merge this equality with the previous one.\n                    const prevDiffValues = diffs[pointer - 1][1];\n                    const diffValues = diffs[pointer][1];\n\n                    prevDiffValues.push.apply(prevDiffValues, diffValues.splice(1, diffValues.length));\n                    diffs.splice(pointer, 1);\n                } else {\n                    pointer++;\n                }\n                count_insert = 0;\n                count_delete = 0;\n                text_delete = [];\n                text_insert = [];\n                break;\n        }\n    }\n    if (!diffs[diffs.length - 1][1].length) {\n        diffs.pop();  // Remove the dummy entry at the end.\n    }\n\n    // Second pass: look for single edits surrounded on both sides by equalities\n    // which can be shifted sideways to eliminate an equality.\n    // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n    var changes = false;\n    pointer = 1;\n    // Intentionally ignore the first and last element (don't need checking).\n    while (pointer < diffs.length - 1) {\n        if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n            // This is a single edit surrounded by equalities.\n            if (diffs[pointer][1].slice(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n                // Shift the edit over the previous equality.\n                diffs[pointer][1] = diffs[pointer - 1][1] +\n                    diffs[pointer][1].slice(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n                diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n                diffs.splice(pointer - 1, 1);\n                changes = true;\n            } else if (diffs[pointer][1].slice(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n                // Shift the edit over the next equality.\n                const prevDiffValues = diffs[pointer - 1][1];\n                prevDiffValues.push.apply(prevDiffValues, diffs[pointer + 1][1]);\n                diffs[pointer][1] =\n                    diffs[pointer][1].slice(diffs[pointer + 1][1].length) +\n                    diffs[pointer + 1][1];\n                diffs.splice(pointer + 1, 1);\n                changes = true;\n            }\n        }\n        pointer++;\n    }\n    // If shifts were made, the diff needs reordering and another shift sweep.\n    if (changes) {\n        this.diff_cleanupMerge(diffs);\n    }\n};\n\n/**\n * Find subarray in array\n * @param arr\n * @param subarr\n * @param from_index\n * @returns {*}\n */\ndiff_match_patch.prototype.find_csa = function(arr, subarr, from_index) {\n    let i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i<l; i++) {\n        for (let j=0; j<sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\n/**\n * Compare two arrays\n * @param arr1\n * @param arr2\n * @returns {boolean}\n */\ndiff_match_patch.prototype.compare_arrays = function(arr1, arr2) {\n    let i = arr1.length;\n\n    if (i !== arr2.length) return false;\n\n    while (i--) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true\n};\n\ndiff_match_patch.prototype.transform_to_splice_arguments = function(diffs) {\n    const sDiffs = [];\n\n    for (let i = 0, cursor = 0; i < diffs.length; i++) {\n        const diff = diffs[i];\n        const sDiff = [cursor];\n\n        switch (diff[0]) {\n            case DIFF_INSERT:\n                const newItems = diff[1];\n                sDiff.push(0);\n                sDiff.push.apply(sDiff, newItems);\n                cursor += newItems.length;\n                sDiffs.push(sDiff);\n                break;\n\n            case DIFF_DELETE:\n                sDiff.push(diff[1].length);\n\n                const nextDiff = diffs[i + 1];\n                if (nextDiff && nextDiff[0] === DIFF_INSERT) {\n                    const newItems = nextDiff[1];\n                    sDiff.push.apply(sDiff, newItems);\n                    i++;\n                    cursor += newItems.length;\n                }\n                sDiffs.push(sDiff);\n                break;\n\n            case DIFF_EQUAL:\n                cursor += diff[1].length;\n                break;\n        }\n    }\n\n    return sDiffs;\n};\n\n/**\n * Make editor prescriptions to transform one array to another. What element should be removed, what - added\n * - Arrays should contain unique elements\n * - Optimised for arrays with minimum differences\n * - Instruction has format like splice arguments [index, deleteCount, newItem]\n *\n * Example:\n *\n *   const instructions = getTransformInstructions(oldArr, newArr)\n *\n *   // Transform oldArr to newArr by instructions\n *   instructions.forEach(args => oldArr.splice.apply(oldArr, args))\n *\n * @param oldArr\n * @param newArr\n * @param deadline Optional time when the diff should be complete by.\n * @returns {[number , number , any, ...][]} List of editor prescriptions (arguments for splice method)\n */\ndiff_match_patch.prototype.diff = function(oldArr, newArr, deadline) {\n    return this.transform_to_splice_arguments(this.diff_main(oldArr, newArr, deadline));\n};\n\nexport const myer = new diff_match_patch();","export default \"<!--<div class=\\\"select-search\\\">-->\\n    <!--<div class=\\\"select-search-placeholder\\\"></div>-->\\n    <!--<div class=\\\"select-search-list\\\">-->\\n        <!--<div class=\\\"list\\\">-->\\n            <!--<div class=\\\"select-search-list-item select-search-list-item_selection\\\">-->\\n                <!--&lt;!&ndash; selected option text &ndash;&gt;-->\\n                <!--<span class=\\\"close\\\">×</span>-->\\n            <!--</div>-->\\n        <!--</div>-->\\n\\n        <!--<div class=\\\"select-search-list-item select-search-list-item_input\\\"><span class=\\\"select-search-list-item_input-note\\\"></span><input autocomplete=\\\"off\\\"/></div>-->\\n        <!--<div class=\\\"select-search-list-item select-search-list-item_loader\\\"></div>-->\\n    <!--</div>-->\\n<!--</div>-->\\n<!--<div class=\\\"select-dropdown\\\">-->\\n    <!--<div class=\\\"select-dropdown-custom\\\"></div>-->\\n    <!--<div class=\\\"select-dropdown-empty\\\"></div>-->\\n    <!--<div class=\\\"select-dropdown-list\\\">-->\\n        <!--<div class=\\\"select-dropdown-list-optgroup\\\">-->\\n            <!--<div class=\\\"select-dropdown-list-optgroup-header\\\">-->\\n                <!--&lt;!&ndash; list option header text &ndash;&gt;-->\\n            <!--</div>-->\\n            <!--<div class=\\\"select-dropdown-list-optgroup-option\\\">-->\\n                <!--&lt;!&ndash; list option text &ndash;&gt;-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    <!--</div>-->\\n<!--</div>-->\\n\\n<!--<div class=\\\"select-search\\\">-->\\n    <!--<div class=\\\"select-search-placeholder\\\"></div>-->\\n    <!--<div class=\\\"select-search-list\\\">-->\\n        <!--<div class=\\\"select-search-list-item select-search-list-item_selection\\\">-->\\n            <!--&lt;!&ndash; selected option text &ndash;&gt;-->\\n            <!--<span class=\\\"close\\\">×</span>-->\\n        <!--</div>-->\\n    <!--</div>-->\\n    <!--<div class=\\\"select-search-list-item select-search-list-item_input\\\"><span class=\\\"select-search-list-item_input-note\\\"></span><input autocomplete=\\\"off\\\"/></div>-->\\n    <!--<div class=\\\"select-search-list-item select-search-list-item_loader\\\"></div>-->\\n<!--</div>-->\\n<!--<div class=\\\"select-dropdown\\\">-->\\n    <!--<div class=\\\"select-dropdown-custom\\\"></div>-->\\n    <!--<div class=\\\"select-dropdown-empty\\\"></div>-->\\n    <!--<div class=\\\"select-dropdown-list\\\">-->\\n        <!--<div class=\\\"select-dropdown-list-optgroup\\\">-->\\n            <!--<div class=\\\"select-dropdown-list-optgroup-header\\\">-->\\n                <!--&lt;!&ndash; list option header text &ndash;&gt;-->\\n            <!--</div>-->\\n            <!--<div class=\\\"select-dropdown-list-optgroup-option\\\">-->\\n                <!--&lt;!&ndash; list option text &ndash;&gt;-->\\n            <!--</div>-->\\n        <!--</div>-->\\n    <!--</div>-->\\n<!--</div>-->\\n\\n<!-- TODO use display: contents when full providing appears https://javascript.ru/forum/showthread.php?p=492068#post492068 -->\\n\\n<div class=\\\"select-search\\\">\\n    <div class=\\\"select-search-placeholder\\\"></div>\\n    <div class=\\\"select-search-list\\\">\\n        <div class=\\\"select-search-list-item select-search-list-item_selection\\\">\\n            <!-- selected option text -->\\n            <span class=\\\"close\\\">×</span>\\n        </div>\\n        <div class=\\\"select-search-list-item select-search-list-item_info\\\">123</div>\\n        <div class=\\\"select-search-list-item select-search-list-item_input\\\"><span class=\\\"select-search-list-item_input-note\\\"></span><input autocomplete=\\\"off\\\"/></div>\\n        <div class=\\\"select-search-list-item select-search-list-item_loader\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"select-dropdown\\\">\\n    <div class=\\\"select-dropdown-custom\\\"></div>\\n    <div class=\\\"select-dropdown-empty\\\"></div>\\n    <div class=\\\"select-dropdown-list\\\">\\n        <div class=\\\"select-dropdown-list-optgroup\\\">\\n            <div class=\\\"select-dropdown-list-optgroup-header\\\">\\n                <!-- list option header text -->\\n            </div>\\n            <div class=\\\"select-dropdown-list-optgroup-option\\\">\\n                <!-- list option text -->\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","import template from './select.html';\n\nimport {\n    intersection,\n    ascSort,\n    distributeOptionsByGroup,\n    getElementContainer,\n    findIndex,\n    removeChildren,\n    getItemsByField,\n    deepReplace,\n    bindFocusBlur,\n    scrollActiveOption,\n    updateElements,\n    hasNoSpaceBelowForMenu,\n    debounceEventValue,\n    noopPipe,\n    noop\n} from './utils';\n\nconst CssClass = {\n    select             : 'base-select',\n    open               : 'open',\n    multiple           : 'multiple',\n    active             : 'active',\n    focused            : 'focused',\n    loading            : 'loading',\n    removable          : 'removable',\n    selected           : 'selected',\n    readonly           : 'readonly',\n    disabled           : 'disabled',\n    limited            : 'limited',\n    above              : 'above',\n    hide               : 'hide',\n    selectedItem       : 'select-search-list-item_selection',\n    inputNote          : 'select-search-list-item_input-note',\n    selectedItemRemove : 'close',\n    listItem           : 'select-dropdown-list-optgroup-option',\n};\n\nconst ADD_CLASS_METHOD_NAME = 'add';\nconst REMOVE_CLASS_METHOD_NAME = 'remove';\n\nexport abstract class SelectDom {\n    paramsDefault: any = {\n        multiple: false,\n        readonly: false,\n        placeholder: 'Select',\n        multiplePlaceholder: 'Add', //''\n        emptyDropdownLabel: 'Not found',\n\n        // Basic\n        openByRemove: true,\n        openByActiveRemove: true,\n        openByInputClick: true,\n        closeByRemove: true,\n        closeBySelect: true,\n        activeByOpen: true,\n\n        // Complex\n        keepOpened: false,\n        removable: false,\n        hideSelected: true,\n\n        // Models\n        value: undefined,\n        items: [],\n\n        getItems: (query?: any, selectedItemsForQuery?: any[]) => [],\n        getItemsByValue: undefined, //(value?) => [],\n\n        // Fields\n        valueField: undefined,\n        groupField: undefined,\n        searchField: undefined, //Field for search and edit\n        trackField: undefined,\n        disabledField: undefined,\n        dropdownItemLabelField: undefined,\n        selectedItemLabelField: undefined,\n\n        // Getters\n        valueFieldGetter: noopPipe, //private\n        searchFieldGetter: noopPipe,\n        trackFieldGetter: noopPipe,\n        disabledFieldGetter: noop,\n        selectedItemLabelGetter: noopPipe,\n        dropdownItemLabelGetter: noopPipe,\n        groupLabelGetter: noopPipe,\n        groupFieldGetter: (item) => '',\n        customAreaGetter: noop,\n        infoGetter: (hiddenItemsNumber) => '',\n\n        // New item\n        creatable: false, //{id: null, name: $query, category: 'shoes'}\n        createItemFn: noopPipe, //addItem($query)\n        removeItemFn: noopPipe, //removeItem($item)\n        saveTrigger: 'enter blur space . , ;', //no space\n\n        editable: true,\n        editItemFn: noopPipe,\n\n        // Misc\n        multipleVisibleLimit: Infinity,\n        multipleLimit: Infinity,\n        multipleLimitBlinkDelay: 150,\n        debounce: 200,\n        useCache: true,\n        rotateList: true,\n        position: undefined,\n\n        debug: false\n\n        // oneLine\n        // extraFilter\n        // myGroupFilter +/-\n        // validation\n    };\n\n    params: any = Object.assign({}, this.paramsDefault);\n    // value;\n    selectedItems = [];\n    elem: any;\n    tmpl: any = {};\n    isOpen: boolean = false; // Dropdown is opened\n    isFocused: boolean = false; // Input element is focused\n    isLoading: boolean = false; // Some process (e.g. load items) is in progress\n    isRemovable: boolean = false;\n    isEmpty: boolean = false;\n    isDisabled: boolean = false;\n    isReadonly: boolean = false;\n    isDropdownAbove: boolean = false;\n    activeListElement;\n    activeSelectedElement;\n\n    unbindFocusBlur = noop;\n    focusBlurInstance = null;\n\n    // Handlers\n    abstract searchChange(value): void;\n    abstract searchKeydown(e): void;\n    abstract selectedItemClick(element, isRemoveButton?): void;\n    abstract listItemClick(element): void;\n    abstract inputFieldClick(): void;\n\n    constructor(element, style?) {\n        let styleElement;\n\n        // Include style to component dom (useful for web-component shadow dom)\n        if (style) {\n            styleElement = document.createElement('style');\n\n            styleElement.innerHTML = String(style);\n            element.before(styleElement);\n        }\n\n        const containerElement = document.createElement('div');\n\n        containerElement.innerHTML = String(template);\n\n        this.elem = element;\n\n        // Get templates\n        this.tmpl.searchContainer = containerElement.querySelector('.select-search-list');\n        this.tmpl.searchPlaceholder = containerElement.querySelector('.select-search-placeholder');\n        this.tmpl.selection = containerElement.querySelector('.select-search-list-item_selection');\n        this.tmpl.selectionRemoveBtn = this.tmpl.selection.querySelector('.close');\n        this.tmpl.searchInputInfo = containerElement.querySelector('.select-search-list-item_info');\n        this.tmpl.searchInputItem = containerElement.querySelector('.select-search-list-item_input');\n        this.tmpl.searchInputNote = this.tmpl.searchInputItem.querySelector('.select-search-list-item_input-note');\n        this.tmpl.searchInput = this.tmpl.searchInputItem.querySelector('input');\n        this.tmpl.searchLoader = containerElement.querySelector('.select-search-list-item_loader');\n\n        this.tmpl.dropdownContainer = containerElement.querySelector('.select-dropdown-list');\n        this.tmpl.dropdownCustomArea = containerElement.querySelector('.select-dropdown-custom');\n        this.tmpl.dropdownEmpty = containerElement.querySelector('.select-dropdown-empty');\n        this.tmpl.optionGroup = containerElement.querySelector('.select-dropdown-list-optgroup');\n        this.tmpl.optionGroupHeader = containerElement.querySelector('.select-dropdown-list-optgroup-header');\n        this.tmpl.option = containerElement.querySelector('.select-dropdown-list-optgroup-option');\n\n        // Clean elements\n        this.tmpl.selection.remove();\n        this.tmpl.searchInputNote.remove();\n        this.tmpl.optionGroupHeader.remove();\n        this.tmpl.option.remove();\n        this.tmpl.optionGroup.remove();\n\n        this.elem.classList.add(CssClass.select);\n        removeChildren(this.elem);\n\n        // Set base template\n        this.elem.prepend.apply(this.elem, containerElement.children);\n\n        this.addListeners();\n    }\n\n    public bindInput(inputElement = this.tmpl.searchInput) {\n        if (this.focusBlurInstance) {\n            this.focusBlurInstance.unbind();\n        }\n\n        this.focusBlurInstance = bindFocusBlur(this.elem, inputElement);\n    }\n\n    // public bindInput(inputElement?) {\n    //     this.unbindFocusBlur();\n    //\n    //     if (inputElement) {\n    //         this.unbindFocusBlur = bindFocusBlur(this.elem, inputElement);\n    //     }\n    // }\n\n    addListeners() {\n        this.elem.addEventListener('focus', this.searchFocusHandler);\n        this.elem.addEventListener('blur', this.searchBlurHandler);\n        this.tmpl.searchInput.addEventListener('input', this.searchInputHandler);\n        this.tmpl.searchInput.addEventListener('keydown', this.searchKeydownHandler);\n        this.tmpl.searchInput.addEventListener('change', this.stopImmediatePropagation); // case: add element by Enter produce excess event\n        this.tmpl.searchContainer.addEventListener('click', this.searchContainerClickHandler);\n        this.tmpl.dropdownContainer.addEventListener('click', this.listItemClickHandler);\n        this.tmpl.dropdownContainer.addEventListener('mousemove', this.listItemMousemoveHandler);\n\n        // Implement focus/blur behaviour for the main select element according internal input element\n        this.bindInput(this.tmpl.searchInput); // todo: bind other events\n        // this.focusBlurInstance = bindFocusBlur(this.elem, this.tmpl.searchInput); // todo: bind other events\n    }\n\n    removeListeners() {\n        this.elem.removeEventListener('focus', this.searchFocusHandler);\n        this.elem.removeEventListener('blur', this.searchBlurHandler);\n        this.tmpl.searchInput.removeEventListener('input', this.searchInputHandler);\n        this.tmpl.searchInput.removeEventListener('keydown', this.searchKeydownHandler);\n        this.tmpl.searchInput.removeEventListener('change', this.stopImmediatePropagation);\n        this.tmpl.searchContainer.removeEventListener('click', this.searchContainerClickHandler);\n        this.tmpl.dropdownContainer.removeEventListener('click', this.listItemClickHandler);\n        this.tmpl.dropdownContainer.removeEventListener('mousemove', this.listItemMousemoveHandler);\n        // this.bindInput();\n        this.focusBlurInstance.unbind();\n    }\n\n    blinkRestriction() {\n        this.elem.classList.add(CssClass.limited);\n\n        setTimeout(() => {\n            this.elem.classList.remove(CssClass.limited);\n        }, this.params.multipleLimitBlinkDelay);\n    }\n\n\n    setDropdownAbove(isDropdownAbove: boolean) {\n        this.elem.classList[isDropdownAbove ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.above);\n        this.isDropdownAbove = isDropdownAbove;\n    }\n\n    setFocus(isFocus: boolean) {\n        this.elem.classList[isFocus ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.focused);\n        this.isFocused = isFocus;\n    }\n\n    setLoading(isLoading: boolean) {\n        this.elem.classList[isLoading ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.loading);\n        this.isLoading = isLoading;\n    }\n\n    setElementLoading(element, isLoading) {\n        element.classList[isLoading ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.loading);\n    }\n\n    setRemovable(isRemovable: boolean) {\n        this.elem.classList[isRemovable ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.removable);\n        this.isRemovable = isRemovable;\n    }\n\n    setElementDisabled(element, isDisabled: boolean) {\n        element.classList[isDisabled ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.disabled);\n    }\n\n    isElementDisabled(element) {\n        return element.classList.contains(CssClass.disabled)\n    }\n\n    setDisabled(isDisabled: boolean) {\n        if (isDisabled && !this.isDisabled) {\n            this.elem.setAttribute(CssClass.disabled, 'disabled');\n            this.tmpl.searchInput.setAttribute(CssClass.disabled, '');\n\n        } else if (!isDisabled && this.isDisabled) {\n            this.elem.removeAttribute(CssClass.disabled);\n            this.tmpl.searchInput.removeAttribute(CssClass.disabled);\n        }\n\n        this.isDisabled = isDisabled;\n    }\n\n    setReadonly(isReadonly: boolean) {\n        if (isReadonly && !this.isReadonly) {\n            this.elem.setAttribute(CssClass.readonly, '');\n            this.tmpl.searchInput.setAttribute(CssClass.readonly, '');\n\n        } else if (!isReadonly && this.isReadonly) {\n            this.elem.removeAttribute(CssClass.readonly);\n            this.tmpl.searchInput.removeAttribute(CssClass.readonly);\n        }\n\n        this.isReadonly = isReadonly;\n    }\n\n    openList() {\n        if (!this.isOpen) {\n            if (!this.params.position) {\n                this.setDropdownAbove(hasNoSpaceBelowForMenu(this.elem, this.tmpl.dropdownContainer));\n            }\n            this.isOpen = true;\n            this.elem.classList.add(CssClass.open);\n\n            if (this.params.activeByOpen) {\n                this.setFirstActiveListElement(); // Show menu first because scroll works if menu is visible only\n            }\n\n            this.elem.dispatchEvent(new Event('open'));\n        }\n    }\n\n    closeList() {\n        if (this.isOpen) {\n            this.isOpen = false;\n\n            // Do this in timeout because list can be opened immediately after closing (case: searching)\n            setTimeout(() => {\n                if (!this.isOpen) {\n                    this.elem.classList.remove(CssClass.open);\n                    console.log('Remove active item');\n                    this.setActiveListElement();\n                    this.elem.dispatchEvent(new Event('close'));\n                }\n            });\n        }\n\n    }\n\n    updatePlaceholder() {\n        const useMultiplePlaceholder = this.params.multiple && this.selectedItems.length;\n\n        this.tmpl.searchInput.placeholder = (useMultiplePlaceholder ? this.params.multiplePlaceholder : this.params.placeholder) || '';\n        this.tmpl.searchPlaceholder.innerHTML = this.params.placeholder || '';\n        // this.setPlaceholder(this.params.multiple && this.selectedItems.length ? this.params.multiplePlaceholder : this.params.placeholder)\n    }\n\n    setPlaceholder(text = '') { //E.g. needs for custom edit functions\n        this.tmpl.searchInput.placeholder = String(text);\n    }\n\n    setInputInfo(text = '') {\n        this.tmpl.searchInputInfo.innerHTML = String(text);\n    }\n\n    updateInputInfo() {\n        this.setInputInfo(this.params.infoGetter(this.selectedItems.length - this.params.multipleVisibleLimit))\n    }\n\n    setDropdownLabel(tmpl = '') {\n        this.tmpl.dropdownEmpty.innerHTML = String(tmpl);\n    }\n\n    setEmpty(isEmpty: boolean) {\n        this.tmpl.dropdownEmpty.classList[isEmpty ? 'remove' : 'add'](CssClass.hide);\n        this.isEmpty = isEmpty;\n    }\n\n    setQuery(text = '', selectAll?: boolean) {\n        const inputElement = this.focusBlurInstance.inputElement; //this.tmpl.searchInput;\n\n        inputElement.value = String(text);\n\n        if (selectAll && text && !this.isReadonly) {\n            inputElement.setSelectionRange(0, text.length)\n        }\n    }\n\n    getQuery() {\n        // return this.tmpl.searchInput.value;\n        return this.focusBlurInstance.inputElement.value;\n    }\n\n    isListElementSelected(element) {\n        return element.classList.contains(CssClass.selected);\n    }\n\n    setListElementSelected(element) {\n        if (!element.classList.contains(CssClass.selected)) {\n            return element.classList.add(CssClass.selected) || true;\n        }\n    }\n\n    unsetListElementSelected(element) {\n        if (element.classList.contains(CssClass.selected)) {\n            return element.classList.remove(CssClass.selected) || true;\n        }\n    }\n\n    focus() {\n        if (!this.isFocused && !this.isDisabled) {\n            // this.tmpl.searchInput.dispatchEvent(new Event('focus'));\n            // this.tmpl.searchInput.focus(); // doesn't work if input element have display:none\n            this.focusBlurInstance.inputElement.focus(); // doesn't work if input element have display:none\n        }\n    }\n\n    blur() {\n        if (this.isFocused && !this.isDisabled) {\n            // this.tmpl.searchInput.blur(); // doesn't work if input element have display:none\n            this.focusBlurInstance.inputElement.blur(); // doesn't work if input element have display:none\n        }\n    }\n\n    // Multiple/Single\n    setMultiple(isMultiple: boolean) {\n        this.elem.classList[isMultiple ? 'add' : 'remove'](CssClass.multiple);\n    }\n\n\n    getSelectedItemElementByItem(item) {\n        const trackFieldGetter = this.params.trackFieldGetter;\n\n        return Array.from(this.tmpl.searchContainer.children).find((element: any) => {\n            return element.data && trackFieldGetter(element.data) === trackFieldGetter(item);\n        })\n    }\n\n    getListElementByItem(item) {\n        const trackFieldGetter = this.params.trackFieldGetter;\n        const groupElements = this.tmpl.dropdownContainer.children;\n\n        for (let i = 0; i < groupElements.length; i++) {\n            if (this.isDataElement(groupElements[i])) {\n                const itemElements = groupElements[i].children;\n\n                for (let j = 0; j < itemElements.length; j++) {\n                    if (itemElements[j].data && trackFieldGetter(itemElements[j].data) === trackFieldGetter(item)) {\n                        return itemElements[j];\n                    }\n                }\n            }\n        }\n    }\n\n    // Element constructors\n    createListItemsGroupElement(groupName) {\n        const itemsGroupElement = this.tmpl.optionGroup.cloneNode();\n\n        itemsGroupElement.data = groupName;\n\n        // Add group header if non default group (group.name !== '')\n        if (groupName) {\n            const itemsGroupHeaderElement = this.tmpl.optionGroupHeader.cloneNode();\n\n            itemsGroupHeaderElement.innerHTML = this.params.groupLabelGetter(groupName);\n            itemsGroupElement.appendChild(itemsGroupHeaderElement);\n        }\n\n        return itemsGroupElement;\n    }\n\n    createListItemElement(item) {\n        const optionElement = this.tmpl.option.cloneNode();\n        const isDisabled = this.params.disabledFieldGetter(item);\n       // console.log(item.name, isDisabled);\n\n        optionElement.innerHTML = this.params.dropdownItemLabelGetter(item);\n        optionElement.data = item;\n\n        this.setElementDisabled(optionElement, isDisabled);\n\n        return optionElement;\n    }\n\n    createSelectedItemElement(item) {\n        const selectedElement = this.tmpl.selection.cloneNode();\n\n        selectedElement.innerHTML = this.params.selectedItemLabelGetter(item) + this.tmpl.selectionRemoveBtn.outerHTML;\n        selectedElement.data = item;\n\n        return selectedElement;\n    }\n\n\n    postRenderSelectedElements() {\n        if (this.params.multipleVisibleLimit === Infinity) {\n            return;\n        }\n\n        //TODO make true multipleVisibleLimit logic. Without post rendering but with excluding element out of DOM\n        const elementsArr: any[] = Array.from(this.tmpl.searchContainer.children).filter(element => element.hasOwnProperty('data'));\n\n        for (let i = 0; i < elementsArr.length; i++) {\n            if (i < this.params.multipleVisibleLimit) {\n                elementsArr[i].classList.remove('hide');\n            } else {\n                elementsArr[i].classList.add('hide');\n            }\n        }\n    }\n\n    // DOM manipulations\n    insertSelectedElements(items = []) {\n        updateElements(this.tmpl.searchContainer, items, this.createSelectedItemElement.bind(this), this.params.trackFieldGetter, true);\n        this.postRenderSelectedElements();\n    }\n\n    insertSelectedElement(item) {\n        const itemElement = this.createSelectedItemElement(item);\n\n        itemElement.data = item;\n        this.tmpl.searchContainer.insertBefore(itemElement, this.tmpl.searchInputInfo);\n        this.postRenderSelectedElements();\n    }\n\n    removeElement(element) {\n        element.remove();\n        this.postRenderSelectedElements(); //!!\n    }\n\n    insertListItems(items = [], query = '') {\n        const selectedItems = this.selectedItems.slice();\n        const trackFieldGetter = this.params.trackFieldGetter;\n\n        if (this.params.hideSelected) {\n            items = intersection(items, selectedItems, trackFieldGetter, true);\n        }\n\n        this.setEmpty(!items.length);\n\n        const sortedList = ascSort(items, '', this.params.searchFieldGetter);\n        const groups = distributeOptionsByGroup(sortedList, this.params.groupFieldGetter);\n        const groupNames = Object.keys(groups).filter(key => groups[key].length).sort();\n        const updatedGroupElements = updateElements(this.tmpl.dropdownContainer, groupNames, this.createListItemsGroupElement.bind(this));\n\n        Array.from(updatedGroupElements.children).forEach((groupElement: any, i) => {\n            if (groupElement.data !== undefined) {\n                const items = groups[groupElement.data];\n                const updatedItemElementsContainer = updateElements(groupElement, items, this.createListItemElement.bind(this), trackFieldGetter);\n\n                // Post rendering for highlighting Todo: optimize it for deep elements\n                Array.from(updatedItemElementsContainer.children).map((itemElement: any) => {\n                    if (itemElement.data) {\n                        itemElement.innerHTML = this.params.dropdownItemLabelGetter(itemElement.data, query);\n\n                        if (!this.params.hideSelected) {\n                            const isSelected = selectedItems.some(item => trackFieldGetter(itemElement.data) === trackFieldGetter(item));\n\n                            isSelected ? this.setListElementSelected(itemElement) : this.unsetListElementSelected(itemElement);\n                        }\n                    }\n                });\n            }\n        });\n\n        return sortedList;\n    }\n\n    insertCustomArea() {\n        const customAreaElement =  this.params.customAreaGetter.call(this);\n\n        this.tmpl.dropdownCustomArea.innerHTML = '';\n\n        if (customAreaElement) {\n            this.tmpl.dropdownCustomArea.append(customAreaElement);\n        }\n    }\n\n    // Selected items controller\n    setActiveSelectedElement(element?) {\n        if (this.activeSelectedElement) {\n            this.activeSelectedElement.classList.remove(CssClass.active);\n            this.activeSelectedElement = null;\n        }\n\n        if (element) {\n            element.classList.add(CssClass.active);\n            this.activeSelectedElement = element;\n        }\n    }\n\n    // List elements controller\n    setActiveListElement(element?) {\n        // if (!element) return;\n        if (this.activeListElement) {\n            this.activeListElement.classList.remove(CssClass.active);\n            this.activeListElement = null\n        }\n\n        if (element && this.isOpen) { //ActiveListElement can't exist if list is closed\n            element.classList.add(CssClass.active);\n            this.activeListElement = element;\n            scrollActiveOption(this.tmpl.dropdownContainer, element);\n        }\n\n        // if (!keyUpDownWerePressed && scope.selectorPosition !== index) {\n        //     setOption(listElement, index);\n        // } else {\n        //     keyUpDownWerePressed = false;\n        // }\n    }\n\n    setFirstActiveListElement() {\n        const firstListElement = this.isDropdownAbove ? this.getLastListElement() : this.getFirstListElement();\n\n        this.setActiveListElement(firstListElement);\n        console.log('setActiveListElement2', firstListElement);\n    }\n\n    setNextActiveListElement(isPrevious?: boolean) {\n        try {\n            const activeElement = this.activeListElement;\n\n            if (!activeElement) {\n                console.log('setActiveListElement3 --', this.isOpen);\n                return this.setActiveListElement((this.isDropdownAbove ? !isPrevious : isPrevious) ? this.getLastListElement() : this.getFirstListElement());\n            }\n\n            let nextElement = this.getSiblingElement(activeElement, isPrevious);\n\n            if (!this.isDataElement(nextElement)) {\n                const nextGroup = this.getSiblingElement(activeElement.parentNode, isPrevious);\n\n                if (this.isDataElement(nextGroup)) {\n                    nextElement = this.findFirstChildElementWithData(nextGroup, isPrevious);\n\n                } else if (this.params.rotateList) {\n                    nextElement = isPrevious ? this.getLastListElement() : this.getFirstListElement();\n                }\n            }\n\n            if (this.isDataElement(nextElement)) {\n                this.setActiveListElement(nextElement);\n                console.log('setActiveListElement4');\n            }\n        } catch (e) {\n            this.setFirstActiveListElement()\n        }\n\n    }\n\n    setPreviousActiveListElement() {\n        this.setNextActiveListElement(true);\n    }\n\n    // getActiveListElement() {\n    //     return this.activeListElement;\n    // }\n\n    getSiblingElement(element, isPrevious?: boolean) {\n        const siblingFieldName = isPrevious ? 'previousSibling' : 'nextSibling';\n\n        do  {\n            element = element && element[siblingFieldName];\n\n        } while (element && !this.isDataElement(element));\n\n        return element;\n    }\n\n    getFirstListElement() {\n        const firstGroup = this.findFirstChildElementWithData(this.tmpl.dropdownContainer);\n\n        return this.findFirstChildElementWithData(firstGroup);\n    }\n\n    getLastListElement() {\n        const lastGroup = this.findLastChildElementWithData(this.tmpl.dropdownContainer);\n\n        return this.findLastChildElementWithData(lastGroup);\n    }\n\n    findFirstChildElementWithData(containerElement, invert?: boolean) {\n        if (!containerElement) return;\n\n        const total = containerElement.children.length;\n\n        for (let f = 0, l = total - 1; f < total; f++, l--) {\n            const i = invert ? l : f;\n            const childElement = containerElement.children[i];\n\n            if (this.isDataElement(childElement)) {\n                return childElement;\n            }\n        }\n    }\n\n    findLastChildElementWithData(containerElement) {\n        return this.findFirstChildElementWithData(containerElement, true);\n    }\n\n    isDataElement(element) {\n        // Enabled element node with data\n        return element && element.nodeType === 1 && element.data !== undefined && !this.isElementDisabled(element);\n    }\n\n    // Event handlers\n    searchFocusHandler = () => {\n        // console.log('+ searchFocusHandler');\n        this.setFocus(true);\n    };\n\n    searchBlurHandler = () => {\n        // console.log('+ searchBlurHandler');\n        this.closeList();\n        this.setActiveSelectedElement();\n        this.insertListItems(); // Don't store list of items if component hasn't focus\n        this.setFocus(false);\n        this.setQuery(''); //maybe move it ti closeList\n    };\n\n    // searchInputHandler = (e) => {\n    //     console.log(22222, e.target.value);\n    //\n    //     // this.params.debounce\n    //     this.searchChange(e.target.value);\n    // };\n\n    searchInputHandler = debounceEventValue((value) => {\n        this.searchChange(value);\n    }, this.params.debounce);\n\n\n    searchKeydownHandler = (e) => {\n        this.searchKeydown(e);\n    };\n\n    searchContainerClickHandler = (e) => {\n        //this.focus(); //Maybe don't need\n\n        const selectedItemElement = getElementContainer(e.target, this.tmpl.dropdownContainer, CssClass.selectedItem);\n\n        if (selectedItemElement) {\n            const selectedItemRemoveElement = getElementContainer(e.target, selectedItemElement, CssClass.selectedItemRemove);\n\n            this.selectedItemClick(selectedItemElement, !!selectedItemRemoveElement);\n\n        } else {\n            this.inputFieldClick();\n        }\n    };\n\n    listItemClickHandler = (e) => {\n        const listItemElement = getElementContainer(e.target, this.tmpl.dropdownContainer,  CssClass.listItem);\n\n        if (listItemElement) {\n            this.listItemClick(listItemElement);\n\n            // Set next active element if dropdown still opened\n            setTimeout(() => {\n                if (!this.isOpen) return;\n\n                const nextListItemElement = getElementContainer(document.elementFromPoint(e.pageX, e.pageY) as HTMLElement, this.tmpl.dropdownContainer, CssClass.listItem) || this.getFirstListElement();\n\n                if (nextListItemElement) {\n                    this.setActiveListElement(nextListItemElement);\n                    console.log('setActiveListElement5', nextListItemElement);\n                }\n            })\n\n        }\n    };\n\n    listItemMousemoveHandler = (e) => {\n        const optionElement = getElementContainer(e.target, this.tmpl.dropdownContainer, CssClass.listItem);\n\n        if (optionElement && optionElement !== this.activeListElement) {\n            this.setActiveListElement(optionElement);\n            console.log('setActiveListElement6', optionElement);\n        }\n    };\n\n    stopImmediatePropagation = (e) => e.stopImmediatePropagation();\n}\n","import * as style from './select.scss';\nimport * as bootstrapStyle from './select-bootstrap.scss';\n\n// import './select.scss';\nimport { SelectDom } from './dom-builder';\n// let style;\nimport {\n    ascSort,\n    findIndex,\n    getItemsByField,\n    deepReplace,\n    highlight,\n    deepFind,\n    mergeWithDefaults,\n    QueryCache\n} from './utils';\n\nconst style1 = String(style) + String(bootstrapStyle);\nconst QUERY_PLACEHOLDER = '$query';\n\nexport class Select extends SelectDom {\n\n    value;\n    private cache = new QueryCache();\n    loadItemsPromise: Promise<any>; //Just for case. We don't use it now\n\n    constructor(element, params: any = {}) {\n        super(element, params.localStyle ? (params.localStyle === true ? String(style1) : params.localStyle) : null);\n\n        this.setParams(params);\n    }\n\n    //добавить класс binded если используется другой инпут\n    public setParams(params: any = {}, emitEvent: boolean = true) {\n        // `emitEvent=false` prevents event emitting of value changes in situation if value was changed because multiple flag was changed\n        console.log('setParams', params);\n        mergeWithDefaults(this.params, params, this.paramsDefault);\n\n        const hasProperty = (property) => params.hasOwnProperty(property);\n        const hasFalsyProperty = (property) => params.hasOwnProperty(property) && !params[property];\n\n        // Complex\n        if (hasProperty('removable')) {\n            this.params.openByRemove = !params.removable;\n        }\n\n        if (hasProperty('multiple')) {\n            this.params.openByRemove = !params.multiple;\n            this.params.openByActiveRemove = !params.multiple;\n        }\n\n        if (hasProperty('multiple') || hasProperty('readonly')) {\n            this.params.editable = !this.params.readonly && !this.params.multiple;\n        }\n\n        if (hasProperty('keepOpened')) {\n            this.params.openByRemove = params.keepOpened;\n            this.params.closeByRemove = !params.keepOpened;\n            this.params.closeBySelect = !params.keepOpened;\n        }\n\n        // Basic\n        if (hasProperty('openByRemove')) {\n            this.params.openByRemove = params.openByRemove\n        }\n\n        if (hasProperty('openByActiveRemove')) {\n            this.params.openByActiveRemove = params.openByActiveRemove\n        }\n\n        if (hasProperty('openByInputClick')) {\n            this.params.openByInputClick = params.openByInputClick\n        }\n\n        if (hasProperty('closeByRemove')) {\n            this.params.closeByRemove = params.closeByRemove\n        }\n\n        if (hasProperty('closeBySelect')) {\n            this.params.closeBySelect = params.closeBySelect\n        }\n\n        if (hasProperty('editable')) {\n            this.params.editable = params.editable\n        }\n\n        // Field & Getters\n        if (hasFalsyProperty('valueFieldGetter') && this.params.valueField || hasProperty('valueField')) { // Id or other unique value\n            this.params.valueFieldGetter = (item) => deepFind(item, this.params.valueField, true);\n        }\n\n        if (hasFalsyProperty('groupFieldGetter') && this.params.groupField || hasProperty('groupField')) { // Group id\n            this.params.groupFieldGetter = (item) => deepFind(item, this.params.groupField)\n        }\n\n        if (hasFalsyProperty('searchFieldGetter') && this.params.searchField || hasProperty('searchField')) { // Field for searching\n            this.params.searchFieldGetter = (item) => deepFind(item, this.params.searchField, true);\n        }\n\n        if (hasFalsyProperty('trackFieldGetter') && (this.params.trackField || this.params.valueField) || hasProperty('trackField') || hasProperty('valueField')) { // Track id\n            this.params.trackFieldGetter = (item) => deepFind(item, this.params.trackField || this.params.valueField, true);\n        }\n\n        if (hasFalsyProperty('disabledFieldGetter') && this.params.disabledField || hasProperty('disabledField')) { // Field with disabled flag\n            this.params.disabledFieldGetter = (item) => deepFind(item, this.params.disabledField);\n        }\n\n        // if (hasProperty('groupField') && !params.groupLabelGetter) {\n        //     this.params.groupLabelGetter = (label) => label\n        // }\n\n        if (hasFalsyProperty('dropdownItemLabelGetter') && (this.params.dropdownItemLabelField || this.params.searchField) || !params.dropdownItemLabelGetter && (hasProperty('dropdownItemLabelField') || hasProperty('searchField'))) {\n            this.params.dropdownItemLabelGetter = (item, query) => highlight(deepFind(item, this.params.dropdownItemLabelField || this.params.searchField, true), query);\n        }\n\n        if (hasFalsyProperty('selectedItemLabelGetter') && (this.params.selectedItemLabelField || this.params.searchField) || !params.selectedItemLabelGetter && (hasProperty('selectedItemLabelField') || hasProperty('searchField'))) {\n            this.params.selectedItemLabelGetter = (item) => deepFind(item, this.params.selectedItemLabelField || this.params.searchField, true)\n        }\n\n        if (hasProperty('placeholder') && !hasProperty('multiplePlaceholder')) {\n            this.params.multiplePlaceholder = params.placeholder;\n        }\n\n        if (params.creatable && !params.createItemFn) {\n            this.params.createItemFn = typeof params.creatable === 'object' ? (query) => deepReplace(QUERY_PLACEHOLDER, query, params.creatable) : (query) => query;\n        }\n\n        if (this.params.editable && !params.editItemFn) {\n            this.params.editItemFn = (value) => this.setQuery(value, true);\n        }\n\n        if (!this.params.getItemsByValue) {\n            // Find items by value in the items list\n            this.params.getItemsByValue = (values) => {\n                return this.loadListItems()\n                    .then(items => getItemsByField(values, items, this.params.valueFieldGetter));\n            }\n        }\n\n        if (hasProperty('items')) {\n            this.params.getItems = (query) => {\n                let options;\n\n                if (typeof query === 'object' && query.hasOwnProperty('query')) {\n                    options = query;\n                    query = query.query;\n                }\n                return ascSort(params.items || [], query, this.params.searchFieldGetter, options)\n            };\n        }\n\n        // Initialize\n        let valueIsChanged = false;\n        let value = this.value;\n\n        this.setDropdownLabel(this.params.emptyDropdownLabel);\n        this.setRemovable(this.params.removable);\n        this.setMultiple(this.params.multiple);\n        this.setReadonly(this.params.readonly);\n        this.setDisabled(this.params.disabled);\n        this.setDropdownAbove(this.params.position === 'top');\n        this.updatePlaceholder();\n\n        if ((hasProperty('selectedItemLabelGetter') || hasProperty('selectedItemLabelField') || hasProperty('searchField') || hasProperty('searchFieldGetter')) && this.selectedItems.length) {\n            // Update items which are already selected. We don't need to update list items here because they will be updated when dropdown opening\n            this.insertSelectedElements([]);\n            this.insertSelectedElements(this.selectedItems);\n        }\n\n        if (hasProperty('customAreaGetter')) {\n            this.insertCustomArea();\n        }\n\n        if (hasProperty('activeByOpen') && !params.activeByOpen) {\n            console.log('setActiveListElement1');\n            this.setActiveListElement();\n        }\n\n        if (hasProperty('items') || hasProperty('getItems')) {\n            this.cache.clear();\n\n            // Case: loading implemented outside, not by select getItems. Then we should to show new items in open dropdown\n            if (this.isOpen) {\n                this.insertListItems([]);\n                this.updateDropdownListItems('');\n            }\n        }\n\n        if (hasProperty('value')) {\n            value = params.value;\n            valueIsChanged = true;\n        }\n\n        if (this.params.multiple && !Array.isArray(value)) {\n            value = value != null ? [value] : [];\n            valueIsChanged = true;\n        }\n\n        if (!this.params.multiple && Array.isArray(value)) {\n            value = value[0]; // There is high probability that it is old multiple value then single array like value\n            valueIsChanged = true;\n        }\n\n        if (valueIsChanged && this.value !== value) {\n            this.value = value;\n            this.setQuery(''); // Case: dropdown is open. Clear query if value was setup not by search input\n            // Convert value to items (which are array always) and set them\n            this.selectItems(this.params.multiple ? value : (value != null ? [value] : []))\n                .then(this.updateInputInfo.bind(this));\n\n            if (emitEvent && !hasProperty('value')) {\n                this.dispatchValue();\n            }\n        }\n    }\n\n    public open() {\n        if (this.isOpen) return;\n\n        this.updateDropdownListItems('') //use saved query\n            .then((data) => {\n                this.openList();\n                if (!this.params.multiple && this.selectedItems.length) {\n                    // this.setPlaceholder(this.params.selectedItemLabelGetter(this.selectedItems[0]))\n                    // this.setQuery(this.params.searchFieldGetter(this.selectedItems[0]), true);\n\n                    // Doesn't work without setTimeout because of https://bugs.chromium.org/p/chromium/issues/detail?id=32865\n                    setTimeout(() => {\n                        this.params.editItemFn.call(this, this.params.searchFieldGetter(this.selectedItems[0]));\n                    })\n                }\n            })\n    }\n\n    public close() {\n        if (!this.params.multiple) {\n            // this.setPlaceholder(this.params.placeholder);\n            // this.setQuery();\n            this.params.editItemFn.call(this, '');\n        }\n\n        if (!this.isOpen) return;\n\n        this.closeList();\n    }\n\n    // Items loader\n    loadListItems(query?) {\n        this.setLoading(true);\n        // console.log('Loading... ', query, 'From cache:', !!this.cache.get(query));\n\n        let cachedItems, selectedItemsForQuery;\n\n        if (this.params.useCache) {\n            cachedItems = this.cache.get(query);\n\n        } else {\n            // Needs to understand how many selected items we already have for this query\n            // and how many extra items we need to request server.\n            // For case if server sends items by chunks/pages. In situation if we move most of received items\n            // to selected list and have just several or zero items in the dropdown list\n            // we need to request server more items or items except selected.\n            let options;\n\n            if (typeof query === 'object' && query.hasOwnProperty('query')) {\n                options = query;\n                query = query.query;\n            }\n\n            selectedItemsForQuery = ascSort(this.selectedItems, query, this.params.dropdownItemLabelGetter, options);\n        }\n\n        this.loadItemsPromise = Promise.resolve(cachedItems || this.params.getItems(query, selectedItemsForQuery))\n            .then((items: any[]) => {\n                // console.log('Loaded', items);\n                this.cache.set(query, items);\n                this.loadItemsPromise = undefined;\n                this.setLoading(false);\n\n                return items;\n            })\n            .catch(error => {\n                this.loadItemsPromise = undefined;\n                this.setLoading(false);\n            });\n\n        return this.loadItemsPromise;\n    }\n\n    updateDropdownListItems(query?) {\n        // console.log('query', query);\n        return this.loadListItems(query)\n            .then((items) => {\n                if (this.isDropdownAbove) {\n                    items.reverse();\n                }\n                this.insertListItems(items, query);\n\n                // const insertedItems = this.insertListItems(this.isDropdownAbove ? items.reverse() : items, query);\n                // items.length - insertedItems.length;\n                // if () {\n                //\n                // }\n            })\n        // .then(this.insertListItems.bind(this))\n        // .then(() => {\n        //     this.setActiveListElement(this.getFirstListElement());\n        // })\n    }\n\n    saveOn(key) {\n        console.log('--> activeListElement', this.activeListElement);\n        if (this.activeListElement) {\n            console.log(11111);\n            this.selectItem(this.activeListElement);\n            this.setNextActiveListElement();\n\n        } else if (this.params.creatable) {\n            const query = this.getQuery();\n\n            if (!query) return;\n            console.log(22222);\n            this.setLoading(true);\n\n            Promise.resolve(this.params.createItemFn(query))\n                .then(newItem => {\n                    const newElement = this.createListItemElement(newItem);\n\n                    this.setLoading(false);\n                    this.selectItem(newElement, true);\n\n                    if (this.params.activeByOpen) {\n                        this.setNextActiveListElement();\n                    }\n                })\n                .catch(error => {\n                    this.setLoading(false);\n                })\n        }\n    }\n\n    // ValueView\n    updateValue() {\n        const values = this.params.valueField ? this.selectedItems.map(this.params.valueFieldGetter) : this.selectedItems;\n        const newValue = this.params.multiple ? values.slice() : values[0];\n\n        if (this.value !== newValue) {\n            this.value = newValue;\n            this.updatePlaceholder();\n            this.updateInputInfo();\n            this.dispatchValue();\n        }\n    }\n\n    dispatchValue() {\n        const event: any = new Event('change');\n\n        event.value = this.value;\n        this.elem.dispatchEvent(event);\n    }\n\n    // Item manipulations\n    public selectItems(items) {\n        // console.log('selectItems []', items);\n        // if (!this.params.multiple && !items) {\n        //   this.deselectAllItems();\n        //   this.updateValue();\n        //   return;\n        // }\n\n        return Promise.resolve(this.params.valueField ? this.params.getItemsByValue(items) : items)\n            .then(items => {\n                this.updateSelectedElementList(items);\n\n                if (this.isFocused) {\n                    // this.updateDropdownListItems(this.tmpl.searchInput.value); //только если дропдаун открыт\n                    this.updateDropdownListItems(this.focusBlurInstance.inputElement.value); //только если дропдаун открыт\n                }\n\n                //this.updateValue();\n            });\n    }\n\n    public selectItem(listItemElement, isNewItem?: boolean) {\n        console.log('selectItem');\n        // if (this.isElementDisabled(listItemElement)) return; //Should works without it\n\n        const item = listItemElement.data;\n\n        // Multiple limit\n        if (this.params.multipleLimit >= 0 && this.selectedItems.length >= this.params.multipleLimit) {\n            this.blinkRestriction();\n            return;\n        }\n\n        // Show selected items in the dropdown list case\n        if (!this.params.hideSelected && this.isListElementSelected(listItemElement)) {\n            const searchItemElement = this.getSelectedItemElementByItem(item);\n\n            this.unsetListElementSelected(listItemElement);\n            this.deselectItem(searchItemElement, true);\n            return;\n        }\n\n        // Multiple/Single case\n        if (this.params.multiple) {\n            this.setActiveSelectedElement();\n        } else {\n            this.deselectAllItems();\n            this.setQuery('');\n        }\n\n        if (isNewItem) {\n            this.setQuery('');\n        }\n\n        this.addToSelectedElementList(item);\n\n        // Stay dropdown opened/close case\n        if (this.isOpen && this.params.closeBySelect) {\n            this.close();\n            this.setQuery('');\n\n        } else {\n            this.insertListItems(this.cache.get(this.getQuery()));\n            // For visual performance. Remove selected element firstly, then get new items\n            // if (!this.params.useCache) {\n            //     this.insertListItems(this.cache.getLast());\n            // }\n            //\n            // this.updateDropdownListItems(this.getQuery()); // Load items\n\n            // Пришлось отключить из-за конфликта с newItems. Разобраться!!!\n            // In case useCache=false we do it for visual performance. Remove selected item firstly, then get new items\n            //this.insertListItems(this.cache.getLast());\n\n            if (!this.params.useCache) {\n                this.updateDropdownListItems(this.getQuery()); // Load items\n            }\n        }\n\n        // this.currentElem = null;\n        // itemElement.dispatchEvent(new Event('mouseout'));\n\n\n        this.updateValue();\n    }\n\n    public deselectItem(selectedElement, isRemoveButton?) {\n        const isMultipleEditable = this.params.editable && this.params.multiple;\n\n        if (!this.params.multiple && this.isReadonly) { //Refactor this case!\n            this.setActiveSelectedElement();\n            if (isRemoveButton) {\n\n                this.removeSelectedItem(selectedElement);\n                this.setActiveSelectedElement();\n                setTimeout(() => {\n                    this.setQuery('');\n                })\n\n            }\n            this.open();\n            return\n        }\n\n        if (isMultipleEditable && selectedElement) {\n            setTimeout(() => {\n                this.params.editItemFn.call(this, this.params.searchFieldGetter(selectedElement.data));\n            })\n            // this.setQuery(this.params.searchFieldGetter(selectedElement.data))\n            // this.params.editItemFn.bind(this)(this.params.searchFieldGetter(selectedElement.data));\n        }\n\n        if (isRemoveButton || selectedElement === this.activeSelectedElement || isMultipleEditable) {\n            this.removeSelectedItem(selectedElement);\n            this.setActiveSelectedElement();\n\n        } else {\n            this.setActiveSelectedElement(selectedElement);\n            // console.log('deselectItem', this.params.openByActiveRemove);\n            if (this.params.openByActiveRemove) {\n                this.open();\n            }\n        }\n    }\n\n    public deselectAllItems() {\n        this.updateSelectedElementList([]);\n        //this.updateDropdownListItems(this.tmpl.searchInput.value); //??\n        // this.updateValue();\n    }\n\n\n    updateSelectedElementList(items = []) {\n        this.selectedItems = items;\n\n        // if (this.selectedItems.length <= this.params.multipleVisibleLimit) {\n        //     items = items.slice(0, this.params.multipleVisibleLimit)\n        // }\n        this.insertSelectedElements(items);\n    }\n\n    addToSelectedElementList(item) {\n        this.selectedItems.push(item);\n        this.insertSelectedElement(item);\n\n        // if (this.selectedItems.length <= this.params.multipleVisibleLimit) {\n        //     this.insertSelectedElement(item);\n        // }\n    }\n\n    removeSelectedItem(selectedElement) {\n        if (!selectedElement) return;\n\n        const selectedItem = selectedElement.data;\n\n        this.setElementLoading(selectedElement, true);\n\n        Promise.resolve(this.params.removeItemFn(selectedItem))\n            .then((success) => {\n                const itemIndex = findIndex(this.selectedItems, selectedItem, this.params.trackFieldGetter);\n\n                this.setElementLoading(selectedElement, false);\n                this.selectedItems.splice(itemIndex, 1); //Объединить?\n                //console.log(555, selectedElement);\n                this.removeElement(selectedElement);\n                //this.clearSearch();\n\n                if (this.params.hideSelected) {\n                    this.insertListItems(this.cache.getLast());\n\n                } else {\n                    const listItemElement = this.getListElementByItem(selectedItem);\n\n                    if (this.isListElementSelected(listItemElement)) {\n                        this.unsetListElementSelected(listItemElement);\n                    }\n                }\n\n                if (!this.isOpen && this.params.openByRemove) {\n                    this.open();\n                }\n\n                if (this.isOpen && this.params.closeByRemove) {\n                    this.close();\n                }\n                // this.loadListItems(this.tmpl.searchInput.value);\n                this.updateValue();\n            })\n            .catch(error => {\n                console.log('E', error);\n                this.setElementLoading(selectedElement, false);\n            })\n\n    }\n\n\n    // Event handlers\n    selectedItemClick(selectedItemElement, isRemoveButton) {\n        if (this.isDisabled) return;\n        // console.log('selectedItemClick', isRemoveButton);\n\n        if (this.params.multiple && this.params.removable && !isRemoveButton) return;\n\n        if (this.params.multiple && !this.params.removable) {\n            isRemoveButton = true;\n        }\n\n        this.deselectItem(selectedItemElement, isRemoveButton);\n\n        this.dispatchCustomInputEvent();\n    }\n\n    listItemClick(listItemElement) {\n        // console.log('listItemElement');\n\n        if (this.isDisabled || this.isElementDisabled(listItemElement)) return;\n        // Element is selected already\n        //if (this.params.multiple && intersection(this.selectedItems, [listItemElement.data], this.params.trackFieldGetter).length) return;\n\n        // this.setNextActiveListElement();\n        this.selectItem(listItemElement);\n\n        this.dispatchCustomInputEvent();\n    }\n\n    inputFieldClick() {\n        // console.log('inputFieldClick', this.params.openByInputClick && (this.params.multiple || !this.selectedItems.length));\n        if (this.isDisabled) return;\n\n        if (this.params.openByInputClick && (this.params.multiple || !this.selectedItems.length)) {\n            this.open();\n        }\n    }\n\n    searchChange(value) {\n        // console.log('searchChange', value);\n        this.closeList();\n        this.updateDropdownListItems(value)\n            .then(this.openList.bind(this))\n    }\n\n    searchKeydown(e) {\n        switch (e.key) {\n            case 'ArrowUp':\n                if (this.isOpen) {\n                    this.setPreviousActiveListElement();\n                } else {\n                    this.open(); // Useful if openDropdownAbove mode\n                }\n                break;\n\n            case 'ArrowDown':\n                if (this.isOpen) {\n                    this.setNextActiveListElement();\n                } else {\n                    this.open();\n                }\n                break;\n\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                break;\n\n            case 'Tab':\n                this.saveOn('tab');\n                break;\n\n            case 'Enter':\n                this.saveOn('enter');\n                // this.focus(); //Should be if keypress!\n                e.preventDefault(); // Prevent the event from bubbling up as it might otherwise cause a form submission\n                break;\n\n            // case ' ':\n            //     this.saveOn('space');\n            //     break;\n\n            case 'Escape':\n                this.blur();\n\n                break;\n\n            case 'Backspace':\n                if (!this.tmpl.searchInput.value) {\n                    const lastSelectedElement = this.findLastChildElementWithData(this.tmpl.searchContainer);\n\n                    this.deselectItem(lastSelectedElement);\n                    break;\n                }\n            default: // any key\n                if (this.params.multiple) {\n                    this.setActiveSelectedElement();\n                }\n        }\n    }\n\n    dispatchCustomInputEvent() {\n        // FIXME\n        // case: custom input lose focus after every action\n        // if (this.focusBlurInstance.inputElement !== this.tmpl.searchInput) {\n        //     setTimeout(() => {\n        //         if (!this.isFocused) {\n        //             console.log(2222);\n        //             this.open();\n        //             this.elem.dispatchEvent(new Event('click'));\n        //         }\n        //     }, 100)\n        // }\n    }\n}\n"],"sourceRoot":""}