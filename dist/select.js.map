{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/utils.ts","webpack:///./src/select.ts","webpack:///./src/dom-builder.ts","webpack:///./src/select.html","webpack:///./src/myer-array-diff.ts"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getElementContainer","element","containerElement","className","document","body","classList","ownerDocument","nodeType","indexOf","parentElement","obj","newObj","defaults","k","newValue","inputElement","isolatedClass","isFocused","isMousedown","isBlur","shadowHost","parentNode","addEventListener","clickHandler","mousedownHandler","blurHandler","focusHandler","host","event","target","setTimeout","dispatchEvent","Event","console","log","nodeName","activeElement","isSelectElement","focus","unbind","removeEventListener","list","item","y","height_menu","height_item","scroll","scroll_top","scroll_bottom","offsetHeight","elem","extra","val","offsetWidth","styles","getComputedStyle","style","rnumnonpx","test","parseFloat","isBorderBox","cssExpand","getStyleValue","augmentWidthOrHeight","getWidthOrHeight","scrollTop","getOffset","top","RegExp","source","docElem","win","box","getBoundingClientRect","doc","documentElement","defaultView","getWindow","pageYOffset","clientTop","left","pageXOffset","clientLeft","deepEqual","actual","expected","strict","Date","getTime","b","ka","keys","kb","length","sort","e","objEqual","toString","String","toggleElement","menuElement","defaultMenuHeightPx","spaceAbove","spaceBelow","innerHeight","bottom","parseInt","groups","xArr","yArr","invert","j","filteredX","out","slice","splice","push","rEscapableCharacters","sEscapeMatch","escapeCharacters","string","replace","deepFind","path","originalIfNotFound","undefined","paths","split","current","items","query","getLabel","options","isFound","output","output1","output2","output3","orderFactor","regExpParams","getLabelArr","fields","map","field","safeQuery","matchRegExp","firstMatchRegExp","label","concat","A","B","localeCompare","groupNameGetter","optionGroupName","optionGroup","optionGroups","trackByGetter","firstChild","removeChild","newItems","elementConstructor","trackFieldGetter","appendUndefinedItems","newItemIds","itemsMap","oldItemIds","elementsArr","Array","from","children","track","id","uncountableElementId","Error","data","Map","forEach","itemId","set","oldElementId","myer","diff","args","arg","operation","startIndex","amount","remove","removeElements","newElements","after","apply","prepend","addElements","deepReplace","oldVal","newVal","newObject","copy","clone","str","substr","tagName","tagTemplate","html","fn","timeout","timer","clearTimeout","fieldGetter","isArray","find","filter","noopPipe","noop","cache","this","getValue","cacheItem","q","getLast","unshift","v","clear","QueryCache","params","localStyle","setParams","Select","emitEvent","mergeWithDefaults","paramsDefault","hasProperty","hasFalsyProperty","openByRemove","removable","multiple","openByActiveRemove","editable","readonly","keepOpened","closeByRemove","closeBySelect","openByInputClick","valueField","valueFieldGetter","groupField","groupFieldGetter","searchField","searchFieldGetter","trackField","disabledField","disabledFieldGetter","dropdownItemLabelField","dropdownItemLabelGetter","highlight","selectedItemLabelField","selectedItemLabelGetter","multiplePlaceholder","placeholder","creatable","createItemFn","editItemFn","setQuery","getItemsByValue","values","loadListItems","then","getItemsByField","getItems","ascSort","valueIsChanged","setDropdownLabel","emptyDropdownLabel","setRemovable","setMultiple","setReadonly","setDisabled","disabled","setDropdownAbove","position","updatePlaceholder","selectedItems","insertSelectedElements","insertCustomArea","activeByOpen","setActiveListElement","isOpen","insertListItems","updateDropdownListItems","selectItems","updateInputInfo","dispatchValue","open","openList","close","closeList","cachedItems","selectedItemsForQuery","setLoading","useCache","loadItemsPromise","Promise","resolve","catch","error","isDropdownAbove","reverse","saveOn","activeListElement","selectItem","setNextActiveListElement","getQuery","newItem","newElement","createListItemElement","updateValue","updateSelectedElementList","focusBlurInstance","listItemElement","isNewItem","multipleLimit","blinkRestriction","hideSelected","isListElementSelected","searchItemElement","getSelectedItemElementByItem","unsetListElementSelected","deselectItem","setActiveSelectedElement","deselectAllItems","addToSelectedElementList","selectedElement","isRemoveButton","isMultipleEditable","isReadonly","removeSelectedItem","activeSelectedElement","insertSelectedElement","selectedItem","setElementLoading","removeItemFn","success","itemIndex","findIndex","removeElement","getListElementByItem","selectedItemClick","selectedItemElement","isDisabled","dispatchCustomInputEvent","listItemClick","isElementDisabled","inputFieldClick","searchChange","searchKeydown","setPreviousActiveListElement","preventDefault","blur","tmpl","searchInput","lastSelectedElement","findLastChildElementWithData","searchContainer","eventName","SelectDom","CssClass","select","active","focused","loading","selected","limited","above","hide","inputNote","selectedItemRemove","listItem","styleElement","groupLabelGetter","customAreaGetter","infoGetter","hiddenItemsNumber","saveTrigger","multipleVisibleLimit","Infinity","multipleLimitBlinkDelay","debounce","rotateList","debug","assign","isLoading","isRemovable","isEmpty","unbindFocusBlur","searchFocusHandler","setFocus","searchBlurHandler","searchInputHandler","debounceEventValue","searchKeydownHandler","searchContainerClickHandler","dropdownContainer","selectedItemRemoveElement","listItemClickHandler","nextListItemElement","elementFromPoint","pageX","pageY","getFirstListElement","listItemMousemoveHandler","optionElement","stopImmediatePropagation","createElement","innerHTML","before","querySelector","searchPlaceholder","selection","selectionRemoveBtn","searchInputInfo","searchInputItem","searchInputNote","searchLoader","dropdownCustomArea","dropdownEmpty","optionGroupHeader","option","add","removeChildren","addListeners","bindInput","bindFocusBlur","removeListeners","isFocus","setElementDisabled","contains","setAttribute","removeAttribute","hasNoSpaceBelowForMenu","setFirstActiveListElement","useMultiplePlaceholder","setPlaceholder","text","setInputInfo","setEmpty","selectAll","setSelectionRange","setListElementSelected","isMultiple","groupElements","isDataElement","itemElements","updateLabel","labelGetter","extraLabelElement","outerHTML","appendChild","cloneNode","createListItemsGroupElement","groupName","itemsGroupElement","itemsGroupHeaderElement","createSelectedItemElement","postRenderSelectedElements","updateElements","itemElement","insertBefore","intersection","sortedList","distributeOptionsByGroup","groupNames","updatedGroupElements","groupElement","updatedItemElementsContainer","some","customAreaElement","append","scrollActiveOption","firstListElement","getLastListElement","isPrevious","nextElement","getSiblingElement","nextGroup","findFirstChildElementWithData","siblingFieldName","firstGroup","lastGroup","total","f","childElement","diff_match_patch","Diff_Timeout","diff_main","text1","text2","opt_deadline","Number","MAX_VALUE","deadline","commonlength","diff_commonPrefix","commonprefix","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","find_csa","shift","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","diff_bisect_","text1_length","text2_length","max_d","Math","ceil","v_offset","v_length","v1","v2","x","delta","front","k1start","k1end","k2start","k2end","k1","k1_offset","x1","y1","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","compare_arrays","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","pointer","count_delete","count_insert","text_delete","text_insert","diffItem","prevDiffValues","diffValues","pop","changes","arr","subarr","from_index","sl","loop","arr1","arr2","transform_to_splice_arguments","sDiffs","cursor","sDiff","nextDiff","oldArr","newArr"],"mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,IAPxE,CASGC,OAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUT,QAGnC,IAAIC,EAASM,EAAiBE,GAAY,CACzCJ,EAAGI,EACHC,GAAG,EACHV,QAAS,IAUV,OANAW,EAAQF,GAAUG,KAAKX,EAAOD,QAASC,EAAQA,EAAOD,QAASQ,GAG/DP,EAAOS,GAAI,EAGJT,EAAOD,QA0Df,OArDAQ,EAAoBK,EAAIF,EAGxBH,EAAoBM,EAAIP,EAGxBC,EAAoBO,EAAI,SAASf,EAASgB,EAAMC,GAC3CT,EAAoBU,EAAElB,EAASgB,IAClCG,OAAOC,eAAepB,EAASgB,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhET,EAAoBe,EAAI,SAASvB,GACX,oBAAXwB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAepB,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAepB,EAAS,aAAc,CAAE0B,OAAO,KAQvDlB,EAAoBmB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQlB,EAAoBkB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAvB,EAAoBe,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOlB,EAAoBO,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRtB,EAAoB0B,EAAI,SAASjC,GAChC,IAAIgB,EAAShB,GAAUA,EAAO4B,WAC7B,WAAwB,OAAO5B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAO,EAAoBO,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRT,EAAoBU,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG5B,EAAoB+B,EAAI,GAIjB/B,EAAoBA,EAAoBgC,EAAI,G,gFClFrD,WA4BA,SAAgBC,EAAoBC,EAAsBC,EAA+CC,GACrG,SADsD,IAAAD,MAAgCE,SAASC,MACxFJ,GAAWA,EAAQK,WAAaL,EAAQM,eAAsC,KAArBN,EAAQO,UAAkB,CACtF,GAAKL,GAAaF,EAAQE,UAAUM,QAAQN,IAAc,IAAQA,GAAaF,IAAYC,EACvF,OAAOD,EAGXA,EAAUA,EAAQS,eAzB1B,6BAAkCC,EAAKC,EAAaC,GAChD,IAAK,IAAIC,UAD0B,IAAAF,MAAA,SAAa,IAAAC,MAAA,IAClCD,EAAQ,CAClB,IAAMG,EAAWH,EAAOE,GAEpBF,EAAOf,eAAeiB,KACtBH,EAAIG,GAAiB,MAAZC,EAAmBA,EAAYF,EAASC,IAGzD,OAAOH,GAWX,wBAkBA,yBAA8BV,EAAsBe,EAA2BC,QAAA,IAAAA,MAAA,YAC3E,IAAIC,EAAWC,EAAaC,EAAQC,EAAYC,EAAkBrB,EAAQqB,WAQ1E,IANAlB,SAASmB,iBAAiB,QAASC,GAAc,GACjDvB,EAAQsB,iBAAiB,YAAaE,GAAkB,GACxDxB,EAAQsB,iBAAiB,OAAQG,GAAa,GAC9CV,EAAaO,iBAAiB,QAASI,GAAc,GAG9CL,GAAY,CACf,GAAIA,EAAWM,KAAM,CACjBP,EAAaC,EAAWM,KACxB,MAEJN,EAAaA,EAAWA,WAG5B,SAASI,EAAYG,GAGbA,GAASA,EAAMC,SAAWd,IAE9BI,GAAS,EACTF,GAAY,EAERC,EACAC,GAAS,EAIbW,WAAW,WACP9B,EAAQ+B,cAAc,IAAIC,MAAM,YAKxC,SAASN,IAEAT,IACDA,GAAY,EAEZa,WAAW,WACP9B,EAAQ+B,cAAc,IAAIC,MAAM,aAK5C,SAASR,IAELN,GAAc,EAGlB,SAASK,EAAaK,GAClBK,QAAQC,IAAI,qBAAsBnC,EAAoB6B,EAAMC,OAAQ7B,GAAU4B,EAAMC,OAAQD,EAAMC,SAAWd,EAAca,EAAMC,OAAOM,UACxIjB,GAAc,EAEd,IAAMkB,EAAgBhB,GAAcQ,EAAMC,SAAWT,EAAapB,EAAU4B,EAAMC,OAIlF,MAF4B9B,EAAoBqC,EAAepC,EAASgB,GAExE,CAIA,IAAMqB,IAAoBtC,EAAoBqC,EAAepC,GAEzDmB,IAAWkB,GACXZ,IAIAY,GAAmBD,IAAkBrB,GACrCe,WAAW,WACPf,EAAauB,WAIhBD,GAAmBpB,IACpBA,GAAY,IAIpB,MAAO,CACHjB,QAASA,EACTe,aAAcA,EACdwB,OAAQ,WACJpC,SAASqC,oBAAoB,QAASjB,GAAc,GACpDvB,EAAQwC,oBAAoB,YAAahB,GAAkB,GAC3DxB,EAAQwC,oBAAoB,OAAQf,GAAa,GACjDV,EAAayB,oBAAoB,QAASd,MAiCtD,8BAAmCe,EAAMC,GACrC,IAAIC,EAAGC,EAAaC,EAAaC,EAAQC,EAAYC,EAEjDN,IACAE,EAAcH,EAAKQ,aACnBJ,EAqFR,SAA0BK,EAAM5E,EAAM6E,GAElC,IACIC,EAAe,UAAT9E,EAAmB4E,EAAKG,YAAcH,EAAKD,aACjDK,EAAS1F,OAAO2F,iBAAiBL,EAAM,MAQ3C,GAAIE,GAAO,GAAY,MAAPA,EAAa,CASzB,KAPAA,EAAME,EAAOhF,IAEH,GAAY,MAAP8E,KACXA,EAAMF,EAAKM,MAAMlF,IAIjBmF,EAAUC,KAAKN,GACf,OAAOA,EAQXA,EAAMO,WAAWP,IAAQ,EAI7B,OAAOA,EApGX,SAA8BF,EAAM5E,EAAM6E,EAAOS,EAAaN,GAC1D,IAAI3F,EAAIwF,KAAWS,EAAc,SAAW,WAExC,EAES,UAATtF,EAAmB,EAAI,EAEvB8E,EAAM,EACNS,EAAY,CAAC,MAAO,QAAS,SAAU,QAG3C,SAASC,EAAcxF,GACnB,OAAOqF,WAAWL,EAAOhF,IAG7B,KAAOX,EAAI,EAAGA,GAAK,EAED,WAAVwF,IACAC,GAAOU,EAAcX,EAAQU,EAAUlG,KAGvCiG,GAEc,YAAVT,IACAC,GAAOU,EAAc,UAAYD,EAAUlG,KAIjC,WAAVwF,IACAC,GAAOU,EAAc,SAAWD,EAAUlG,GAAK,YAGnDyF,GAAOU,EAAc,UAAYD,EAAUlG,IAG7B,YAAVwF,IACAC,GAAOU,EAAc,SAAWD,EAAUlG,GAAK,WAK3D,OAAOyF,EA2DMW,CAAqBb,EAAM5E,EAAM6E,GAAoC,WAhC3D,EAgC0FG,GAvH/FU,CAAiBtB,EAAM,SAAU,UAC/CI,EAASL,EAAKwB,WAAa,EAE3BlB,EADAJ,EAAIuB,EAAUxB,GAAMyB,IAAMD,EAAUzB,GAAM0B,IAAMrB,EAEhDE,EAAgBL,EAAIC,EAAcC,EAG9BF,EAAIE,EAAcD,EAAcE,EAChCL,EAAKwB,UAAYjB,EACVL,EAAIG,IACXL,EAAKwB,UAAYlB,KAM7B,IACMU,EAAY,IAAIW,OAAO,KADX,sCAAsCC,OACR,kBAAmB,KA8CnE,SAASH,EAAUhB,GACf,IAAIoB,EAASC,EACTC,EAAMtB,EAAKuB,wBACXC,EAAMxB,GAAQA,EAAK5C,cAEvB,GAAKoE,EAOL,OAHAJ,EAAUI,EAAIC,gBACdJ,EAQJ,SAAmBrB,GACf,OAAe,MAARA,GAAgBA,IAASA,EAAKtF,OAASsF,EAAyB,IAAlBA,EAAK3C,UAAkB2C,EAAK0B,YAT3EC,CAAUH,GAET,CACHP,IAAKK,EAAIL,IAAMI,EAAIO,YAAcR,EAAQS,UACzCC,KAAMR,EAAIQ,KAAOT,EAAIU,YAAcX,EAAQY,YAyGnD,SAASC,EAAUC,EAAQC,EAAUC,GACjC,YADiC,IAAAA,OAAA,GAC7BF,IAAWC,IAGJD,aAAkBG,MAAQF,aAAoBE,KAC9CH,EAAOI,YAAcH,EAASG,WAE7BJ,IAAWC,GAA6B,iBAAVD,GAAyC,iBAAZC,EAC5DC,EAASF,IAAWC,EAAWD,GAAUC,EAexD,SAAkB3H,EAAG+H,EAAGH,GACpB,IAAI3H,EAAG2B,EAEP,GAAS,MAAL5B,GAAkB,MAAL+H,EACb,OAAO,EAGX,GAAI/H,EAAEiC,YAAc8F,EAAE9F,UAAW,OAAO,EAExC,IACI,IAAI+F,EAAKjH,OAAOkH,KAAKjI,GACjBkI,EAAKnH,OAAOkH,KAAKF,GAErB,GAAIC,EAAGG,SAAWD,EAAGC,OACjB,OAAO,EAMX,IAJAH,EAAGI,OACHF,EAAGE,OAGEnI,EAAI+H,EAAGG,OAAS,EAAGlI,GAAK,EAAGA,IAC5B,GAAI+H,EAAG/H,IAAMiI,EAAGjI,GACZ,OAAO,EAIf,IAAKA,EAAI+H,EAAGG,OAAS,EAAGlI,GAAK,EAAGA,IAE5B,GADA2B,EAAMoG,EAAG/H,IACJwH,EAAUzH,EAAE4B,GAAMmG,EAAEnG,GAAMgG,GAAS,OAAO,EAGnD,cAAc5H,UAAa+H,EAE7B,MAAOM,GACL,OAAO,GA9CAC,CAASZ,EAAQC,EAAUC,IAkD1C,SAASW,EAASjH,GACd,OAAOkH,YAAiB,IAAVlH,EAAmBA,EAAQ,IAnH7C,kCAAuCmH,EAAeC,EAAaC,QAAA,IAAAA,MAAA,KAC/D,IAAMC,EAAaH,EAAc1B,wBAAwBN,IACnDoC,EAAa3I,OAAO4I,YAAcL,EAAc1B,wBAAwBgC,OAG9E,OAAOF,GAFeG,SAAS9I,OAAO2F,iBAAiB6C,GAAa,gBAAkBC,IAEjDE,EAAaD,GAGtD,yBAA8BK,GAC1B,IAAK,IAAI9F,KAAK8F,EACV,GAAIA,EAAO/G,eAAeiB,IAAM8F,EAAO9F,GAAGgF,OACtC,OAAO,EAGf,OAAO,GAaX,wBAA6Be,EAAaC,EAAatI,EAAmBuI,GACtE,IAAInJ,EAAGoJ,EAAGvH,EAAGwH,EAAsBC,EAAaH,EAASF,EAAKM,QAAU,GAExE,IAAKvJ,EAAI,EAAG6B,EAAIoH,EAAKf,OAAQlI,EAAIiJ,EAAKf,OAAQlI,IAG1C,IAFAqJ,EAAYzI,EAASA,EAAOqI,EAAKjJ,IAAMiJ,EAAKjJ,GAEvCoJ,EAAI,EAAGA,EAAIF,EAAKhB,OAAQkB,IAGzB,GAAI5B,EAAU6B,EAFFzI,EAASA,EAAOsI,EAAKE,IAAMF,EAAKE,IAEP,CACjCD,EAASG,EAAIE,OAAOxJ,EAAIsJ,EAAIpB,OAASrG,EAAG,GAAKyH,EAAIG,KAAKP,EAAKE,IAC3D,MAIZ,OAAOE,GA6EX,IAAMI,EAAuB,yBACvBC,EAAe,OAOrB,SAASC,EAAiBC,GACtB,OAAOA,EAAOC,QAAQJ,EAAsBC,GAuQhD,SAAgBI,EAAShH,EAAUiH,EAAcC,GAC7C,IAAKD,GAAuB,iBAARjH,EAAkB,OAAOkH,EAAqBlH,OAAMmH,EAExE,IACIlK,EADEmK,EAAQH,EAAKI,MAAM,KAClBC,EAAUtH,EAEjB,IAAK/C,EAAI,EAAGA,EAAImK,EAAMjC,SAAUlI,EAAG,CAC/B,GAAyBkK,MAArBG,EAAQF,EAAMnK,IACd,OAEAqK,EAAUA,EAAQF,EAAMnK,IAGhC,OAAOqK,EAvQX,mBAAwBC,EAAYC,EAAYC,EAAoBC,QAAA,IAAAA,MAAA,IAChE,IAAIzK,EAAGoJ,EAAGsB,EAAS3F,EAAM4F,EAAQC,EAAU,GAAIC,EAAU,GAAIC,EAAU,GACnE3C,EAAOsC,EAAQtC,KACfR,EAAS8C,EAAQ9C,OACjBoD,EAAuB,SAAT5C,GAAmB,EAAI,EACrC6C,EAAerD,EAAS,GAAK,IAE7BsD,EAAqB,CAACT,GAQ1B,GANIC,EAAQS,SACRD,EAAcR,EAAQS,OAAOC,IAAI,SAAAC,GAAS,MAAiB,mBAAVA,EAAuBA,EAAQ,SAAArG,GAAQ,OAAAgF,EAAShF,EAAMqG,GAAO,OAGlHZ,EAAWS,EAAY,GAET,KAAVV,GAAgBC,EAAU,CAC1B,IAAMa,EAAYzB,EAAiBtB,EAASiC,IACtCe,EAAc,IAAI7E,OAAO4E,EAAWL,GACpCO,EAAmB,IAAI9E,OAAO,IAAM4E,EAAWL,GAGrD,IAAKhL,EAAI,EAAG0K,GAAU,EAAO1K,EAAIsK,EAAMpC,OAAQlI,IAAK,CAGhD,IAFA+E,EAAOuF,EAAMtK,GAERoJ,EAAI,EAAGA,EAAI6B,EAAY/C,OAAQkB,IAAK,CACrC,IAAMoC,EAAQP,EAAY7B,GAAGrE,GAI7B,GAFA2F,EAAUc,IAAUjB,IAAU5C,GAAU6D,GAASjB,QAAmBL,IAAVK,GAAuBe,EAAYvF,KAAKuC,EAASkD,IAE9F,MAGbd,GACAE,EAAQnB,KAAK1E,GAIrB,GAAIoD,EACAwC,EAASC,MAEN,CAEH,IAAK5K,EAAI,EAAGA,EAAI4K,EAAQ1C,OAAQlI,IAC5B+E,EAAO6F,EAAQ5K,GAEXuL,EAAiBxF,KAAKuC,EAASkC,EAASzF,KACxC8F,EAAQpB,KAAK1E,GAEb+F,EAAQrB,KAAK1E,GAGrB4F,EAASE,EAAQY,OAAOX,SAI5BH,EAAS,GAAGc,OAAOnB,GAOvB,OAJInC,IACAwC,EAASA,EAAOxC,KAAK,SAACuD,EAAGC,GAAM,OAAArD,EAASkC,EAASkB,IAAIE,cAActD,EAASkC,EAASmB,KAAOZ,KAGzFJ,GAiBX,oCAAyCF,EAAcoB,QAAd,IAAApB,MAAA,SAAc,IAAAoB,MAAA,SAAmB9G,GAAS,WAK/E,IAJA,IACI+G,EACAC,EAFAC,EAAe,CAAC,GAAG,IAIdhM,EAAI,EAAGA,EAAIyK,EAAQvC,OAAQlI,KAG1B+L,EAAcC,EAFpBF,EAAkBD,EAAgBpB,EAAQzK,KAAO,OAG7C+L,EAAcC,EAAaF,GAAmB,IAElDC,EAAYtC,KAAKgB,EAAQzK,IAG7B,OAAOgM,GAGX,qBAA0B1B,EAAYvF,EAAMkH,QAAlB,IAAA3B,MAAA,SAAkB,IAAA2B,MAAA,SAAiBlH,GAAS,OAAAA,IAClE,IAAK,IAAI/E,EAAI,EAAGA,EAAIsK,EAAMpC,OAAQlI,IAC9B,GAAIiM,EAAc3B,EAAMtK,MAAQiM,EAAclH,GAC1C,OAAO/E,GAKnB,0BAA+BqC,GAC3B,KAAOA,EAAQ6J,YACX7J,EAAQ8J,YAAY9J,EAAQ6J,aAapC,0BAA+B5J,EAA+B8J,EAAiBC,EAAuCC,EAA6BC,GAC/I,IAOIC,EACAC,EACAC,EATEC,EAAcC,MAAMC,KAAKvK,EAAiBwK,UAC1CC,EAAQ,SAAChI,GACX,IAAMiI,OAAc9C,IAATnF,IAAuBuH,EAAmBA,EAAiBvH,GAAQA,GAE9E,GAAIiI,GAAa,IAAPA,EAAU,OAAOA,GAEzBC,EAAuB,IAAIC,MAAM,uBAgDvC,OA3CIZ,GACAI,EAAaC,EAAYxB,IAAI,SAAC9I,GAAiB,OAAAA,EAAQJ,eAAe,QAAU8K,EAAM1K,EAAQ8K,MAAQF,IACtGT,EAAa,GACbC,EAAW,IAAIW,IACfhB,EAASiB,QAAQ,SAAAtI,GACb,IAAMuI,EAASP,EAAMhI,GAErB0H,EAASc,IAAID,EAAQvI,GACrByH,EAAW/C,KAAK6D,OAIpBZ,EAAaC,EAAYxB,IAAI,SAAC9I,GAAiB,OAAAA,EAAQJ,eAAe,QAAUI,EAAQ8K,KAAOF,IAC/FT,EAAaJ,EAAS7C,SAI1BmD,EAAWW,QAAQ,SAACG,GACZA,IAAiBP,EACjBT,EAAWD,EAAuB,OAAS,WAAWU,GAEtDV,GAAuB,IAIV,EAAAkB,KAAKC,KAAKhB,EAAYF,GACXrB,IAAI,SAAAwC,GAChC,OAAIA,EAAK1L,eAAe,GACb0L,EAAKxC,IAAI,SAACyC,EAAK5N,GAAM,OAAAA,EAAI,EAAI4N,EAAMvB,EAAmBI,EAAWA,EAASxL,IAAI2M,GAAOA,KAEzFD,IAGAN,QAAQ,SAAAQ,GACXA,EAAU5L,eAAe,IAYrC,SAAwBK,EAAkBwL,EAAYC,GAGlD,IAFA,IAAMjB,EAAWxK,EAAiBwK,SAEzB9M,EAAI,EAAGA,EAAI+N,EAAQ/N,IACxB8M,EAASgB,GAAYE,SAfjBC,CAAe3L,EAAkBuL,EAAU,GAAIA,EAAU,IAGzDA,EAAU5L,eAAe,IAgBrC,SAAqBK,EAAkBwL,EAAYI,GAC/C,IAAMpB,EAAWxK,EAAiBwK,SAE9BgB,EACAhB,EAASgB,EAAa,GAAGK,MAAMC,MAAMtB,EAASgB,EAAa,GAAII,GAE/D5L,EAAiB+L,QAAQD,MAAM9L,EAAkB4L,GArB7CI,CAAYhM,EAAkBuL,EAAU,GAAIA,EAAUtE,MAAM,MAI7DjH,GA6BX,uBAAgBiM,EAAYC,EAAaC,EAAa3M,GAClD,IAAM4M,EAsBV,SAASC,EAAK5L,GACV,IAAM6L,EAAQ,GAEd,IAAI,IAAI5O,KAAK+C,EACK,MAAVA,EAAI/C,IAAgC,iBAAX+C,EAAI/C,GAC7B4O,EAAM5O,GAAK2O,EAAK5L,EAAI/C,IAEpB4O,EAAM5O,GAAK+C,EAAI/C,GAGvB,OAAO4O,EAhCWD,CAAK7M,GAavB,OAXAhB,OAAOkH,KAAKlG,GAAQuL,QAAQ,SAAA1L,GACxB,IAAM8D,EAAM3D,EAAOH,GAEf8D,IAAQ+I,EACRE,EAAU/M,GAAO8M,EAEH,MAAPhJ,GAA8B,iBAARA,IAC7BiJ,EAAU/M,GAAO4M,EAAYC,EAAQC,EAAQhJ,MAI9CiJ,GAiCX,aAwBA,qBAA0BG,EAAkBC,EAAqBC,QAAvC,IAAAF,MAAA,SAAkB,IAAAC,MAAA,IACxC,IAAME,EAAcD,EAAU,IAAIA,EAAO,QAAQA,EAAO,IAAM,kBAC1DE,EAAOJ,EAWX,OATAC,EAASvG,OAAOuG,IAEL5G,OAAS,IAChB2G,EAAMtG,OAAOsG,GACbC,EAASlF,EAAiBkF,GAE1BG,EAAOJ,EAAI/E,QAAQ,IAAIrD,OAAOqI,EAAQ,MAAOE,IAG1CC,GAUX,8BAAmCC,EAAIC,GACnC,IAAIC,EAAQ,KAEZ,OAAO,SAAUhH,GAAV,WAEG/G,EAAQ+G,EAAElE,OAAO7C,MAMnB+N,GACAC,aAAaD,GAGjBA,EAAQjL,WATW,WACf+K,EAAG3O,KAAK,EAAMc,GACd+N,EAAQ,MAOmBD,KAKvC,2BAAgCjE,EAAaZ,EAAcgF,GAGvD,OAFApE,EAAS0B,MAAM2C,QAAQrE,GAAUA,EAAS,CAACA,IAE7BC,IAAI,SAAAC,GACd,OAAOd,EAAMkF,KAAK,SAAAzK,GAAQ,OAAAuK,EAAYvK,KAAUqG,MACjDqE,OAAO,SAAA1K,GAAQ,OAAAA,KAGT,EAAA2K,SAAW,SAAC3K,GAAU,OAAAA,GACtB,EAAA4K,KAAO,SAAC5K,KAMrB,8BACY,KAAA6K,MAA0C,GA0BtD,OAxBI,YAAA3O,IAAA,SAAIsJ,GACA,YADA,IAAAA,MAAA,IACOsF,KAAKC,SAASD,KAAKD,MAAMJ,KAAK,SAAAO,GAAa,OAAAA,EAAUC,IAAMzF,MAGtE,YAAA0F,QAAA,WACI,OAAOJ,KAAKC,SAASD,KAAKD,MAAM,KAGpC,YAAArC,IAAA,SAAIhD,EAAoBlJ,QAApB,IAAAkJ,MAAA,IAEAsF,KAAKD,MAAQC,KAAKD,MAAMH,OAAO,SAAAM,GAAa,OAAAA,EAAUC,IAAMzF,GAAyB,KAAhBwF,EAAUC,IAE/EH,KAAKD,MAAMM,QAAQ,CAACF,EAAGzF,EAAO4F,EAAG9O,EAAOC,GAAI,IAAIsG,MAAOC,aAG3D,YAAAuI,MAAA,WACIP,KAAKD,MAAQ,IAGT,YAAAE,SAAR,SAAiBC,GACb,GAAIA,EACA,OAAOA,EAAUI,GAG7B,EA3BA,GAAa,EAAAE,c,8ZCvwBb,WAIA,OAEA,OAaA,cAMI,WAAYhO,EAASiO,QAAA,IAAAA,MAAA,IAArB,MACI,YAAMjO,EAASiO,EAAOC,YAAoC,IAAtBD,EAAOC,WAAsBhI,OAAO1C,GAASyK,EAAOC,WAAc,OAAK,K,OAJvG,EAAAX,MAAQ,IAAI,EAAAS,WAMhB,EAAKG,UAAUF,G,EAyoBvB,OAlpB4B,EAAAG,EAAA,GAajB,YAAAD,UAAP,SAAiBF,EAAkBI,GAAnC,gBAAiB,IAAAJ,MAAA,SAAkB,IAAAI,OAAA,GAE/BpM,QAAQC,IAAI,YAAa+L,GACzB,EAAAK,kBAAkBd,KAAKS,OAAQA,EAAQT,KAAKe,eAE5C,IAAMC,EAAc,SAAC9O,GAAa,OAAAuO,EAAOrO,eAAeF,IAClD+O,EAAmB,SAAC/O,GAAa,OAAAuO,EAAOrO,eAAeF,KAAcuO,EAAOvO,IAG9E8O,EAAY,eACZhB,KAAKS,OAAOS,cAAgBT,EAAOU,WAGnCH,EAAY,cACZhB,KAAKS,OAAOS,cAAgBT,EAAOW,SACnCpB,KAAKS,OAAOY,oBAAsBZ,EAAOW,WAGzCJ,EAAY,aAAeA,EAAY,eACvChB,KAAKS,OAAOa,UAAYtB,KAAKS,OAAOc,WAAavB,KAAKS,OAAOW,UAG7DJ,EAAY,gBACZhB,KAAKS,OAAOS,aAAeT,EAAOe,WAClCxB,KAAKS,OAAOgB,eAAiBhB,EAAOe,WACpCxB,KAAKS,OAAOiB,eAAiBjB,EAAOe,YAIpCR,EAAY,kBACZhB,KAAKS,OAAOS,aAAeT,EAAOS,cAGlCF,EAAY,wBACZhB,KAAKS,OAAOY,mBAAqBZ,EAAOY,oBAGxCL,EAAY,sBACZhB,KAAKS,OAAOkB,iBAAmBlB,EAAOkB,kBAGtCX,EAAY,mBACZhB,KAAKS,OAAOgB,cAAgBhB,EAAOgB,eAGnCT,EAAY,mBACZhB,KAAKS,OAAOiB,cAAgBjB,EAAOiB,eAGnCV,EAAY,cACZhB,KAAKS,OAAOa,SAAWb,EAAOa,WAI9BL,EAAiB,qBAAuBjB,KAAKS,OAAOmB,YAAcZ,EAAY,iBAC9EhB,KAAKS,OAAOoB,iBAAmB,SAAC3M,GAAS,SAAAgF,SAAShF,EAAM,EAAKuL,OAAOmB,YAAY,MAGhFX,EAAiB,qBAAuBjB,KAAKS,OAAOqB,YAAcd,EAAY,iBAC9EhB,KAAKS,OAAOsB,iBAAmB,SAAC7M,GAAS,SAAAgF,SAAShF,EAAM,EAAKuL,OAAOqB,eAGpEb,EAAiB,sBAAwBjB,KAAKS,OAAOuB,aAAehB,EAAY,kBAChFhB,KAAKS,OAAOwB,kBAAoB,SAAC/M,GAAS,SAAAgF,SAAShF,EAAM,EAAKuL,OAAOuB,aAAa,MAGlFf,EAAiB,sBAAwBjB,KAAKS,OAAOyB,YAAclC,KAAKS,OAAOmB,aAAeZ,EAAY,eAAiBA,EAAY,iBACvIhB,KAAKS,OAAOhE,iBAAmB,SAACvH,GAAS,SAAAgF,SAAShF,EAAM,EAAKuL,OAAOyB,YAAc,EAAKzB,OAAOmB,YAAY,MAG1GX,EAAiB,wBAA0BjB,KAAKS,OAAO0B,eAAiBnB,EAAY,oBACpFhB,KAAKS,OAAO2B,oBAAsB,SAAClN,GAAS,SAAAgF,SAAShF,EAAM,EAAKuL,OAAO0B,kBAOvElB,EAAiB,6BAA+BjB,KAAKS,OAAO4B,wBAA0BrC,KAAKS,OAAOuB,eAAiBvB,EAAO6B,0BAA4BtB,EAAY,2BAA6BA,EAAY,mBAC3MhB,KAAKS,OAAO6B,wBAA0B,SAACpN,EAAMwF,GAAU,SAAA6H,UAAU,EAAArI,SAAShF,EAAM,EAAKuL,OAAO4B,wBAA0B,EAAK5B,OAAOuB,aAAa,GAAOtH,MAGtJuG,EAAiB,6BAA+BjB,KAAKS,OAAO+B,wBAA0BxC,KAAKS,OAAOuB,eAAiBvB,EAAOgC,0BAA4BzB,EAAY,2BAA6BA,EAAY,mBAC3MhB,KAAKS,OAAOgC,wBAA0B,SAACvN,GAAS,SAAAgF,SAAShF,EAAM,EAAKuL,OAAO+B,wBAA0B,EAAK/B,OAAOuB,aAAa,KAG9HhB,EAAY,iBAAmBA,EAAY,yBAC3ChB,KAAKS,OAAOiC,oBAAsBjC,EAAOkC,aAGzClC,EAAOmC,YAAcnC,EAAOoC,eAC5B7C,KAAKS,OAAOoC,aAA2C,iBAArBpC,EAAOmC,UAAyB,SAAClI,GAAU,SAAAgE,YA1G/D,SA0G8FhE,EAAO+F,EAAOmC,YAAa,SAAClI,GAAU,OAAAA,IAGlJsF,KAAKS,OAAOa,WAAab,EAAOqC,aAChC9C,KAAKS,OAAOqC,WAAa,SAACtR,GAAU,SAAKuR,SAASvR,GAAO,KAGxDwO,KAAKS,OAAOuC,kBAEbhD,KAAKS,OAAOuC,gBAAkB,SAACC,GAC3B,OAAO,EAAKC,gBACPC,KAAK,SAAA1I,GAAS,SAAA2I,gBAAgBH,EAAQxI,EAAO,EAAKgG,OAAOoB,sBAIlEb,EAAY,WACZhB,KAAKS,OAAO4C,SAAW,SAAC3I,GACpB,IAAIE,EAMJ,MAJqB,iBAAVF,GAAsBA,EAAMtI,eAAe,WAClDwI,EAAUF,EACVA,EAAQA,EAAMA,OAEX,EAAA4I,QAAQ7C,EAAOhG,OAAS,GAAIC,EAAO,EAAK+F,OAAOwB,kBAAmBrH,KAKjF,IAAI2I,GAAiB,EACjB/R,EAAQwO,KAAKxO,MAEjBwO,KAAKwD,iBAAiBxD,KAAKS,OAAOgD,oBAClCzD,KAAK0D,aAAa1D,KAAKS,OAAOU,WAC9BnB,KAAK2D,YAAY3D,KAAKS,OAAOW,UAC7BpB,KAAK4D,YAAY5D,KAAKS,OAAOc,UAC7BvB,KAAK6D,YAAY7D,KAAKS,OAAOqD,UAC7B9D,KAAK+D,iBAA0C,QAAzB/D,KAAKS,OAAOuD,UAClChE,KAAKiE,qBAEAjD,EAAY,4BAA8BA,EAAY,2BAA6BA,EAAY,gBAAkBA,EAAY,uBAAyBhB,KAAKkE,cAAc7L,SAE1K2H,KAAKmE,uBAAuB,IAC5BnE,KAAKmE,uBAAuBnE,KAAKkE,gBAGjClD,EAAY,qBACZhB,KAAKoE,mBAGLpD,EAAY,kBAAoBP,EAAO4D,cACvCrE,KAAKsE,wBAGLtD,EAAY,UAAYA,EAAY,eACpChB,KAAKD,MAAMQ,QAGPP,KAAKuE,SACLvE,KAAKwE,gBAAgB,IACrBxE,KAAKyE,wBAAwB,MAIjCzD,EAAY,WACZxP,EAAQiP,EAAOjP,MACf+R,GAAiB,GAGjBvD,KAAKS,OAAOW,WAAarE,MAAM2C,QAAQlO,KACvCA,EAAiB,MAATA,EAAgB,CAACA,GAAS,GAClC+R,GAAiB,IAGhBvD,KAAKS,OAAOW,UAAYrE,MAAM2C,QAAQlO,KACvCA,EAAQA,EAAM,GACd+R,GAAiB,GAGjBA,GAAkBvD,KAAKxO,QAAUA,IACjCwO,KAAKxO,MAAQA,EACbwO,KAAK+C,SAAS,IAEd/C,KAAK0E,YAAY1E,KAAKS,OAAOW,SAAW5P,EAAkB,MAATA,EAAgB,CAACA,GAAS,IACtE2R,KAAKnD,KAAK2E,gBAAgB5S,KAAKiO,OAEhCa,IAAcG,EAAY,UAC1BhB,KAAK4E,kBAKV,YAAAC,KAAP,sBACQ7E,KAAKuE,QAETvE,KAAKyE,wBAAwB,IACxBtB,KAAK,SAAC7F,GACH,EAAKwH,YACA,EAAKrE,OAAOW,UAAY,EAAK8C,cAAc7L,QAK5C/D,WAAW,WACP,EAAKmM,OAAOqC,WAAWpS,KAAK,EAAM,EAAK+P,OAAOwB,kBAAkB,EAAKiC,cAAc,UAMhG,YAAAa,MAAP,WACS/E,KAAKS,OAAOW,UAGbpB,KAAKS,OAAOqC,WAAWpS,KAAKsP,KAAM,IAGjCA,KAAKuE,QAEVvE,KAAKgF,aAIT,YAAA9B,cAAA,SAAcxI,GAAd,IAIQuK,EAAaC,EAJrB,OAMI,QANU,IAAAxK,MAAA,IACVsF,KAAKmF,YAAW,GAKZnF,KAAKS,OAAO2E,SACZH,EAAcjF,KAAKD,MAAM3O,IAAIsJ,OAE1B,CAMH,IAAIE,OAAO,EAEU,iBAAVF,GAAsBA,EAAMtI,eAAe,WAClDwI,EAAUF,EACVA,EAAQA,EAAMA,OAGlBwK,EAAwB,EAAA5B,QAAQtD,KAAKkE,cAAexJ,EAAOsF,KAAKS,OAAO6B,wBAAyB1H,GAiBpG,OAdAoF,KAAKqF,iBAAmBC,QAAQC,QAAQN,GAAejF,KAAKS,OAAO4C,SAAS3I,EAAOwK,IAC9E/B,KAAK,SAAC1I,GAMH,OAJA,EAAKsF,MAAMrC,IAAIhD,EAAOD,GACtB,EAAK4K,sBAAmBhL,EACxB,EAAK8K,YAAW,GAET1K,IAEV+K,MAAM,SAAAC,GACH,EAAKJ,sBAAmBhL,EACxB,EAAK8K,YAAW,KAGjBnF,KAAKqF,kBAGhB,YAAAZ,wBAAA,SAAwB/J,GAAxB,WAEI,OAAOsF,KAAKkD,cAAcxI,GACrByI,KAAK,SAAC1I,GACC,EAAKiL,iBACLjL,EAAMkL,UAEV,EAAKnB,gBAAgB/J,EAAOC,MAcxC,YAAAkL,OAAA,SAAO9T,GAAP,WACI,GAAIkO,KAAK6F,kBAAmB,CACxB,IAAMhS,EAAamM,KAAK6F,kBAAkBhS,WAE1CmM,KAAK8F,WAAW9F,KAAK6F,mBACrB7F,KAAK+F,yBAAyB,KAAMlS,QAEjC,GAAImM,KAAKS,OAAOmC,UAAW,CAC9B,IAAMlI,EAAQsF,KAAKgG,WACnB,IAAKtL,EAAO,OAEZsF,KAAKmF,YAAW,GAEhBG,QAAQC,QAAQvF,KAAKS,OAAOoC,aAAanI,IACpCyI,KAAK,SAAA8C,GACF,IAAMC,EAAa,EAAKC,sBAAsBF,GAE9C,EAAKd,YAAW,GAChB,EAAKW,WAAWI,GAAY,GAExB,EAAKzF,OAAO4D,cACZ,EAAK0B,6BAGZP,MAAM,SAAAC,GACH,EAAKN,YAAW,OAMhC,YAAAiB,YAAA,WACI,IAAMnD,EAASjD,KAAKS,OAAOmB,WAAa5B,KAAKkE,cAAc5I,IAAI0E,KAAKS,OAAOoB,kBAAoB7B,KAAKkE,cAC9F5Q,EAAW0M,KAAKS,OAAOW,SAAW6B,EAAOvJ,QAAUuJ,EAAO,GAE5DjD,KAAKxO,QAAU8B,IACf0M,KAAKxO,MAAQ8B,EACb0M,KAAKiE,oBACLjE,KAAK2E,kBACL3E,KAAK4E,kBAIb,YAAAA,cAAA,WACI,IAAMxQ,EAAa,IAAII,MAAM,UAE7BJ,EAAM5C,MAAQwO,KAAKxO,MACnBwO,KAAKtK,KAAKnB,cAAcH,IAIrB,YAAAsQ,YAAP,SAAmBjK,GAAnB,WAQI,OAAO6K,QAAQC,QAAQvF,KAAKS,OAAOmB,WAAa5B,KAAKS,OAAOuC,gBAAgBvI,GAASA,GAChF0I,KAAK,SAAA1I,GACF,EAAK4L,0BAA0B5L,GAE3B,EAAKhH,WAEL,EAAKgR,wBAAwB,EAAK6B,kBAAkB/S,aAAa/B,UAO1E,YAAAsU,WAAP,SAAkBS,EAAiBC,GAG/B,IAAMtR,EAAOqR,EAAgBjJ,KAG7B,GAAI0C,KAAKS,OAAOgG,eAAiB,GAAKzG,KAAKkE,cAAc7L,QAAU2H,KAAKS,OAAOgG,cAC3EzG,KAAK0G,uBADT,CAMA,IAAK1G,KAAKS,OAAOkG,cAAgB3G,KAAK4G,sBAAsBL,GAAkB,CAC1E,IAAMM,EAAoB7G,KAAK8G,6BAA6B5R,GAI5D,OAFA8K,KAAK+G,yBAAyBR,QAC9BvG,KAAKgH,aAAaH,GAAmB,GAKrC7G,KAAKS,OAAOW,SACZpB,KAAKiH,4BAELjH,KAAKkH,mBACLlH,KAAK+C,SAAS,KAGdyD,GACAxG,KAAK+C,SAAS,IAGlB/C,KAAKmH,yBAAyBjS,GAG1B8K,KAAKuE,QAAUvE,KAAKS,OAAOiB,eAC3B1B,KAAK+E,QACL/E,KAAK+C,SAAS,MAGd/C,KAAKwE,gBAAgBxE,KAAKD,MAAM3O,IAAI4O,KAAKgG,aAYpChG,KAAKS,OAAO2E,UACbpF,KAAKyE,wBAAwBzE,KAAKgG,aAQ1ChG,KAAKoG,gBAGF,YAAAY,aAAP,SAAoBI,EAAiBC,GAArC,WACUC,EAAqBtH,KAAKS,OAAOa,UAAYtB,KAAKS,OAAOW,SAE/D,IAAKpB,KAAKS,OAAOW,UAAYpB,KAAKuH,WAY9B,OAXAvH,KAAKiH,2BACDI,IAEArH,KAAKwH,mBAAmBJ,GACxBpH,KAAKiH,2BACL3S,WAAW,WACP,EAAKyO,SAAS,YAItB/C,KAAK6E,OAILyC,GAAsBF,GACtB9S,WAAW,WACP,EAAKmM,OAAOqC,WAAWpS,KAAK,EAAM,EAAK+P,OAAOwB,kBAAkBmF,EAAgB9J,SAMpF+J,GAAkBD,IAAoBpH,KAAKyH,uBAAyBH,GACpEtH,KAAKwH,mBAAmBJ,GACxBpH,KAAKiH,6BAGLjH,KAAKiH,yBAAyBG,GAE1BpH,KAAKS,OAAOY,oBACZrB,KAAK6E,SAKV,YAAAqC,iBAAP,WACIlH,KAAKqG,0BAA0B,KAMnC,YAAAA,0BAAA,SAA0B5L,QAAA,IAAAA,MAAA,IACtBuF,KAAKkE,cAAgBzJ,EAKrBuF,KAAKmE,uBAAuB1J,IAGhC,YAAA0M,yBAAA,SAAyBjS,GACrB8K,KAAKkE,cAActK,KAAK1E,GACxB8K,KAAK0H,sBAAsBxS,IAO/B,YAAAsS,mBAAA,SAAmBJ,GAAnB,WACI,GAAKA,EAAL,CAEA,IAAMO,EAAeP,EAAgB9J,KAErC0C,KAAK4H,kBAAkBR,GAAiB,GAExC9B,QAAQC,QAAQvF,KAAKS,OAAOoH,aAAaF,IACpCxE,KAAK,SAAC2E,GACH,IAAMC,EAAY,EAAAC,UAAU,EAAK9D,cAAeyD,EAAc,EAAKlH,OAAOhE,kBAO1E,GALA,EAAKmL,kBAAkBR,GAAiB,GACxC,EAAKlD,cAAcvK,OAAOoO,EAAW,GACrC,EAAKE,cAAcb,GAGf,EAAK3G,OAAOkG,aACZ,EAAKnC,gBAAgB,EAAKzE,MAAMK,eAE7B,CACH,IAAMmG,EAAkB,EAAK2B,qBAAqBP,GAE9C,EAAKf,sBAAsBL,IAC3B,EAAKQ,yBAAyBR,IAIjC,EAAKhC,QAAU,EAAK9D,OAAOS,cAC5B,EAAK2D,OAGL,EAAKN,QAAU,EAAK9D,OAAOgB,eAC3B,EAAKsD,QAGT,EAAKqB,gBAERZ,MAAM,SAAAC,GACHhR,QAAQC,IAAI,IAAK+Q,GACjB,EAAKmC,kBAAkBR,GAAiB,OAOpD,YAAAe,kBAAA,SAAkBC,EAAqBf,GAC/BrH,KAAKqI,aAETD,EAAoB9K,OAAS+J,GAC/BrH,KAAKsI,yBAAyB,iBAAkBF,EAAqBA,EAAoB9K,KAAM+J,GAG7FrH,KAAKS,OAAOW,UAAYpB,KAAKS,OAAOU,YAAckG,IAE9CrH,KAAKS,OAAOW,WAAapB,KAAKS,OAAOU,YACrCkG,GAAiB,GAGrBrH,KAAKgH,aAAaoB,EAAqBf,MAK3C,YAAAkB,cAAA,SAAchC,GAENvG,KAAKqI,YAAcrI,KAAKwI,kBAAkBjC,KAK9CvG,KAAK8F,WAAWS,GAEhBvG,KAAKsI,yBAAyB,aAAc/B,KAGhD,YAAAkC,gBAAA,WACQzI,KAAKqI,aAELrI,KAAKS,OAAOkB,mBAAqB3B,KAAKS,OAAOW,UAAapB,KAAKkE,cAAc7L,QAC7E2H,KAAK6E,QAIb,YAAA6D,aAAA,SAAalX,GACTwO,KAAKgF,YACLhF,KAAKyE,wBAAwBjT,GACxB2R,KAAKnD,KAAK8E,SAAS/S,KAAKiO,QAGjC,YAAA2I,cAAA,SAAcpQ,GACV,OAAQA,EAAEzG,KACN,IAAK,UACGkO,KAAKuE,OACLvE,KAAK4I,+BAEL5I,KAAK6E,OAET,MAEJ,IAAK,YACG7E,KAAKuE,OACLvE,KAAK+F,2BAEL/F,KAAK6E,OAET,MAEJ,IAAK,YACL,IAAK,aACD,MAEJ,IAAK,MACD7E,KAAK4F,OAAO,OACZ,MAEJ,IAAK,QACD5F,KAAK4F,OAAO,SAEZrN,EAAEsQ,iBACF,MAMJ,IAAK,SACD7I,KAAK8I,OAEL,MAEJ,IAAK,YACD,IAAK9I,KAAK+I,KAAKC,YAAYxX,MAAO,CAC9B,IAAMyX,EAAsBjJ,KAAKkJ,6BAA6BlJ,KAAK+I,KAAKI,iBAExEnJ,KAAKgH,aAAaiC,GAClB,MAER,QACQjJ,KAAKS,OAAOW,UACZpB,KAAKiH,6BAKvB,YAAAqB,yBAAA,SAAyBc,EAAW5W,EAAU0C,EAAOmS,KAwBvD,EAlpBA,CAA4B,EAAAgC,WAAf,EAAAzI,U,gGCnBb,WAEA,OAkBM0I,EAAW,CACbC,OAAqB,cACrB1E,KAAqB,OACrBzD,SAAqB,WACrBoI,OAAqB,SACrBC,QAAqB,UACrBC,QAAqB,UACrBvI,UAAqB,YACrBwI,SAAqB,WACrBpI,SAAqB,WACrBuC,SAAqB,WACrB8F,QAAqB,UACrBC,MAAqB,QACrBC,KAAqB,OACrBnC,aAAqB,oCACrBoC,UAAqB,qCACrBC,mBAAqB,QACrBC,SAAqB,wCAMzB,aAqGI,WAAYzX,EAASwD,GAArB,IACQkU,EADR,OApGA,KAAAnJ,cAAqB,CACjBK,UAAU,EACVG,UAAU,EACVoB,YAAa,SACbD,oBAAqB,MACrBe,mBAAoB,YAGpBvC,cAAc,EACdG,oBAAoB,EACpBM,kBAAkB,EAClBF,eAAe,EACfC,eAAe,EACf2C,cAAc,EAGd7C,YAAY,EACZL,WAAW,EACXwF,cAAc,EAGdnV,WAAO6I,EACPI,MAAO,GAEP4I,SAAU,SAAC3I,EAAawK,GAAkC,UAC1DlC,qBAAiB3I,EAGjBuH,gBAAYvH,EACZyH,gBAAYzH,EACZ2H,iBAAa3H,EACb6H,gBAAY7H,EACZ8H,mBAAe9H,EACfgI,4BAAwBhI,EACxBmI,4BAAwBnI,EAGxBwH,iBAAkB,EAAAhC,SAClBoC,kBAAmB,EAAApC,SACnBpD,iBAAkB,EAAAoD,SAClBuC,oBAAqB,EAAAtC,KACrB2C,wBAAyB,EAAA5C,SACzByC,wBAAyB,EAAAzC,SACzBsK,iBAAkB,EAAAtK,SAClBkC,iBAAkB,SAAC7M,GAAS,UAC5BkV,iBAAkB,EAAAtK,KAClBuK,WAAY,SAACC,GAAsB,UAGnC1H,WAAW,EACXC,aAAc,EAAAhD,SACdgI,aAAc,EAAAhI,SACd0K,YAAa,yBAEbjJ,UAAU,EACVwB,WAAY,EAAAjD,SAGZ2K,qBAAsBC,IACtBhE,cAAegE,IACfC,wBAAyB,IACzBC,SAAU,IACVvF,UAAU,EACVwF,YAAY,EACZ5G,cAAU3J,EAEVwQ,OAAO,GAQX,KAAApK,OAAcxP,OAAO6Z,OAAO,GAAI9K,KAAKe,eAErC,KAAAmD,cAAgB,GAEhB,KAAA6E,KAAY,GACZ,KAAAxE,QAAkB,EAClB,KAAA9Q,WAAqB,EACrB,KAAAsX,WAAqB,EACrB,KAAAC,aAAuB,EACvB,KAAAC,SAAmB,EACnB,KAAA5C,YAAsB,EACtB,KAAAd,YAAsB,EACtB,KAAA7B,iBAA2B,EAI3B,KAAAwF,gBAAkB,EAAApL,KAClB,KAAAwG,kBAAoB,KAulBpB,KAAA6E,mBAAqB,WAEjB,EAAKC,UAAS,IAGlB,KAAAC,kBAAoB,WAEhB,EAAKrG,YACL,EAAKiC,2BACL,EAAKzC,kBACL,EAAK4G,UAAS,GACd,EAAKrI,SAAS,KAUlB,KAAAuI,mBAAqB,EAAAC,mBAAmB,SAAC/Z,GACrC,EAAKkX,aAAalX,IACnBwO,KAAKS,OAAOkK,UAGf,KAAAa,qBAAuB,SAACjT,GACpB,EAAKoQ,cAAcpQ,IAGvB,KAAAkT,4BAA8B,SAAClT,GAG3B,IAAM6P,EAAsB,EAAA7V,oBAAoBgG,EAAElE,OAAQ,EAAK0U,KAAK2C,kBAAmBpC,EAAS3B,cAEhG,GAAIS,EAAqB,CACrB,IAAMuD,EAA4B,EAAApZ,oBAAoBgG,EAAElE,OAAQ+T,EAAqBkB,EAASU,oBAE9F,EAAK7B,kBAAkBC,IAAuBuD,QAG9C,EAAKlD,mBAIb,KAAAmD,qBAAuB,SAACrT,GACpB,IAAMgO,EAAkB,EAAAhU,oBAAoBgG,EAAElE,OAAQ,EAAK0U,KAAK2C,kBAAoBpC,EAASW,UAEzF1D,IACA,EAAKgC,cAAchC,GAGnBjS,WAAW,WACP,GAAK,EAAKiQ,OAAV,CAEA,IAAMsH,EAAsB,EAAAtZ,oBAAoBI,SAASmZ,iBAAiBvT,EAAEwT,MAAOxT,EAAEyT,OAAuB,EAAKjD,KAAK2C,kBAAmBpC,EAASW,WAAa,EAAKgC,sBAEhKJ,GACA,EAAKvH,qBAAqBuH,QAO1C,KAAAK,yBAA2B,SAAC3T,GACxB,IAAM4T,EAAgB,EAAA5Z,oBAAoBgG,EAAElE,OAAQ,EAAK0U,KAAK2C,kBAAmBpC,EAASW,UAEtFkC,GAAiBA,IAAkB,EAAKtG,mBACxC,EAAKvB,qBAAqB6H,IAIlC,KAAAC,yBAA2B,SAAC7T,GAAM,OAAAA,EAAE6T,4BAnpB5BpW,KACAkU,EAAevX,SAAS0Z,cAAc,UAEzBC,UAAY5T,OAAO1C,GAChCxD,EAAQ+Z,OAAOrC,IAGnB,IAAMzX,EAAmBE,SAAS0Z,cAAc,OAEhD5Z,EAAiB6Z,UAAY5T,OAAO,WAEpCsH,KAAKtK,KAAOlD,EAGZwN,KAAK+I,KAAKI,gBAAkB1W,EAAiB+Z,cAAc,uBAC3DxM,KAAK+I,KAAK0D,kBAAoBha,EAAiB+Z,cAAc,8BAC7DxM,KAAK+I,KAAK2D,UAAYja,EAAiB+Z,cAAc,sCACrDxM,KAAK+I,KAAK4D,mBAAqB3M,KAAK+I,KAAK2D,UAAUF,cAAc,UACjExM,KAAK+I,KAAK6D,gBAAkBna,EAAiB+Z,cAAc,iCAC3DxM,KAAK+I,KAAK8D,gBAAkBpa,EAAiB+Z,cAAc,kCAC3DxM,KAAK+I,KAAK+D,gBAAkB9M,KAAK+I,KAAK8D,gBAAgBL,cAAc,uCACpExM,KAAK+I,KAAKC,YAAchJ,KAAK+I,KAAK8D,gBAAgBL,cAAc,SAChExM,KAAK+I,KAAKgE,aAAeta,EAAiB+Z,cAAc,mCAExDxM,KAAK+I,KAAK2C,kBAAoBjZ,EAAiB+Z,cAAc,yBAC7DxM,KAAK+I,KAAKiE,mBAAqBva,EAAiB+Z,cAAc,2BAC9DxM,KAAK+I,KAAKkE,cAAgBxa,EAAiB+Z,cAAc,0BACzDxM,KAAK+I,KAAK7M,YAAczJ,EAAiB+Z,cAAc,kCACvDxM,KAAK+I,KAAKmE,kBAAoBza,EAAiB+Z,cAAc,yCAC7DxM,KAAK+I,KAAKoE,OAAS1a,EAAiB+Z,cAAc,yCAGlDxM,KAAK+I,KAAK2D,UAAUvO,SACpB6B,KAAK+I,KAAK+D,gBAAgB3O,SAC1B6B,KAAK+I,KAAKmE,kBAAkB/O,SAC5B6B,KAAK+I,KAAKoE,OAAOhP,SACjB6B,KAAK+I,KAAK7M,YAAYiC,SAEtB6B,KAAKtK,KAAK7C,UAAUua,IAAI9D,EAASC,QACjC,EAAA8D,eAAerN,KAAKtK,MAGpBsK,KAAKtK,KAAK8I,QAAQD,MAAMyB,KAAKtK,KAAMjD,EAAiBwK,UAEpD+C,KAAKsN,eAwmBb,OArmBW,YAAAC,UAAP,SAAiBha,QAAA,IAAAA,MAAeyM,KAAK+I,KAAKC,aAClChJ,KAAKsG,mBACLtG,KAAKsG,kBAAkBvR,SAG3BiL,KAAKsG,kBAAoB,EAAAkH,cAAcxN,KAAKtK,KAAMnC,IAWtD,YAAA+Z,aAAA,WACItN,KAAKtK,KAAK5B,iBAAiB,QAASkM,KAAKmL,oBACzCnL,KAAKtK,KAAK5B,iBAAiB,OAAQkM,KAAKqL,mBACxCrL,KAAK+I,KAAKC,YAAYlV,iBAAiB,QAASkM,KAAKsL,oBACrDtL,KAAK+I,KAAKC,YAAYlV,iBAAiB,UAAWkM,KAAKwL,sBACvDxL,KAAK+I,KAAKC,YAAYlV,iBAAiB,SAAUkM,KAAKoM,0BACtDpM,KAAK+I,KAAKI,gBAAgBrV,iBAAiB,QAASkM,KAAKyL,6BACzDzL,KAAK+I,KAAK2C,kBAAkB5X,iBAAiB,QAASkM,KAAK4L,sBAC3D5L,KAAK+I,KAAK2C,kBAAkB5X,iBAAiB,YAAakM,KAAKkM,0BAG/DlM,KAAKuN,UAAUvN,KAAK+I,KAAKC,cAI7B,YAAAyE,gBAAA,WACIzN,KAAKtK,KAAKV,oBAAoB,QAASgL,KAAKmL,oBAC5CnL,KAAKtK,KAAKV,oBAAoB,OAAQgL,KAAKqL,mBAC3CrL,KAAK+I,KAAKC,YAAYhU,oBAAoB,QAASgL,KAAKsL,oBACxDtL,KAAK+I,KAAKC,YAAYhU,oBAAoB,UAAWgL,KAAKwL,sBAC1DxL,KAAK+I,KAAKC,YAAYhU,oBAAoB,SAAUgL,KAAKoM,0BACzDpM,KAAK+I,KAAKI,gBAAgBnU,oBAAoB,QAASgL,KAAKyL,6BAC5DzL,KAAK+I,KAAK2C,kBAAkB1W,oBAAoB,QAASgL,KAAK4L,sBAC9D5L,KAAK+I,KAAK2C,kBAAkB1W,oBAAoB,YAAagL,KAAKkM,0BAElElM,KAAKsG,kBAAkBvR,UAG3B,YAAA2R,iBAAA,sBACI1G,KAAKtK,KAAK7C,UAAUua,IAAI9D,EAASM,SAEjCtV,WAAW,WACP,EAAKoB,KAAK7C,UAAUsL,OAAOmL,EAASM,UACrC5J,KAAKS,OAAOiK,0BAInB,YAAA3G,iBAAA,SAAiB2B,GACb1F,KAAKtK,KAAK7C,UAAU6S,EAjNE,MACG,UAgN+D4D,EAASO,OACjG7J,KAAK0F,gBAAkBA,GAG3B,YAAA0F,SAAA,SAASsC,GACL1N,KAAKtK,KAAK7C,UAAU6a,EAtNE,MACG,UAqNuDpE,EAASG,SACzFzJ,KAAKvM,UAAYia,GAGrB,YAAAvI,WAAA,SAAW4F,GACP/K,KAAKtK,KAAK7C,UAAUkY,EA3NE,MACG,UA0NyDzB,EAASI,SAC3F1J,KAAK+K,UAAYA,GAGrB,YAAAnD,kBAAA,SAAkBpV,EAASuY,GACvBvY,EAAQK,UAAUkY,EAhOI,MACG,UA+NuDzB,EAASI,UAG7F,YAAAhG,aAAA,SAAasH,GACThL,KAAKtK,KAAK7C,UAAUmY,EApOE,MACG,UAmO2D1B,EAASnI,WAC7FnB,KAAKgL,YAAcA,GAGvB,YAAA2C,mBAAA,SAAmBnb,EAAS6V,GACxB7V,EAAQK,UAAUwV,EAzOI,MACG,UAwOwDiB,EAASxF,WAG9F,YAAA0E,kBAAA,SAAkBhW,GACd,OAAOA,EAAQK,UAAU+a,SAAStE,EAASxF,WAG/C,YAAAD,YAAA,SAAYwE,GACJA,IAAerI,KAAKqI,YACpBrI,KAAKtK,KAAKmY,aAAavE,EAASxF,SAAU,YAC1C9D,KAAK+I,KAAKC,YAAY6E,aAAavE,EAASxF,SAAU,MAE9CuE,GAAcrI,KAAKqI,aAC3BrI,KAAKtK,KAAKoY,gBAAgBxE,EAASxF,UACnC9D,KAAK+I,KAAKC,YAAY8E,gBAAgBxE,EAASxF,WAGnD9D,KAAKqI,WAAaA,GAGtB,YAAAzE,YAAA,SAAY2D,GACJA,IAAevH,KAAKuH,YACpBvH,KAAKtK,KAAKmY,aAAavE,EAAS/H,SAAU,IAC1CvB,KAAK+I,KAAKC,YAAY6E,aAAavE,EAAS/H,SAAU,MAE9CgG,GAAcvH,KAAKuH,aAC3BvH,KAAKtK,KAAKoY,gBAAgBxE,EAAS/H,UACnCvB,KAAK+I,KAAKC,YAAY8E,gBAAgBxE,EAAS/H,WAGnDvB,KAAKuH,WAAaA,GAGtB,YAAAzC,SAAA,WACS9E,KAAKuE,SACDvE,KAAKS,OAAOuD,UACbhE,KAAK+D,iBAAiB,EAAAgK,uBAAuB/N,KAAKtK,KAAMsK,KAAK+I,KAAK2C,oBAEtE1L,KAAKuE,QAAS,EACdvE,KAAKtK,KAAK7C,UAAUua,IAAI9D,EAASzE,MAE7B7E,KAAKS,OAAO4D,cACZrE,KAAKgO,4BAGThO,KAAKtK,KAAKnB,cAAc,IAAIC,MAAM,WAI1C,YAAAwQ,UAAA,sBACQhF,KAAKuE,SACLvE,KAAKuE,QAAS,EAGdjQ,WAAW,WACF,EAAKiQ,SACN,EAAK7O,KAAK7C,UAAUsL,OAAOmL,EAASzE,MACpC,EAAKP,uBACL,EAAK5O,KAAKnB,cAAc,IAAIC,MAAM,eAOlD,YAAAyP,kBAAA,WACI,IAAMgK,EAAyBjO,KAAKS,OAAOW,UAAYpB,KAAKkE,cAAc7L,OAE1E2H,KAAK+I,KAAKC,YAAYrG,aAAesL,EAAyBjO,KAAKS,OAAOiC,oBAAsB1C,KAAKS,OAAOkC,cAAgB,GAC5H3C,KAAK+I,KAAK0D,kBAAkBH,UAAYtM,KAAKS,OAAOkC,aAAe,IAIvE,YAAAuL,eAAA,SAAeC,QAAA,IAAAA,MAAA,IACXnO,KAAK+I,KAAKC,YAAYrG,YAAcjK,OAAOyV,IAG/C,YAAAC,aAAA,SAAaD,QAAA,IAAAA,MAAA,IACTnO,KAAK+I,KAAK6D,gBAAgBN,UAAY5T,OAAOyV,IAGjD,YAAAxJ,gBAAA,WACI3E,KAAKoO,aAAapO,KAAKS,OAAO4J,WAAWrK,KAAKkE,cAAc7L,OAAS2H,KAAKS,OAAO+J,wBAGrF,YAAAhH,iBAAA,SAAiBuF,QAAA,IAAAA,MAAA,IACb/I,KAAK+I,KAAKkE,cAAcX,UAAY5T,OAAOqQ,IAG/C,YAAAsF,SAAA,SAASpD,GACLjL,KAAK+I,KAAKkE,cAAcpa,UAAUoY,EAAU,SAAW,OAAO3B,EAASQ,MACvE9J,KAAKiL,QAAUA,GAGnB,YAAAlI,SAAA,SAASoL,EAAWG,QAAX,IAAAH,MAAA,IACL,IAAM5a,EAAeyM,KAAKsG,kBAAkB/S,aAE5CA,EAAa/B,MAAQkH,OAAOyV,GAExBG,GAAaH,IAASnO,KAAKuH,YAC3BhU,EAAagb,kBAAkB,EAAGJ,EAAK9V,SAI/C,YAAA2N,SAAA,WAEI,OAAOhG,KAAKsG,kBAAkB/S,aAAa/B,OAG/C,YAAAoV,sBAAA,SAAsBpU,GAClB,OAAOA,EAAQK,UAAU+a,SAAStE,EAASK,WAG/C,YAAA6E,uBAAA,SAAuBhc,GACnB,IAAKA,EAAQK,UAAU+a,SAAStE,EAASK,UACrC,OAAOnX,EAAQK,UAAUua,IAAI9D,EAASK,YAAa,GAI3D,YAAA5C,yBAAA,SAAyBvU,GACrB,GAAIA,EAAQK,UAAU+a,SAAStE,EAASK,UACpC,OAAOnX,EAAQK,UAAUsL,OAAOmL,EAASK,YAAa,GAI9D,YAAA7U,MAAA,WACSkL,KAAKvM,WAAcuM,KAAKqI,YAGzBrI,KAAKsG,kBAAkB/S,aAAauB,SAI5C,YAAAgU,KAAA,WACQ9I,KAAKvM,YAAcuM,KAAKqI,YAExBrI,KAAKsG,kBAAkB/S,aAAauV,QAK5C,YAAAnF,YAAA,SAAY8K,GACRzO,KAAKtK,KAAK7C,UAAU4b,EAAa,MAAQ,UAAUnF,EAASlI,WAIhE,YAAA0F,6BAAA,SAA6B5R,GACzB,IAAMuH,EAAmBuD,KAAKS,OAAOhE,iBAErC,OAAOM,MAAMC,KAAKgD,KAAK+I,KAAKI,gBAAgBlM,UAAU0C,KAAK,SAACnN,GACxD,OAAOA,EAAQ8K,MAAQb,EAAiBjK,EAAQ8K,QAAUb,EAAiBvH,MAInF,YAAAgT,qBAAA,SAAqBhT,GAIjB,IAHA,IAAMuH,EAAmBuD,KAAKS,OAAOhE,iBAC/BiS,EAAgB1O,KAAK+I,KAAK2C,kBAAkBzO,SAEzC9M,EAAI,EAAGA,EAAIue,EAAcrW,OAAQlI,IACtC,GAAI6P,KAAK2O,cAAcD,EAAcve,IAGjC,IAFA,IAAMye,EAAeF,EAAcve,GAAG8M,SAE7B1D,EAAI,EAAGA,EAAIqV,EAAavW,OAAQkB,IACrC,GAAIqV,EAAarV,GAAG+D,MAAQb,EAAiBmS,EAAarV,GAAG+D,QAAUb,EAAiBvH,GACpF,OAAO0Z,EAAarV,IAQxC,YAAAsV,YAAA,SAAYrc,EAASsc,EAAa5Z,EAAMwF,EAAQqU,GAC5C,IAAMpT,EAAQmT,EAAY5Z,EAAMwF,GAoBhC,MAjBqB,iBAAViB,GAAuC,iBAAVA,GACpCoT,EAAoBA,EAAoBA,EAAkBC,UAAY,GACtExc,EAAQ8Z,UAAY5T,OAAOiD,GAASoT,GAE7BpT,IACPnJ,EAAQ8Z,UAAY,GACpB9Z,EAAQyc,YAAYtT,GAEhBoT,GACAvc,EAAQyc,YAAYF,EAAkBG,WAAU,KAQjD1c,GAGX,YAAA2c,4BAAA,SAA4BC,GACxB,IAAMC,EAAoBrP,KAAK+I,KAAK7M,YAAYgT,YAKhD,GAHAG,EAAkB/R,KAAO8R,EAGrBA,EAAW,CACX,IAAME,EAA0BtP,KAAK+I,KAAKmE,kBAAkBgC,YAG5DI,EAAwBhD,UAAYtM,KAAKS,OAAO0J,iBAAiBiF,GACjEC,EAAkBJ,YAAYK,GAGlC,OAAOD,GAGX,YAAAlJ,sBAAA,SAAsBjR,GAClB,IAAMiX,EAAgBnM,KAAK+I,KAAKoE,OAAO+B,YACjC7G,EAAarI,KAAKS,OAAO2B,oBAAoBlN,GAMnD,OAJA8K,KAAK6O,YAAY1C,EAAenM,KAAKS,OAAO6B,wBAAyBpN,GACrEiX,EAAc7O,KAAOpI,EACrB8K,KAAK2N,mBAAmBxB,EAAe9D,GAEhC8D,GAGX,YAAAoD,0BAAA,SAA0Bra,GACtB,IAAMkS,EAAkBpH,KAAK+I,KAAK2D,UAAUwC,YAClBlP,KAAKS,OAAOgC,wBAAwBvN,GAgB9D,OAdA8K,KAAK6O,YAAYzH,EAAiBpH,KAAKS,OAAOgC,wBAAyBvN,EAAM,KAAM8K,KAAK+I,KAAK4D,oBAC7FvF,EAAgB9J,KAAOpI,EAahBkS,GAIX,YAAAoI,2BAAA,WACI,GAAIxP,KAAKS,OAAO+J,uBAAyBC,IAOzC,IAFA,IAAM3N,EAAqBC,MAAMC,KAAKgD,KAAK+I,KAAKI,gBAAgBlM,UAAU2C,OAAO,SAAApN,GAAW,OAAAA,EAAQJ,eAAe,UAE1GjC,EAAI,EAAGA,EAAI2M,EAAYzE,OAAQlI,IAChCA,EAAI6P,KAAKS,OAAO+J,qBAChB1N,EAAY3M,GAAG0C,UAAUsL,OAAO,QAEhCrB,EAAY3M,GAAG0C,UAAUua,IAAI,SAMzC,YAAAjJ,uBAAA,SAAuB1J,QAAA,IAAAA,MAAA,IACnB,EAAAgV,eAAezP,KAAK+I,KAAKI,gBAAiB1O,EAAOuF,KAAKuP,0BAA0Bxd,KAAKiO,MAAOA,KAAKS,OAAOhE,kBAAkB,GAC1HuD,KAAKwP,8BAGT,YAAA9H,sBAAA,SAAsBxS,GAClB,IAAMwa,EAAc1P,KAAKuP,0BAA0Bra,GAEnDwa,EAAYpS,KAAOpI,EACnB8K,KAAK+I,KAAKI,gBAAgBwG,aAAaD,EAAa1P,KAAK+I,KAAK6D,iBAC9D5M,KAAKwP,8BAGT,YAAAvH,cAAA,SAAczV,GACVA,EAAQ2L,SACR6B,KAAKwP,8BAGT,YAAAhL,gBAAA,SAAgB/J,EAAYC,GAA5B,gBAAgB,IAAAD,MAAA,SAAY,IAAAC,MAAA,IACxB,IAAMwJ,EAAgBlE,KAAKkE,cAAcxK,QACnC+C,EAAmBuD,KAAKS,OAAOhE,iBAEjCuD,KAAKS,OAAOkG,eACZlM,EAAQ,EAAAmV,aAAanV,EAAOyJ,EAAezH,GAAkB,IAGjEuD,KAAKqO,UAAU5T,EAAMpC,QAErB,IAAMwX,EAAa,EAAAvM,QAAQ7I,EAAO,GAAIuF,KAAKS,OAAOwB,mBAC5C9I,EAAS,EAAA2W,yBAAyBD,EAAY7P,KAAKS,OAAOsB,kBAC1DgO,EAAa9e,OAAOkH,KAAKgB,GAAQyG,OAAO,SAAA9N,GAAO,OAAAqH,EAAOrH,GAAKuG,SAAQC,OACnE0X,EAAuB,EAAAP,eAAezP,KAAK+I,KAAK2C,kBAAmBqE,EAAY/P,KAAKmP,4BAA4Bpd,KAAKiO,OAsB3H,OApBAjD,MAAMC,KAAKgT,EAAqB/S,UAAUO,QAAQ,SAACyS,EAAmB9f,GAClE,QAA0BkK,IAAtB4V,EAAa3S,KAAoB,CACjC,IAAM,EAAQnE,EAAO8W,EAAa3S,MAC5B4S,EAA+B,EAAAT,eAAeQ,EAAc,EAAO,EAAK9J,sBAAsBpU,KAAK,GAAO0K,GAGhHM,MAAMC,KAAKkT,EAA6BjT,UAAU3B,IAAI,SAACoU,GAC/CA,EAAYpS,OACZ,EAAKuR,YAAYa,EAAa,EAAKjP,OAAO6B,wBAAyBoN,EAAYpS,KAAM5C,GAEhF,EAAK+F,OAAOkG,eACMzC,EAAciM,KAAK,SAAAjb,GAAQ,OAAAuH,EAAiBiT,EAAYpS,QAAUb,EAAiBvH,KAEzF,EAAKsZ,uBAAuBkB,GAAe,EAAK3I,yBAAyB2I,UAOnGG,GAGX,YAAAzL,iBAAA,WACI,IAAMgM,EAAqBpQ,KAAKS,OAAO2J,iBAAiB1Z,KAAKsP,MAE7DA,KAAK+I,KAAKiE,mBAAmBV,UAAY,GAErC8D,GACApQ,KAAK+I,KAAKiE,mBAAmBqD,OAAOD,IAK5C,YAAAnJ,yBAAA,SAAyBzU,GACjBwN,KAAKyH,wBACLzH,KAAKyH,sBAAsB5U,UAAUsL,OAAOmL,EAASE,QACrDxJ,KAAKyH,sBAAwB,MAG7BjV,IACAA,EAAQK,UAAUua,IAAI9D,EAASE,QAC/BxJ,KAAKyH,sBAAwBjV,IAKrC,YAAA8R,qBAAA,SAAqB9R,GAEbwN,KAAK6F,oBACL7F,KAAK6F,kBAAkBhT,UAAUsL,OAAOmL,EAASE,QACjDxJ,KAAK6F,kBAAoB,MAGzBrT,GAAWwN,KAAKuE,SAChB/R,EAAQK,UAAUua,IAAI9D,EAASE,QAC/BxJ,KAAK6F,kBAAoBrT,EACzB,EAAA8d,mBAAmBtQ,KAAK+I,KAAK2C,kBAAmBlZ,KAUxD,YAAAwb,0BAAA,WACI,IAAMuC,EAAmBvQ,KAAK0F,gBAAkB1F,KAAKwQ,qBAAuBxQ,KAAKiM,sBAEjFjM,KAAKsE,qBAAqBiM,IAG9B,YAAAxK,yBAAA,SAAyB0K,EAAsB5c,GAC3C,IACI,IAAMe,EAAgBoL,KAAK6F,kBAE3B,IAAKjR,EACD,OAAOoL,KAAKsE,sBAAsBtE,KAAK0F,iBAAmB+K,EAAaA,GAAczQ,KAAKwQ,qBAAuBxQ,KAAKiM,uBAG1H,IAAIyE,EAAc1Q,KAAK2Q,kBAAkB/b,EAAe6b,GAKxD,IAAKzQ,KAAK2O,cAAc+B,GAAc,CAClC,IAAME,EAAY5Q,KAAK2Q,kBAAkB/b,EAAcf,YAAcA,EAAY4c,GAE7EzQ,KAAK2O,cAAciC,GACnBF,EAAc1Q,KAAK6Q,8BAA8BD,EAAWH,GAErDzQ,KAAKS,OAAOmK,aACnB8F,EAAcD,EAAazQ,KAAKwQ,qBAAuBxQ,KAAKiM,uBAIhEjM,KAAK2O,cAAc+B,GACnB1Q,KAAKsE,qBAAqBoM,GAE1B1Q,KAAKsE,uBAEX,MAAO/L,GACLyH,KAAKgO,8BAKb,YAAApF,6BAAA,WACI5I,KAAK+F,0BAAyB,IAOlC,YAAA4K,kBAAA,SAAkBne,EAASie,GACvB,IAAMK,EAAmBL,EAAa,kBAAoB,cAE1D,GACIje,EAAUA,GAAWA,EAAQse,SAExBte,IAAYwN,KAAK2O,cAAcnc,IAExC,OAAOA,GAGX,YAAAyZ,oBAAA,WACI,IAAM8E,EAAa/Q,KAAK6Q,8BAA8B7Q,KAAK+I,KAAK2C,mBAEhE,OAAO1L,KAAK6Q,8BAA8BE,IAG9C,YAAAP,mBAAA,WACI,IAAMQ,EAAYhR,KAAKkJ,6BAA6BlJ,KAAK+I,KAAK2C,mBAE9D,OAAO1L,KAAKkJ,6BAA6B8H,IAG7C,YAAAH,8BAAA,SAA8Bpe,EAAkB6G,GAC5C,GAAK7G,EAIL,IAFA,IAAMwe,EAAQxe,EAAiBwK,SAAS5E,OAE/B6Y,EAAI,EAAG1gB,EAAIygB,EAAQ,EAAGC,EAAID,EAAOC,IAAK1gB,IAAK,CAChD,IAAML,EAAImJ,EAAS9I,EAAI0gB,EACjBC,EAAe1e,EAAiBwK,SAAS9M,GAE/C,GAAI6P,KAAK2O,cAAcwC,GACnB,OAAOA,IAKnB,YAAAjI,6BAAA,SAA6BzW,GACzB,OAAOuN,KAAK6Q,8BAA8Bpe,GAAkB,IAGhE,YAAAkc,cAAA,SAAcnc,GAEV,OAAOA,GAAgC,IAArBA,EAAQO,eAAmCsH,IAAjB7H,EAAQ8K,OAAuB0C,KAAKwI,kBAAkBhW,IA8E1G,EA7vBA,GAAsB,EAAA6W,a,6BC3CtB,OAAe,ozC,6BCkBf,SAAS+H,IAMLpR,KAAKqR,aAAe,E,iDA2BxBD,EAAiBjf,UAAUmf,UAAY,SAASC,EAAOC,EAAOC,QAE9B,IAAjBA,IAEHA,EADAzR,KAAKqR,cAAgB,EACNK,OAAOC,WAEP,IAAK5Z,MAAMC,UAAgC,IAApBgI,KAAKqR,cAGnD,IAAMO,EAAWH,EAGjB,GAAc,OAAVF,GAA4B,OAAVC,EAClB,MAAM,IAAInU,MAAM,2BAIpB,GAAIkU,IAAUC,EACV,OAAID,EAAMlZ,OACC,CAAC,CAhCD,EAgCckZ,IAElB,GAIX,IAAIM,EAAe7R,KAAK8R,kBAAkBP,EAAOC,GAE3CO,EAAeR,EAAM7X,MAAM,EAAGmY,GACpCN,EAAQA,EAAM7X,MAAMmY,GACpBL,EAAQA,EAAM9X,MAAMmY,GAGpBA,EAAe7R,KAAKgS,kBAAkBT,EAAOC,GAC7C,IAAMS,EAAeV,EAAM7X,MAAM6X,EAAMlZ,OAASwZ,GAChDN,EAAQA,EAAM7X,MAAM,EAAG6X,EAAMlZ,OAASwZ,GACtCL,EAAQA,EAAM9X,MAAM,EAAG8X,EAAMnZ,OAASwZ,GAGtC,IAAMK,EAAQlS,KAAKmS,cAAcZ,EAAOC,EAAOI,GAU/C,OAPIG,EAAa1Z,QACb6Z,EAAM7R,QAAQ,CAvDH,EAuDgB0R,IAE3BE,EAAa5Z,QACb6Z,EAAMtY,KAAK,CA1DA,EA0DaqY,IAE5BjS,KAAKoS,kBAAkBF,GAChBA,GAaXd,EAAiBjf,UAAUggB,cAAgB,SAASZ,EAAOC,EAAOI,GAC9D,IAAIM,EAEJ,IAAKX,EAAMlZ,OAEP,MAAO,CAAC,CAhFI,EAgFUmZ,IAG1B,IAAKA,EAAMnZ,OAEP,MAAO,CAAC,EAtFI,EAsFUkZ,IAG1B,IAAMc,EAAWd,EAAMlZ,OAASmZ,EAAMnZ,OAASkZ,EAAQC,EACjDc,EAAYf,EAAMlZ,OAASmZ,EAAMnZ,OAASmZ,EAAQD,EACpDphB,EAAI6P,KAAKuS,SAASF,EAAUC,GAChC,IAAW,IAAPniB,EAeA,OAZA+hB,EAAQ,CAAC,CA9FG,EA8FWG,EAAS3Y,MAAM,EAAGvJ,IAAK,CA7FnC,EA6FgDmiB,GAAY,CA9F3D,EA8FyED,EAAS3Y,MAAMvJ,EAAImiB,EAAUja,UAG9GkZ,EAAMlZ,OAASmZ,EAAMnZ,SACrB6Z,EAAM,GAAG,GAAKA,EAAM,GAAG,IAnGf,GAuGPA,EAAM,GAAG,GAAG7Z,QACb6Z,EAAMM,QAGHN,EAGX,GAAyB,IAArBI,EAAUja,OAGV,MAAO,CAAC,EAjHI,EAiHUkZ,GAAQ,CAhHlB,EAgHgCC,IAIhD,IAAMiB,EAAKzS,KAAK0S,gBAAgBnB,EAAOC,GACvC,GAAIiB,EAAI,CAEJ,IAAME,EAAUF,EAAG,GACbG,EAAUH,EAAG,GACbI,EAAUJ,EAAG,GACbK,EAAUL,EAAG,GACbM,EAAaN,EAAG,GAEhBO,EAAUhT,KAAKsR,UAAUqB,EAASE,EAASjB,GAC3CqB,EAAUjT,KAAKsR,UAAUsB,EAASE,EAASlB,GAEjD,OAAOoB,EAAQpX,OAAO,CAAC,CA/HZ,EA+HyBmX,IAAcE,GAGtD,OAAOjT,KAAKkT,aAAa3B,EAAOC,EAAOI,IAa3CR,EAAiBjf,UAAU+gB,aAAe,SAAS3B,EAAOC,EAAOI,GAW7D,IATA,IAAMuB,EAAe5B,EAAMlZ,OACrB+a,EAAe5B,EAAMnZ,OACrBgb,EAAQC,KAAKC,MAAMJ,EAAeC,GAAgB,GAClDI,EAAWH,EACXI,EAAW,EAAIJ,EACfK,EAAK,IAAI3W,MAAM0W,GACfE,EAAK,IAAI5W,MAAM0W,GAGZG,EAAI,EAAGA,EAAIH,EAAUG,IAC1BF,EAAGE,IAAM,EACTD,EAAGC,IAAM,EAEbF,EAAGF,EAAW,GAAK,EACnBG,EAAGH,EAAW,GAAK,EAWnB,IAVA,IAAMK,EAAQV,EAAeC,EAGvBU,EAASD,EAAQ,GAAM,EAGzBE,EAAU,EACVC,EAAQ,EACRC,EAAU,EACVC,EAAQ,EACHrjB,EAAI,EAAGA,EAAIwiB,MAEZ,IAAKtb,MAAQC,UAAY4Z,GAFN/gB,IAAK,CAO5B,IAAK,IAAIsjB,GAAMtjB,EAAIkjB,EAASI,GAAMtjB,EAAImjB,EAAOG,GAAM,EAAG,CASlD,IARA,IAAMC,EAAYZ,EAAWW,EACzBE,OAAE,EAMFC,GAJAD,EADAF,KAAQtjB,GAAMsjB,IAAOtjB,GAAK6iB,EAAGU,EAAY,GAAKV,EAAGU,EAAY,GACxDV,EAAGU,EAAY,GAEfV,EAAGU,EAAY,GAAK,GAEfD,EACPE,EAAKlB,GAAgBmB,EAAKlB,GAAgB7B,EAAM8C,KAAQ7C,EAAM8C,IACjED,IACAC,IAGJ,GADAZ,EAAGU,GAAaC,EACZA,EAAKlB,EAELa,GAAS,OACN,GAAIM,EAAKlB,EAEZW,GAAW,OACR,GAAID,EAAO,CAEd,IADIS,EAAYf,EAAWK,EAAQM,IAClB,GAAKI,EAAYd,IAA+B,IAAnBE,EAAGY,GAG7C,GAAIF,IADAG,EAAKrB,EAAeQ,EAAGY,IAGvB,OAAOvU,KAAKyU,kBAAkBlD,EAAOC,EAAO6C,EAAIC,EAAI1C,IAOpE,IAAK,IAAI8C,GAAM7jB,EAAIojB,EAASS,GAAM7jB,EAAIqjB,EAAOQ,GAAM,EAAG,CASlD,IARA,IAAMH,EAAYf,EAAWkB,EACzBF,OAAE,EAMFG,GAJAH,EADAE,KAAQ7jB,GAAM6jB,IAAO7jB,GAAK8iB,EAAGY,EAAY,GAAKZ,EAAGY,EAAY,GACxDZ,EAAGY,EAAY,GAEfZ,EAAGY,EAAY,GAAK,GAEfG,EACPF,EAAKrB,GAAgBwB,EAAKvB,GACjC7B,EAAM4B,EAAeqB,EAAK,KAAOhD,EAAM4B,EAAeuB,EAAK,IACvDH,IACAG,IAGJ,GADAhB,EAAGY,GAAaC,EACZA,EAAKrB,EAELe,GAAS,OACN,GAAIS,EAAKvB,EAEZa,GAAW,OACR,IAAKH,EAAO,CAEf,IADMM,EAAYZ,EAAWK,EAAQa,IACpB,GAAKN,EAAYX,IAA+B,IAAnBC,EAAGU,GAAmB,CAE5DE,EAAKd,GADLa,EAAKX,EAAGU,IACaA,EAGzB,GAAIC,IADJG,EAAKrB,EAAeqB,GAGhB,OAAOxU,KAAKyU,kBAAkBlD,EAAOC,EAAO6C,EAAIC,EAAI1C,MAQxE,MAAO,CAAC,EA3PQ,EA2PML,GAAQ,CA1Pd,EA0P4BC,KAehDJ,EAAiBjf,UAAUsiB,kBAAoB,SAASlD,EAAOC,EAAOoC,EAAGze,EAAGyc,GACxE,IAAMgD,EAASrD,EAAM7X,MAAM,EAAGka,GACxBiB,EAASrD,EAAM9X,MAAM,EAAGvE,GACxB2f,EAASvD,EAAM7X,MAAMka,GACrBmB,EAASvD,EAAM9X,MAAMvE,GAGrB+c,EAAQlS,KAAKsR,UAAUsD,EAAQC,EAAQjD,GACvCoD,EAAShV,KAAKsR,UAAUwD,EAAQC,EAAQnD,GAC9C,OAAOM,EAAMtW,OAAOoZ,IAUxB5D,EAAiBjf,UAAU2f,kBAAoB,SAASP,EAAOC,GAE3D,IAAKD,EAAMlZ,SAAWmZ,EAAMnZ,QAAUkZ,EAAM,KAAOC,EAAM,GACrD,OAAO,EAQX,IAJA,IAAIyD,EAAa,EACbC,EAAa5B,KAAK6B,IAAI5D,EAAMlZ,OAAQmZ,EAAMnZ,QAC1C+c,EAAaF,EACbG,EAAe,EACZJ,EAAaG,GACZ7D,EAAM7X,MAAM2b,EAAcD,KAAgB5D,EAAM9X,MAAM2b,EAAcD,GAEpEC,EADAJ,EAAaG,EAGbF,EAAaE,EAEjBA,EAAa9B,KAAKgC,OAAOJ,EAAaD,GAAc,EAAIA,GAE5D,OAAOG,GASXhE,EAAiBjf,UAAU6f,kBAAoB,SAAST,EAAOC,GAE3D,IAAKD,EAAMlZ,SAAWmZ,EAAMnZ,QACxBkZ,EAAMA,EAAMlZ,OAAS,KAAOmZ,EAAMA,EAAMnZ,OAAS,GACjD,OAAO,EAQX,IAJA,IAAI4c,EAAa,EACbC,EAAa5B,KAAK6B,IAAI5D,EAAMlZ,OAAQmZ,EAAMnZ,QAC1C+c,EAAaF,EACbK,EAAa,EACVN,EAAaG,GACZpV,KAAKwV,eAAejE,EAAM7X,MAAM6X,EAAMlZ,OAAS+c,EAAY7D,EAAMlZ,OAASkd,GAAa/D,EAAM9X,MAAM8X,EAAMnZ,OAAS+c,EAAY5D,EAAMnZ,OAASkd,IAE7IA,EADAN,EAAaG,EAGbF,EAAaE,EAEjBA,EAAa9B,KAAKgC,OAAOJ,EAAaD,GAAc,EAAIA,GAE5D,OAAOG,GAcXhE,EAAiBjf,UAAUugB,gBAAkB,SAASnB,EAAOC,GACzD,GAAIxR,KAAKqR,cAAgB,EAErB,OAAO,KAEX,IAAIgB,EAAWd,EAAMlZ,OAASmZ,EAAMnZ,OAASkZ,EAAQC,EACjDc,EAAYf,EAAMlZ,OAASmZ,EAAMnZ,OAASmZ,EAAQD,EACtD,GAAIc,EAASha,OAAS,GAAwB,EAAnBia,EAAUja,OAAaga,EAASha,OACvD,OAAO,KAEX,IAAIod,EAAMzV,KAcV,SAAS0V,EAAiBrD,EAAUC,EAAWniB,GAO3C,IALA,IAGIwlB,EAAiBC,EAAiBC,EAAkBC,EAHlDC,EAAO1D,EAAS3Y,MAAMvJ,EAAGA,EAAImjB,KAAKgC,MAAMjD,EAASha,OAAS,IAC5DkB,GAAK,EACLyc,EAAc,IAGqC,KAA/Czc,EAAIkc,EAAIlD,SAASD,EAAWyD,EAAMxc,EAAI,KAAY,CACtD,IAAM0c,EAAeR,EAAI3D,kBAAkBO,EAAS3Y,MAAMvJ,GAAImiB,EAAU5Y,MAAMH,IACxE2c,EAAeT,EAAIzD,kBAAkBK,EAAS3Y,MAAM,EAAGvJ,GAAImiB,EAAU5Y,MAAM,EAAGH,IAChFyc,EAAY3d,OAAS6d,EAAeD,KACpCD,EAAc1D,EAAU5Y,MAAMH,EAAI2c,EAAc3c,IACpCK,KAAK2E,MAAMyX,EAAa1D,EAAU5Y,MAAMH,EAAGA,EAAI0c,IAC3DN,EAAkBtD,EAAS3Y,MAAM,EAAGvJ,EAAI+lB,GACxCN,EAAkBvD,EAAS3Y,MAAMvJ,EAAI8lB,GACrCJ,EAAmBvD,EAAU5Y,MAAM,EAAGH,EAAI2c,GAC1CJ,EAAmBxD,EAAU5Y,MAAMH,EAAI0c,IAG/C,OAAyB,EAArBD,EAAY3d,QAAcga,EAASha,OAE5B,CAACsd,EAAiBC,EAAiBC,EAAkBC,EAAkBE,GAEvE,KAKf,IAGIvD,EAaAE,EAASC,EAASC,EAASC,EAhBzBqD,EAAMT,EAAiBrD,EAAUC,EAAWgB,KAAKC,KAAKlB,EAASha,OAAS,IAExE+d,EAAMV,EAAiBrD,EAAUC,EAAWgB,KAAKC,KAAKlB,EAASha,OAAS,IAE9E,OAAK8d,GAAQC,GAQT3D,EANQ2D,EAEAD,GAIHA,EAAI,GAAG9d,OAAS+d,EAAI,GAAG/d,OAAS8d,EAHhCC,EAFAD,EAUL5E,EAAMlZ,OAASmZ,EAAMnZ,QACrBsa,EAAUF,EAAG,GACbG,EAAUH,EAAG,GACbI,EAAUJ,EAAG,GACbK,EAAUL,EAAG,KAEbI,EAAUJ,EAAG,GACbK,EAAUL,EAAG,GACbE,EAAUF,EAAG,GACbG,EAAUH,EAAG,IAGV,CAACE,EAASC,EAASC,EAASC,EADhBL,EAAG,KAvBX,MAgCfrB,EAAiBjf,UAAUigB,kBAAoB,SAASF,GACpDA,EAAMtY,KAAK,CArbI,EAqbS,KAOxB,IANA,IAKIiY,EALAwE,EAAU,EACVC,EAAe,EACfC,EAAe,EACfC,EAAc,GACdC,EAAc,GAEXJ,EAAUnE,EAAM7Z,QACnB,OAAQ6Z,EAAMmE,GAAS,IACnB,KA/bQ,EAgcJE,IACAE,EAAY7c,KAAK2E,MAAMkY,EAAavE,EAAMmE,GAAS,IACnDA,IACA,MACJ,KArcQ,EAscJC,IACAE,EAAY5c,KAAK2E,MAAMiY,EAAatE,EAAMmE,GAAS,IACnDA,IACA,MACJ,KAxcO,EA0cH,GAAIC,EAAeC,EAAe,EAAG,CACjC,GAAqB,IAAjBD,GAAuC,IAAjBC,EAAoB,CAG1C,GAAqB,KADrB1E,EAAe7R,KAAK8R,kBAAkB2E,EAAaD,IAC3B,CACpB,IAAME,EAAWxE,EAAMmE,EAAUC,EAAeC,EAAe,GAE1DF,EAAUC,EAAeC,EAAgB,GAjdvD,IAid4DG,EAAS,GACxDA,EAAS,GAAG9c,KAAK2E,MAAMmY,EAAS,GAAID,EAAY/c,MAAM,EAAGmY,KAEzDK,EAAMvY,OAAO,EAAG,EAAG,CApdhC,EAod6C8c,EAAY/c,MAAM,EAAGmY,KACrDwE,KAEJI,EAAcA,EAAY/c,MAAMmY,GAChC2E,EAAcA,EAAY9c,MAAMmY,GAIpC,GAAqB,KADrBA,EAAe7R,KAAKgS,kBAAkByE,EAAaD,KAEzCE,EAAWxE,EAAMmE,GAAS,IACvBhW,QAAQ9B,MAAMmY,EAAUD,EAAY/c,MAAM+c,EAAYpe,OAASwZ,IACxE4E,EAAcA,EAAY/c,MAAM,EAAG+c,EAAYpe,OAASwZ,GACxD2E,EAAcA,EAAY9c,MAAM,EAAG8c,EAAYne,OAASwZ,GAI3C,IAAjByE,EACApE,EAAMvY,OAAO0c,EAAUE,EAAcD,EAAeC,EAAc,CAtetE,EAseoFE,IACxD,IAAjBF,EACPrE,EAAMvY,OAAO0c,EAAUC,EAAcA,EAAeC,EAAc,EAzetE,EAyeoFC,IAEhFtE,EAAMvY,OAAO0c,EAAUC,EAAeC,EAAcD,EAAeC,EAAc,EA3erF,EA2emGC,GAAc,CA1ejH,EA0e+HC,IAE/HJ,EAAUA,EAAUC,EAAeC,GAC9BD,EAAe,EAAI,IAAMC,EAAe,EAAI,GAAK,OACnD,GAAgB,IAAZF,GA7eR,IA6eyBnE,EAAMmE,EAAU,GAAG,GAAmB,CAE9D,IAAMM,EAAiBzE,EAAMmE,EAAU,GAAG,GACpCO,EAAa1E,EAAMmE,GAAS,GAElCM,EAAe/c,KAAK2E,MAAMoY,EAAgBC,EAAWjd,OAAO,EAAGid,EAAWve,SAC1E6Z,EAAMvY,OAAO0c,EAAS,QAEtBA,IAEJE,EAAe,EACfD,EAAe,EACfE,EAAc,GACdC,EAAc,GAIrBvE,EAAMA,EAAM7Z,OAAS,GAAG,GAAGA,QAC5B6Z,EAAM2E,MAMV,IAAIC,GAAU,EAGd,IAFAT,EAAU,EAEHA,EAAUnE,EAAM7Z,OAAS,GAAG,CAC/B,GAzgBW,IAygBP6Z,EAAMmE,EAAU,GAAG,IAzgBZ,IAygBiCnE,EAAMmE,EAAU,GAAG,GAE3D,GAAInE,EAAMmE,GAAS,GAAG3c,MAAMwY,EAAMmE,GAAS,GAAGhe,OAAS6Z,EAAMmE,EAAU,GAAG,GAAGhe,UAAY6Z,EAAMmE,EAAU,GAAG,GAExGnE,EAAMmE,GAAS,GAAKnE,EAAMmE,EAAU,GAAG,GACnCnE,EAAMmE,GAAS,GAAG3c,MAAM,EAAGwY,EAAMmE,GAAS,GAAGhe,OAAS6Z,EAAMmE,EAAU,GAAG,GAAGhe,QAChF6Z,EAAMmE,EAAU,GAAG,GAAKnE,EAAMmE,EAAU,GAAG,GAAKnE,EAAMmE,EAAU,GAAG,GACnEnE,EAAMvY,OAAO0c,EAAU,EAAG,GAC1BS,GAAU,OACP,GAAI5E,EAAMmE,GAAS,GAAG3c,MAAM,EAAGwY,EAAMmE,EAAU,GAAG,GAAGhe,UAAY6Z,EAAMmE,EAAU,GAAG,GAAI,EAErFM,EAAiBzE,EAAMmE,EAAU,GAAG,IAC3Bzc,KAAK2E,MAAMoY,EAAgBzE,EAAMmE,EAAU,GAAG,IAC7DnE,EAAMmE,GAAS,GACXnE,EAAMmE,GAAS,GAAG3c,MAAMwY,EAAMmE,EAAU,GAAG,GAAGhe,QAC9C6Z,EAAMmE,EAAU,GAAG,GACvBnE,EAAMvY,OAAO0c,EAAU,EAAG,GAC1BS,GAAU,EAGlBT,IAGAS,GACA9W,KAAKoS,kBAAkBF,IAW/Bd,EAAiBjf,UAAUogB,SAAW,SAASwE,EAAKC,EAAQC,GACxD,IAAI9mB,EAAI8mB,IAAe,EACnBC,EAAKF,EAAO3e,OACZ7H,EAAIumB,EAAI1e,OAAS,EAAI6e,EAEzBC,EAAM,KAAOhnB,EAAEK,EAAGL,IAAK,CACnB,IAAK,IAAIoJ,EAAE,EAAGA,EAAE2d,EAAI3d,IAChB,GAAIwd,EAAI5mB,EAAEoJ,KAAOyd,EAAOzd,GACpB,SAAS4d,EACjB,OAAOhnB,EAEX,OAAQ,GASZihB,EAAiBjf,UAAUqjB,eAAiB,SAAS4B,EAAMC,GACvD,IAAIlnB,EAAIinB,EAAK/e,OAEb,GAAIlI,IAAMknB,EAAKhf,OAAQ,OAAO,EAE9B,KAAOlI,KACH,GAAIinB,EAAKjnB,KAAOknB,EAAKlnB,GAAI,OAAO,EAEpC,OAAO,GAGXihB,EAAiBjf,UAAUmlB,8BAAgC,SAASpF,GAGhE,IAFA,IAAMqF,EAAS,GAENpnB,EAAI,EAAGqnB,EAAS,EAAGrnB,EAAI+hB,EAAM7Z,OAAQlI,IAAK,CAC/C,IAAM0N,EAAOqU,EAAM/hB,GACbsnB,EAAQ,CAACD,GAEf,OAAQ3Z,EAAK,IACT,KAplBQ,EAqlBJ,IAAMtB,EAAWsB,EAAK,GACtB4Z,EAAM7d,KAAK,GACX6d,EAAM7d,KAAK2E,MAAMkZ,EAAOlb,GACxBib,GAAUjb,EAASlE,OACnBkf,EAAO3d,KAAK6d,GACZ,MAEJ,KA7lBQ,EA8lBJA,EAAM7d,KAAKiE,EAAK,GAAGxF,QAEnB,IAAMqf,EAAWxF,EAAM/hB,EAAI,GAC3B,GAAIunB,GAhmBA,IAgmBYA,EAAS,GAAoB,CACzC,IAAM,EAAWA,EAAS,GAC1BD,EAAM7d,KAAK2E,MAAMkZ,EAAO,GACxBtnB,IACAqnB,GAAU,EAASnf,OAEvBkf,EAAO3d,KAAK6d,GACZ,MAEJ,KAxmBO,EAymBHD,GAAU3Z,EAAK,GAAGxF,QAK9B,OAAOkf,GAqBXnG,EAAiBjf,UAAU0L,KAAO,SAAS8Z,EAAQC,EAAQhG,GACvD,OAAO5R,KAAKsX,8BAA8BtX,KAAKsR,UAAUqG,EAAQC,EAAQhG,KAGhE,EAAAhU,KAAO,IAAIwT","file":"select.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","import { myer } from './myer-array-diff';\n\n/**\n * Merge object by another one. Use default value if new value is undefined or null\n * @param obj\n * @param newObj\n * @param defaults\n * @returns {any}\n */\nexport function mergeWithDefaults(obj, newObj = {}, defaults = {}) {\n    for (let k in newObj) {\n        const newValue = newObj[k];\n\n        if (newObj.hasOwnProperty(k)) {\n            obj[k] = newValue != null ? newValue :  defaults[k]; //(obj[k] != null ? obj[k] : defaults[k]);\n        }\n    }\n    return obj;\n}\n\n/**\n * Return DOM element which is/into container and contains defined class\n *\n * @param {HTMLElement} element\n * @param {HTMLElement} containerElement\n * @param {string} className\n * @returns {HTMLElement}\n */\nexport function getElementContainer(element: HTMLElement, containerElement: HTMLElement = document.body, className?:string) {\n    while (element && element.classList && element.ownerDocument && element.nodeType !== 11 ) { // 11 - DOCUMENT_FRAGMENT_NODE\n        if ((className && element.className.indexOf(className) >= 0) || (!className && element === containerElement)) { // current.classList.contains(className) doesn't work in IE9\n            return element;\n        }\n\n        element = element.parentElement;\n    }\n}\n\n/**\n * Simulate focus/blur events of the inner input element to the outer element\n *\n * @param {HTMLElement} element\n * @param {HTMLElement} inputElement\n * @param {HTMLElement} isolatedClass for area which is independent on click event\n * @returns {function} unbind function for listeners.\n */\nexport function bindFocusBlur(element: HTMLElement, inputElement: HTMLElement, isolatedClass = 'isolated') {\n    let isFocused, isMousedown, isBlur, shadowHost, parentNode: any = element.parentNode;\n\n    document.addEventListener('click', clickHandler, true);\n    element.addEventListener('mousedown', mousedownHandler, true);\n    element.addEventListener('blur', blurHandler, true);\n    inputElement.addEventListener('focus', focusHandler, true);\n\n    // Check if element is in shadow DOM\n    while (parentNode) {\n        if (parentNode.host) {\n            shadowHost = parentNode.host;\n            break;\n        }\n        parentNode = parentNode.parentNode;\n    }\n\n    function blurHandler(event?) {\n        // console.log('+++ blurHandler', isMousedown);\n        // if (event && event.target.nodeName !== 'INPUT') return; //for IE\n        if (event && event.target !== inputElement) return; //for IE\n\n        isBlur = false;\n        isFocused = false;\n\n        if (isMousedown) {\n            isBlur = true;\n            return;\n        }\n\n        setTimeout(function () {\n            element.dispatchEvent(new Event('blur'));\n            // element.dispatchEvent(new Event('blur', {bubbles: true, composed: true}));\n        });\n    }\n\n    function focusHandler() {\n        // console.log('+++ focusHandler', isFocused);\n        if (!isFocused) {\n            isFocused = true;\n\n            setTimeout(function () {\n                element.dispatchEvent(new Event('focus'));\n            });\n        }\n    }\n\n    function mousedownHandler() {\n        // console.log('+++ mousedownHandler');\n        isMousedown = true;\n    }\n\n    function clickHandler(event) {\n        console.log('+++ clickHandler', !!getElementContainer(event.target, element), event.target, event.target !== inputElement, event.target.nodeName);\n        isMousedown = false;\n\n        const activeElement = shadowHost && event.target === shadowHost ? element : event.target;\n\n        const isIsolatedElement = !!getElementContainer(activeElement, element, isolatedClass); //TODO Make custom isolated class\n\n        if (isIsolatedElement) {\n            return\n        }\n\n        const isSelectElement = !!getElementContainer(activeElement, element);\n\n        if (isBlur && !isSelectElement) {\n            blurHandler();\n        }\n\n        // if (isSelectElement && activeElement.nodeName !== 'INPUT') {\n        if (isSelectElement && activeElement !== inputElement) {\n            setTimeout(function () {\n                inputElement.focus();\n            });\n        }\n\n        if (!isSelectElement && isFocused) {\n            isFocused = false;\n        }\n    }\n\n    return {\n        element: element,\n        inputElement: inputElement,\n        unbind: () => {\n            document.removeEventListener('click', clickHandler, true);\n            element.removeEventListener('mousedown', mousedownHandler, true);\n            element.removeEventListener('blur', blurHandler, true);\n            inputElement.removeEventListener('focus', focusHandler);\n        }\n    }\n\n    // return {\n    //     unbindAll: () => {\n    //         document.removeEventListener('click', clickHandler, true);\n    //         element.removeEventListener('mousedown', mousedownHandler, true);\n    //         element.removeEventListener('blur', blurHandler, true);\n    //         inputElement.removeEventListener('focus', focusHandler);\n    //     },\n    //     bindInput: (newInputElement) => {\n    //         inputElement.removeEventListener('focus', focusHandler);\n    //         inputElement = newInputElement;\n    //         inputElement.addEventListener('focus', focusHandler, true);\n    //     }\n    // }\n\n    // return function () {\n    //     document.removeEventListener('click', clickHandler, true);\n    //     element.removeEventListener('mousedown', mousedownHandler, true);\n    //     element.removeEventListener('blur', blurHandler, true);\n    //     inputElement.removeEventListener('focus', focusHandler, true);\n    // }\n}\n\n/**\n * Sets the selected item in the dropdown menu\n * of available loadedListItems.\n *\n * @param {object} list\n * @param {object} item\n */\nexport function scrollActiveOption(list, item) {\n    let y, height_menu, height_item, scroll, scroll_top, scroll_bottom;\n\n    if (item) {\n        height_menu = list.offsetHeight;\n        height_item = getWidthOrHeight(item, 'height', 'margin'); //outerHeight(true);\n        scroll = list.scrollTop || 0;\n        y = getOffset(item).top - getOffset(list).top + scroll;\n        scroll_top = y;\n        scroll_bottom = y - height_menu + height_item;\n\n        //TODO Make animation\n        if (y + height_item > height_menu + scroll) {\n            list.scrollTop = scroll_bottom;\n        } else if (y < scroll) {\n            list.scrollTop = scroll_top;\n        }\n    }\n}\n\n// Used for matching numbers\nconst core_pnum = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source;\nconst rnumnonpx = new RegExp(\"^(\" + core_pnum + \")(?!px)[a-z%]+$\", \"i\");\n\nfunction augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\n    let i = extra === (isBorderBox ? 'border' : 'content') ?\n        // If we already have the right measurement, avoid augmentation\n        4 :\n        // Otherwise initialize for horizontal or vertical properties\n        name === 'width' ? 1 : 0,\n\n        val = 0,\n        cssExpand = ['Top', 'Right', 'Bottom', 'Left'];\n\n    //TODO Use angular.element.css instead of getStyleValue after https://github.com/caitp/angular.js/commit/92bbb5e225253ebddd38ef5735d66ffef76b6a14 will be applied\n    function getStyleValue(name) {\n        return parseFloat(styles[name]);\n    }\n\n    for (; i < 4; i += 2) {\n        // both box models exclude margin, so add it if we want it\n        if (extra === 'margin') {\n            val += getStyleValue(extra + cssExpand[i]);\n        }\n\n        if (isBorderBox) {\n            // border-box includes padding, so remove it if we want content\n            if (extra === 'content') {\n                val -= getStyleValue('padding' + cssExpand[i]);\n            }\n\n            // at this point, extra isn't border nor margin, so remove border\n            if (extra !== 'margin') {\n                val -= getStyleValue('border' + cssExpand[i] + 'Width');\n            }\n        } else {\n            val += getStyleValue('padding' + cssExpand[i]);\n\n            // at this point, extra isn't content nor padding, so add border\n            if (extra !== 'padding') {\n                val += getStyleValue('border' + cssExpand[i] + 'Width');\n            }\n        }\n    }\n\n    return val;\n}\n\nfunction getOffset(elem) {\n    let docElem, win,\n        box = elem.getBoundingClientRect(),\n        doc = elem && elem.ownerDocument;\n\n    if (!doc) {\n        return;\n    }\n\n    docElem = doc.documentElement;\n    win = getWindow(doc);\n\n    return {\n        top: box.top + win.pageYOffset - docElem.clientTop,\n        left: box.left + win.pageXOffset - docElem.clientLeft\n    };\n}\n\nfunction getWindow(elem) {\n    return elem != null && elem === elem.window ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\nfunction getWidthOrHeight(elem, name, extra) {\n    // Start with offset property, which is equivalent to the border-box selectedItems\n    let valueIsBorderBox = true,\n        val = name === 'width' ? elem.offsetWidth : elem.offsetHeight,\n        styles = window.getComputedStyle(elem, null),\n\n        //TODO Make isBorderBox after https://github.com/caitp/angular.js/commit/92bbb5e225253ebddd38ef5735d66ffef76b6a14 will be applied\n        isBorderBox = false; //jQuery.support.boxSizing && jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n    // some non-html elements return undefined for offsetWidth, so check for null/undefined\n    // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n    // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n    if (val <= 0 || val == null) {\n        // Fall back to computed then uncomputed css if necessary\n        val = styles[name];\n\n        if (val < 0 || val == null) {\n            val = elem.style[name];\n        }\n\n        // Computed unit is not pixels. Stop here and return.\n        if (rnumnonpx.test(val)) {\n            return val;\n        }\n\n        // we need the check for style in case a browser which returns unreliable values\n        // for getComputedStyle silently falls back to the reliable elem.style\n        //valueIsBorderBox = isBorderBox && ( jQuery.support.boxSizingReliable || val === elem.style[ name ] );\n\n        // Normalize \"\", auto, and prepare for extra\n        val = parseFloat(val) || 0;\n    }\n\n    // use the active box-sizing model to add/subtract irrelevant styles\n    return val + augmentWidthOrHeight(elem, name, extra || ( isBorderBox ? \"border\" : \"content\" ), valueIsBorderBox, styles);\n}\n\n/**\n * Calculate free space for menu and return true if need to change menu direction\n * @param toggleElement\n * @param menuElement\n * @param defaultMenuHeightPx\n * @returns {boolean}\n */\nexport function hasNoSpaceBelowForMenu(toggleElement, menuElement, defaultMenuHeightPx = 100) {\n    const spaceAbove = toggleElement.getBoundingClientRect().top;\n    const spaceBelow = window.innerHeight - toggleElement.getBoundingClientRect().bottom;\n    const maxMenuHeight = parseInt(window.getComputedStyle(menuElement)['max-height']) || defaultMenuHeightPx;\n\n    return spaceBelow < maxMenuHeight && spaceBelow < spaceAbove;\n}\n\nexport function groupsIsEmpty(groups) {\n    for (let k in groups) {\n        if (groups.hasOwnProperty(k) && groups[k].length) {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Find array intersections\n * Equal of lodash _.intersection + getter + invert\n *\n * @param {any[]} xArr\n * @param {any[]} yArr\n * @param {Function} getter\n * @param {boolean} invert\n * @returns {any[]}\n */\nexport function intersection(xArr: any[], yArr: any[], getter?: Function, invert?: boolean): any[] {\n    let i, j, n, filteredX, filteredY, out: any[] = invert ? xArr.slice() : [];\n\n    for (i = 0, n = xArr.length; i < xArr.length; i++) {\n        filteredX = getter ? getter(xArr[i]) : xArr[i];\n\n        for (j = 0; j < yArr.length; j++) {\n            filteredY = getter ? getter(yArr[j]) : yArr[j];\n\n            if (deepEqual(filteredX, filteredY)) {\n                invert ? out.splice(i + out.length - n, 1) : out.push(yArr[j]);\n                break;\n            }\n        }\n    }\n    return out;\n}\n\n/**\n * Deep comparing of two values\n *\n * @param actual\n * @param expected\n * @param {boolean} strict\n * @returns {any}\n */\nfunction deepEqual(actual, expected, strict = true) {\n    if (actual === expected) {\n        return true;\n\n    } else if (actual instanceof Date && expected instanceof Date) {\n        return actual.getTime() === expected.getTime();\n\n    } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n        return strict ? actual === expected : actual == expected;\n\n    } else {\n        return objEqual(actual, expected, strict);\n    }\n}\n\n/**\n * Deep comparison of two objects\n *\n * @param a\n * @param b\n * @param strict\n * @returns {boolean}\n */\nfunction objEqual(a, b, strict) {\n    let i, key;\n\n    if (a == null || b == null) {\n        return false;\n    }\n\n    if (a.prototype !== b.prototype) return false;\n\n    try {\n        let ka = Object.keys(a),\n            kb = Object.keys(b);\n\n        if (ka.length !== kb.length)\n            return false;\n\n        ka.sort();\n        kb.sort();\n\n        //cheap key test\n        for (i = ka.length - 1; i >= 0; i--) {\n            if (ka[i] != kb[i])\n                return false;\n        }\n\n        //possibly expensive deep test\n        for (i = ka.length - 1; i >= 0; i--) {\n            key = ka[i];\n            if (!deepEqual(a[key], b[key], strict)) return false;\n        }\n\n        return typeof a === typeof b;\n\n    } catch (e) {//happens when one is a string literal and the other isn't\n        return false;\n    }\n}\n\nfunction toString(value) {\n    return String(value !== void 0 ? value : '');\n}\n\n// todo: remove excess chars\nconst rEscapableCharacters = /[-\\/\\\\^$*+?.()|[\\]{}]/g;  // cache escape + match String\nconst sEscapeMatch = '\\\\$&';\n\n/**\n * Escape special chars\n * @param string\n * @returns {string}\n */\nfunction escapeCharacters(string: string) {\n    return string.replace(rEscapableCharacters, sEscapeMatch);\n}\n\n/**\n * Filter items by comparison label (=getLabel(item)) and query\n * asc sorting of result\n *\n * @param items\n * @param query\n * @param {Function} getLabel\n * @param {{fields?: any[]; sort?: (\"asc\" | \"desc\"); strict?: boolean}} options\n * @returns {any[]}\n */\nexport function ascSort(items: any, query: any, getLabel: Function, options: {fields?: any[], sort?: 'asc'|'desc', strict?: boolean} = {}) {\n    let i, j, isFound, item, output, output1 = [], output2 = [], output3 = [],\n        sort = options.sort,\n        strict = options.strict,\n        orderFactor = sort === 'desc' ? -1 : 1,\n        regExpParams = strict ? '' : 'i';\n\n    let getLabelArr: any[] = [getLabel];\n\n    if (options.fields) {\n        getLabelArr = options.fields.map(field => typeof field === 'function' ? field : item => deepFind(item, field, true))\n    }\n\n    getLabel = getLabelArr[0];\n\n    if (query !== '' && getLabel) {\n        const safeQuery = escapeCharacters(toString(query));\n        const matchRegExp = new RegExp(safeQuery, regExpParams);\n        const firstMatchRegExp = new RegExp('^' + safeQuery, regExpParams);\n\n        // Filtering\n        for (i = 0, isFound = false; i < items.length; i++) {\n            item = items[i];\n\n            for (j = 0; j < getLabelArr.length; j++) {\n                const label = getLabelArr[j](item);\n\n                isFound = label === query || !strict && label == query || query !== undefined && matchRegExp.test(toString(label));\n\n                if (isFound) break;\n            }\n\n            if (isFound) {\n                output1.push(item);\n            }\n        }\n\n        if (sort) {\n            output = output1;\n\n        } else {\n            // Place items starting with query on the top of list\n            for (i = 0; i < output1.length; i++) {\n                item = output1[i];\n\n                if (firstMatchRegExp.test(toString(getLabel(item)))) {\n                    output2.push(item);\n                } else {\n                    output3.push(item);\n                }\n            }\n            output = output2.concat(output3);\n        }\n\n    } else {\n        output = [].concat(items);\n    }\n\n    if (sort) {\n        output = output.sort((A, B) => toString(getLabel(A)).localeCompare(toString(getLabel(B))) * orderFactor);\n    }\n\n    return output;\n}\n\n/**\n * Transform flat loadedListItems array to groupped object\n *\n * Example:\n * const loadedListItems = [{t: 'A', g: 'x'}, {t: 'B', g: 'x'}, {t: 'C'}]\n * const getter = (option) => option.g\n *\n * groupOptions(loadedListItems, getter)\n * // Result: {'x': [{t: 'A', g: 'x'}, {t: 'B', g: 'x'}], '': [{t: 'C'}]}\n *\n * @param {Array} options\n * @param {(option) => string} groupNameGetter\n * @returns {{: Array}}\n */\nexport function distributeOptionsByGroup(options = [], groupNameGetter = (item) => '') {\n    let optionGroups = {'':[]},\n        optionGroupName,\n        optionGroup;\n\n    for (let i = 0; i < options.length; i++) {\n        optionGroupName = groupNameGetter(options[i]) || '';\n\n        if (!(optionGroup = optionGroups[optionGroupName])) {\n            optionGroup = optionGroups[optionGroupName] = [];\n        }\n        optionGroup.push(options[i]);\n    }\n\n    return optionGroups;\n}\n\nexport function findIndex(items = [], item, trackByGetter = (item) => item) {\n    for (let i = 0; i < items.length; i++) {\n        if (trackByGetter(items[i]) === trackByGetter(item)) {\n            return i;\n        }\n    }\n}\n\nexport function removeChildren(element) {\n    while (element.firstChild) {\n        element.removeChild(element.firstChild);\n    }\n}\n\n/**\n *\n * @param {HTMLElement} containerElement\n * @param {any[]} newItems\n * @param {(item) => Element} elementConstructor\n * @param {Function} trackFieldGetter\n * @param {boolean} appendUndefinedItems - place undefined items to the end of list (they prepend by default)\n * @returns {HTMLElement} containerElement with changes\n */\nexport function updateElements(containerElement: HTMLElement, newItems: any[], elementConstructor: (item) => Element, trackFieldGetter?: Function, appendUndefinedItems?: boolean) {\n    const elementsArr = Array.from(containerElement.children);\n    const track = (item) => {\n        const id = item !== undefined && (trackFieldGetter ? trackFieldGetter(item) : item);\n\n        if (id || id === 0) return id;\n    };\n    const uncountableElementId = new Error('Uncountable element'); // We use this id for interface (no data) elements\n    let newItemIds,\n        itemsMap,\n        oldItemIds;\n\n    if (trackFieldGetter) {\n        oldItemIds = elementsArr.map((element: any) => element.hasOwnProperty('data') ? track(element.data) : uncountableElementId);\n        newItemIds = [];\n        itemsMap = new Map(); //trackFieldGetter can return original item by default\n        newItems.forEach(item => {\n            const itemId = track(item);\n\n            itemsMap.set(itemId, item); // Save item for fast later retrieval\n            newItemIds.push(itemId);\n        });\n\n    } else {\n        oldItemIds = elementsArr.map((element: any) => element.hasOwnProperty('data') ? element.data : uncountableElementId);\n        newItemIds = newItems.slice();\n    }\n\n    // Make undefined items for elements which are out of the list (have no data)\n    oldItemIds.forEach((oldElementId: any) => {\n        if (oldElementId === uncountableElementId) {\n            newItemIds[appendUndefinedItems ? 'push' : 'unshift'](uncountableElementId);\n        } else {\n            appendUndefinedItems = true;\n        }\n    });\n\n    const instructions = myer.diff(oldItemIds, newItemIds);\n    const operations = instructions.map(args => { //convert id to element for insert operations\n        if (args.hasOwnProperty(2)) { //if we have ids for new elements\n            return args.map((arg, i) => i < 2 ? arg : elementConstructor(itemsMap ? itemsMap.get(arg) : arg));\n        }\n        return args;\n    });\n\n    operations.forEach(operation => {\n        if (operation.hasOwnProperty(1)) {\n            removeElements(containerElement, operation[0], operation[1]);\n        }\n\n        if (operation.hasOwnProperty(2)) {\n            addElements(containerElement, operation[0], operation.slice(2))\n        }\n    });\n\n    return containerElement;\n}\n\nfunction removeElements(containerElement, startIndex, amount) {\n    const children = containerElement.children;\n\n    for (let i = 0; i < amount; i++) {\n        children[startIndex].remove();\n    }\n}\n\nfunction addElements(containerElement, startIndex, newElements) {\n    const children = containerElement.children;\n\n    if (startIndex) {\n        children[startIndex - 1].after.apply(children[startIndex - 1], newElements);\n    } else {\n        containerElement.prepend.apply(containerElement, newElements)\n    }\n}\n\n/**\n * Replace field value in deep object\n *\n * @param oldVal\n * @param newVal\n * @param {Object} object\n * @returns {{} & Object}\n */\nexport function deepReplace(oldVal: any, newVal: any, object: object) {\n    const newObject = copy(object);\n\n    Object.keys(object).forEach(key => {\n        const val = object[key];\n\n        if (val === oldVal) {\n            newObject[key] = newVal;\n\n        } else if (val != null && typeof val === 'object') {\n            newObject[key] = deepReplace(oldVal, newVal, val);\n        }\n    });\n\n    return newObject;\n}\n\n/**\n * Deep copy\n *\n * @param {Object} obj\n * @returns {Array | {}}\n */\nfunction copy(obj: object) {\n    const clone = {};\n\n    for(let i in obj) {\n        if (obj[i] != null && typeof obj[i] === 'object') {\n            clone[i] = copy(obj[i]);\n        } else {\n            clone[i] = obj[i];\n        }\n    }\n    return clone;\n}\n\n/**\n * Find value in object by path\n *\n * Example:\n * deepFind({a: {b: 1}}, 'a.b') //1\n *\n * @param {Object} obj\n * @param {string} path\n * @param {boolean} originalIfNotFound\n * @returns {any}\n */\nexport function deepFind(obj: any, path: string, originalIfNotFound?: boolean) {\n    if (!path || typeof obj !== 'object') return originalIfNotFound ? obj : undefined;\n\n    const paths = path.split('.');\n    let i, current = obj;\n\n    for (i = 0; i < paths.length; ++i) {\n        if (current[paths[i]] == undefined) {\n            return undefined;\n        } else {\n            current = current[paths[i]];\n        }\n    }\n    return current;\n}\n\n/**\n * Highlight `substr` in `str` by `<mark>` or custom tag\n *\n * @param {string} str\n * @param {string} substr\n * @param {string} tagName. `mark` by default\n * @returns {string} highlighted string\n */\nexport function highlight(str: string = '', substr: string = '', tagName?: string) {\n    const tagTemplate = tagName ? `<${tagName}>$&</${tagName}>` : `<mark>$&</mark>`;\n    let html = str;\n\n    substr = String(substr);\n\n    if (substr.length > 0) {\n        str = String(str);\n        substr = escapeCharacters(substr);\n\n        html = str.replace(new RegExp(substr, 'gi'), tagTemplate);\n    }\n\n    return html;\n}\n\n/**\n * Debounce and extract target value from event\n * Useful for shadow-dom case when universal debounce works incorrect\n * @param fn\n * @param timeout\n * @returns {(e) => any}\n */\nexport function debounceEventValue(fn, timeout) {\n    let timer = null;\n\n    return function (e) {\n        // Save `e.target.value` to value because `e` will be changed in shadow-dom case\n        const value = e.target.value;\n        const onComplete = () => {\n            fn.call(this, value);\n            timer = null;\n        };\n\n        if (timer) {\n            clearTimeout(timer);\n        }\n\n        timer = setTimeout(onComplete, timeout);\n    };\n}\n\n// Getters\nexport function getItemsByField(fields: any, items: any[], fieldGetter: Function) {\n    fields = Array.isArray(fields) ? fields : [fields];\n\n    return fields.map(field => {\n        return items.find(item => fieldGetter(item) === field);\n    }).filter(item => item);\n}\n\nexport const noopPipe = (item?) => item;\nexport const noop = (item?) => {};\n\n\n/**\n * Cache value for '' query and last value\n */\nexport class QueryCache {\n    private cache: {q: string, v: any, t: number}[] = [];\n\n    get(query: string = '') {\n        return this.getValue(this.cache.find(cacheItem => cacheItem.q === query));\n    }\n\n    getLast() {\n        return this.getValue(this.cache[0]);\n    }\n\n    set(query: string = '', value: any) {\n        // Remove duplicates, remove all except ''\n        this.cache = this.cache.filter(cacheItem => cacheItem.q !== query && cacheItem.q === '');\n\n        this.cache.unshift({q: query, v: value, t: (new Date().getTime())})\n    }\n\n    clear() {\n        this.cache = [];\n    }\n\n    private getValue(cacheItem) {\n        if (cacheItem) {\n            return cacheItem.v;\n        }\n    }\n}\n\n","import * as style from './select.scss';\nimport * as bootstrapStyle from './select-bootstrap.scss';\n\n// import './select.scss';\nimport { SelectDom } from './dom-builder';\n// let style;\nimport {\n    ascSort,\n    findIndex,\n    getItemsByField,\n    deepReplace,\n    highlight,\n    deepFind,\n    mergeWithDefaults,\n    QueryCache\n} from './utils';\n\nconst QUERY_PLACEHOLDER = '$query';\n\nexport class Select extends SelectDom {\n\n    value;\n    private cache = new QueryCache();\n    loadItemsPromise: Promise<any>; //Just for case. We don't use it now\n\n    constructor(element, params: any = {}) {\n        super(element, params.localStyle ? (params.localStyle === true ? String(style) : params.localStyle) : null);\n\n        this.setParams(params);\n    }\n\n    //добавить класс binded если используется другой инпут\n    public setParams(params: any = {}, emitEvent: boolean = true) {\n        // `emitEvent=false` prevents event emitting of value changes in situation if value was changed because multiple flag was changed\n        console.log('setParams', params);\n        mergeWithDefaults(this.params, params, this.paramsDefault);\n\n        const hasProperty = (property) => params.hasOwnProperty(property);\n        const hasFalsyProperty = (property) => params.hasOwnProperty(property) && !params[property];\n\n        // Complex\n        if (hasProperty('removable')) {\n            this.params.openByRemove = !params.removable;\n        }\n\n        if (hasProperty('multiple')) {\n            this.params.openByRemove = !params.multiple;\n            this.params.openByActiveRemove = !params.multiple;\n        }\n\n        if (hasProperty('multiple') || hasProperty('readonly')) {\n            this.params.editable = !this.params.readonly && !this.params.multiple;\n        }\n\n        if (hasProperty('keepOpened')) {\n            this.params.openByRemove = params.keepOpened;\n            this.params.closeByRemove = !params.keepOpened;\n            this.params.closeBySelect = !params.keepOpened;\n        }\n\n        // Basic\n        if (hasProperty('openByRemove')) {\n            this.params.openByRemove = params.openByRemove\n        }\n\n        if (hasProperty('openByActiveRemove')) {\n            this.params.openByActiveRemove = params.openByActiveRemove\n        }\n\n        if (hasProperty('openByInputClick')) {\n            this.params.openByInputClick = params.openByInputClick\n        }\n\n        if (hasProperty('closeByRemove')) {\n            this.params.closeByRemove = params.closeByRemove\n        }\n\n        if (hasProperty('closeBySelect')) {\n            this.params.closeBySelect = params.closeBySelect\n        }\n\n        if (hasProperty('editable')) {\n            this.params.editable = params.editable\n        }\n\n        // Field & Getters\n        if (hasFalsyProperty('valueFieldGetter') && this.params.valueField || hasProperty('valueField')) { // Id or other unique value\n            this.params.valueFieldGetter = (item) => deepFind(item, this.params.valueField, true);\n        }\n\n        if (hasFalsyProperty('groupFieldGetter') && this.params.groupField || hasProperty('groupField')) { // Group id\n            this.params.groupFieldGetter = (item) => deepFind(item, this.params.groupField)\n        }\n\n        if (hasFalsyProperty('searchFieldGetter') && this.params.searchField || hasProperty('searchField')) { // Field for searching\n            this.params.searchFieldGetter = (item) => deepFind(item, this.params.searchField, true);\n        }\n\n        if (hasFalsyProperty('trackFieldGetter') && (this.params.trackField || this.params.valueField) || hasProperty('trackField') || hasProperty('valueField')) { // Track id\n            this.params.trackFieldGetter = (item) => deepFind(item, this.params.trackField || this.params.valueField, true);\n        }\n\n        if (hasFalsyProperty('disabledFieldGetter') && this.params.disabledField || hasProperty('disabledField')) { // Field with disabled flag\n            this.params.disabledFieldGetter = (item) => deepFind(item, this.params.disabledField);\n        }\n\n        // if (hasProperty('groupField') && !params.groupLabelGetter) {\n        //     this.params.groupLabelGetter = (label) => label\n        // }\n\n        if (hasFalsyProperty('dropdownItemLabelGetter') && (this.params.dropdownItemLabelField || this.params.searchField) || !params.dropdownItemLabelGetter && (hasProperty('dropdownItemLabelField') || hasProperty('searchField'))) {\n            this.params.dropdownItemLabelGetter = (item, query) => highlight(deepFind(item, this.params.dropdownItemLabelField || this.params.searchField, true), query);\n        }\n\n        if (hasFalsyProperty('selectedItemLabelGetter') && (this.params.selectedItemLabelField || this.params.searchField) || !params.selectedItemLabelGetter && (hasProperty('selectedItemLabelField') || hasProperty('searchField'))) {\n            this.params.selectedItemLabelGetter = (item) => deepFind(item, this.params.selectedItemLabelField || this.params.searchField, true)\n        }\n\n        if (hasProperty('placeholder') && !hasProperty('multiplePlaceholder')) {\n            this.params.multiplePlaceholder = params.placeholder;\n        }\n\n        if (params.creatable && !params.createItemFn) {\n            this.params.createItemFn = typeof params.creatable === 'object' ? (query) => deepReplace(QUERY_PLACEHOLDER, query, params.creatable) : (query) => query;\n        }\n\n        if (this.params.editable && !params.editItemFn) {\n            this.params.editItemFn = (value) => this.setQuery(value, true);\n        }\n\n        if (!this.params.getItemsByValue) {\n            // Find items by value in the items list\n            this.params.getItemsByValue = (values) => {\n                return this.loadListItems()\n                    .then(items => getItemsByField(values, items, this.params.valueFieldGetter));\n            }\n        }\n\n        if (hasProperty('items')) {\n            this.params.getItems = (query) => {\n                let options;\n\n                if (typeof query === 'object' && query.hasOwnProperty('query')) {\n                    options = query;\n                    query = query.query;\n                }\n                return ascSort(params.items || [], query, this.params.searchFieldGetter, options)\n            };\n        }\n\n        // Initialize\n        let valueIsChanged = false;\n        let value = this.value;\n\n        this.setDropdownLabel(this.params.emptyDropdownLabel);\n        this.setRemovable(this.params.removable);\n        this.setMultiple(this.params.multiple);\n        this.setReadonly(this.params.readonly);\n        this.setDisabled(this.params.disabled);\n        this.setDropdownAbove(this.params.position === 'top');\n        this.updatePlaceholder();\n\n        if ((hasProperty('selectedItemLabelGetter') || hasProperty('selectedItemLabelField') || hasProperty('searchField') || hasProperty('searchFieldGetter')) && this.selectedItems.length) {\n            // Update items which are already selected. We don't need to update list items here because they will be updated when dropdown opening\n            this.insertSelectedElements([]);\n            this.insertSelectedElements(this.selectedItems);\n        }\n\n        if (hasProperty('customAreaGetter')) {\n            this.insertCustomArea();\n        }\n\n        if (hasProperty('activeByOpen') && !params.activeByOpen) {\n            this.setActiveListElement();\n        }\n\n        if (hasProperty('items') || hasProperty('getItems')) {\n            this.cache.clear();\n\n            // Case: loading implemented outside, not by select getItems. Then we should to show new items in open dropdown\n            if (this.isOpen) {\n                this.insertListItems([]);\n                this.updateDropdownListItems('');\n            }\n        }\n\n        if (hasProperty('value')) {\n            value = params.value;\n            valueIsChanged = true;\n        }\n\n        if (this.params.multiple && !Array.isArray(value)) {\n            value = value != null ? [value] : [];\n            valueIsChanged = true;\n        }\n\n        if (!this.params.multiple && Array.isArray(value)) {\n            value = value[0]; // There is high probability that it is old multiple value then single array like value\n            valueIsChanged = true;\n        }\n\n        if (valueIsChanged && this.value !== value) {\n            this.value = value;\n            this.setQuery(''); // Case: dropdown is open. Clear query if value was setup not by search input\n            // Convert value to items (which are array always) and set them\n            this.selectItems(this.params.multiple ? value : (value != null ? [value] : []))\n                .then(this.updateInputInfo.bind(this));\n\n            if (emitEvent && !hasProperty('value')) {\n                this.dispatchValue();\n            }\n        }\n    }\n\n    public open() {\n        if (this.isOpen) return;\n\n        this.updateDropdownListItems('') //use saved query\n            .then((data) => {\n                this.openList();\n                if (!this.params.multiple && this.selectedItems.length) {\n                    // this.setPlaceholder(this.params.selectedItemLabelGetter(this.selectedItems[0]))\n                    // this.setQuery(this.params.searchFieldGetter(this.selectedItems[0]), true);\n\n                    // Doesn't work without setTimeout because of https://bugs.chromium.org/p/chromium/issues/detail?id=32865\n                    setTimeout(() => {\n                        this.params.editItemFn.call(this, this.params.searchFieldGetter(this.selectedItems[0]));\n                    })\n                }\n            })\n    }\n\n    public close() {\n        if (!this.params.multiple) {\n            // this.setPlaceholder(this.params.placeholder);\n            // this.setQuery();\n            this.params.editItemFn.call(this, '');\n        }\n\n        if (!this.isOpen) return;\n\n        this.closeList();\n    }\n\n    // Items loader\n    loadListItems(query: any = '') {\n        this.setLoading(true);\n        // console.log('Loading... ', query, 'From cache:', !!this.cache.get(query));\n\n        let cachedItems, selectedItemsForQuery;\n\n        if (this.params.useCache) {\n            cachedItems = this.cache.get(query);\n\n        } else {\n            // Needs to understand how many selected items we already have for this query\n            // and how many extra items we need to request server.\n            // Case: if server sends items by chunks/pages. In situation if we move most of received items\n            // to selected list and have just several or zero items in the dropdown list\n            // we need to request server more items or items except selected.\n            let options;\n\n            if (typeof query === 'object' && query.hasOwnProperty('query')) {\n                options = query;\n                query = query.query;\n            }\n\n            selectedItemsForQuery = ascSort(this.selectedItems, query, this.params.dropdownItemLabelGetter, options);\n        }\n\n        this.loadItemsPromise = Promise.resolve(cachedItems || this.params.getItems(query, selectedItemsForQuery))\n            .then((items: any[]) => {\n                // console.log('Loaded', items);\n                this.cache.set(query, items);\n                this.loadItemsPromise = undefined;\n                this.setLoading(false);\n\n                return items;\n            })\n            .catch(error => {\n                this.loadItemsPromise = undefined;\n                this.setLoading(false);\n            });\n\n        return this.loadItemsPromise;\n    }\n\n    updateDropdownListItems(query?) {\n        // console.log('query', query);\n        return this.loadListItems(query)\n            .then((items) => {\n                if (this.isDropdownAbove) {\n                    items.reverse();\n                }\n                this.insertListItems(items, query);\n\n                // const insertedItems = this.insertListItems(this.isDropdownAbove ? items.reverse() : items, query);\n                // items.length - insertedItems.length;\n                // if () {\n                //\n                // }\n            })\n        // .then(this.insertListItems.bind(this))\n        // .then(() => {\n        //     this.setActiveListElement(this.getFirstListElement());\n        // })\n    }\n\n    saveOn(key) {\n        if (this.activeListElement) {\n            const parentNode = this.activeListElement.parentNode;\n\n            this.selectItem(this.activeListElement); //FIXME. This is bug. case: keepOpen + remove all\n            this.setNextActiveListElement(null, parentNode);\n\n        } else if (this.params.creatable) {\n            const query = this.getQuery();\n            if (!query) return;\n\n            this.setLoading(true);\n\n            Promise.resolve(this.params.createItemFn(query))\n                .then(newItem => {\n                    const newElement = this.createListItemElement(newItem);\n\n                    this.setLoading(false);\n                    this.selectItem(newElement, true);\n\n                    if (this.params.activeByOpen) {\n                        this.setNextActiveListElement();\n                    }\n                })\n                .catch(error => {\n                    this.setLoading(false);\n                })\n        }\n    }\n\n    // ValueView\n    updateValue() {\n        const values = this.params.valueField ? this.selectedItems.map(this.params.valueFieldGetter) : this.selectedItems;\n        const newValue = this.params.multiple ? values.slice() : values[0];\n\n        if (this.value !== newValue) {\n            this.value = newValue;\n            this.updatePlaceholder();\n            this.updateInputInfo();\n            this.dispatchValue();\n        }\n    }\n\n    dispatchValue() {\n        const event: any = new Event('change');\n\n        event.value = this.value;\n        this.elem.dispatchEvent(event);\n    }\n\n    // Item manipulations\n    public selectItems(items) {\n        // console.log('selectItems []', items);\n        // if (!this.params.multiple && !items) {\n        //   this.deselectAllItems();\n        //   this.updateValue();\n        //   return;\n        // }\n\n        return Promise.resolve(this.params.valueField ? this.params.getItemsByValue(items) : items)\n            .then(items => {\n                this.updateSelectedElementList(items);\n\n                if (this.isFocused) {\n                    // this.updateDropdownListItems(this.tmpl.searchInput.value); //только если дропдаун открыт\n                    this.updateDropdownListItems(this.focusBlurInstance.inputElement.value); //только если дропдаун открыт\n                }\n\n                //this.updateValue();\n            });\n    }\n\n    public selectItem(listItemElement, isNewItem?: boolean) {\n        // if (this.isElementDisabled(listItemElement)) return; //Should works without it\n\n        const item = listItemElement.data;\n\n        // Multiple limit\n        if (this.params.multipleLimit >= 0 && this.selectedItems.length >= this.params.multipleLimit) {\n            this.blinkRestriction();\n            return;\n        }\n\n        // Show selected items in the dropdown list case\n        if (!this.params.hideSelected && this.isListElementSelected(listItemElement)) {\n            const searchItemElement = this.getSelectedItemElementByItem(item);\n\n            this.unsetListElementSelected(listItemElement);\n            this.deselectItem(searchItemElement, true);\n            return;\n        }\n\n        // Multiple/Single case\n        if (this.params.multiple) {\n            this.setActiveSelectedElement();\n        } else {\n            this.deselectAllItems();\n            this.setQuery('');\n        }\n\n        if (isNewItem) {\n            this.setQuery('');\n        }\n\n        this.addToSelectedElementList(item);\n\n        // Stay dropdown opened/close case\n        if (this.isOpen && this.params.closeBySelect) {\n            this.close();\n            this.setQuery('');\n\n        } else {\n            this.insertListItems(this.cache.get(this.getQuery()));\n            // For visual performance. Remove selected element firstly, then get new items\n            // if (!this.params.useCache) {\n            //     this.insertListItems(this.cache.getLast());\n            // }\n            //\n            // this.updateDropdownListItems(this.getQuery()); // Load items\n\n            // Пришлось отключить из-за конфликта с newItems. Разобраться!!!\n            // In case useCache=false we do it for visual performance. Remove selected item firstly, then get new items\n            //this.insertListItems(this.cache.getLast());\n\n            if (!this.params.useCache) {\n                this.updateDropdownListItems(this.getQuery()); // Load items\n            }\n        }\n\n        // this.currentElem = null;\n        // itemElement.dispatchEvent(new Event('mouseout'));\n\n\n        this.updateValue();\n    }\n\n    public deselectItem(selectedElement, isRemoveButton?) {\n        const isMultipleEditable = this.params.editable && this.params.multiple;\n\n        if (!this.params.multiple && this.isReadonly) { //Refactor this case!\n            this.setActiveSelectedElement();\n            if (isRemoveButton) {\n\n                this.removeSelectedItem(selectedElement);\n                this.setActiveSelectedElement();\n                setTimeout(() => {\n                    this.setQuery('');\n                })\n\n            }\n            this.open();\n            return\n        }\n\n        if (isMultipleEditable && selectedElement) {\n            setTimeout(() => {\n                this.params.editItemFn.call(this, this.params.searchFieldGetter(selectedElement.data));\n            })\n            // this.setQuery(this.params.searchFieldGetter(selectedElement.data))\n            // this.params.editItemFn.bind(this)(this.params.searchFieldGetter(selectedElement.data));\n        }\n\n        if (isRemoveButton || selectedElement === this.activeSelectedElement || isMultipleEditable) {\n            this.removeSelectedItem(selectedElement);\n            this.setActiveSelectedElement();\n\n        } else {\n            this.setActiveSelectedElement(selectedElement);\n            // console.log('deselectItem', this.params.openByActiveRemove);\n            if (this.params.openByActiveRemove) {\n                this.open();\n            }\n        }\n    }\n\n    public deselectAllItems() {\n        this.updateSelectedElementList([]);\n        //this.updateDropdownListItems(this.tmpl.searchInput.value); //??\n        // this.updateValue();\n    }\n\n\n    updateSelectedElementList(items = []) {\n        this.selectedItems = items;\n\n        // if (this.selectedItems.length <= this.params.multipleVisibleLimit) {\n        //     items = items.slice(0, this.params.multipleVisibleLimit)\n        // }\n        this.insertSelectedElements(items);\n    }\n\n    addToSelectedElementList(item) {\n        this.selectedItems.push(item);\n        this.insertSelectedElement(item);\n\n        // if (this.selectedItems.length <= this.params.multipleVisibleLimit) {\n        //     this.insertSelectedElement(item);\n        // }\n    }\n\n    removeSelectedItem(selectedElement) {\n        if (!selectedElement) return;\n\n        const selectedItem = selectedElement.data;\n\n        this.setElementLoading(selectedElement, true);\n\n        Promise.resolve(this.params.removeItemFn(selectedItem))\n            .then((success) => {\n                const itemIndex = findIndex(this.selectedItems, selectedItem, this.params.trackFieldGetter);\n\n                this.setElementLoading(selectedElement, false);\n                this.selectedItems.splice(itemIndex, 1); //Объединить?\n                this.removeElement(selectedElement);\n                //this.clearSearch();\n\n                if (this.params.hideSelected) {\n                    this.insertListItems(this.cache.getLast());\n\n                } else {\n                    const listItemElement = this.getListElementByItem(selectedItem);\n\n                    if (this.isListElementSelected(listItemElement)) {\n                        this.unsetListElementSelected(listItemElement);\n                    }\n                }\n\n                if (!this.isOpen && this.params.openByRemove) {\n                    this.open();\n                }\n\n                if (this.isOpen && this.params.closeByRemove) {\n                    this.close();\n                }\n                // this.loadListItems(this.tmpl.searchInput.value);\n                this.updateValue();\n            })\n            .catch(error => {\n                console.log('E', error);\n                this.setElementLoading(selectedElement, false);\n            })\n\n    }\n\n\n    // Event handlers\n    selectedItemClick(selectedItemElement, isRemoveButton) {\n        if (this.isDisabled) return;\n\n    if (selectedItemElement.data && !isRemoveButton) {\n      this.dispatchCustomInputEvent('click:selected', selectedItemElement, selectedItemElement.data, isRemoveButton);\n    }\n\n    if (this.params.multiple && this.params.removable && !isRemoveButton) return;\n\n        if (this.params.multiple && !this.params.removable) {\n            isRemoveButton = true;\n        }\n\n        this.deselectItem(selectedItemElement, isRemoveButton);\n\n    // this.dispatchCustomInputEvent();\n  }\n\n    listItemClick(listItemElement) {\n\n        if (this.isDisabled || this.isElementDisabled(listItemElement)) return;\n        // Element is selected already\n        //if (this.params.multiple && intersection(this.selectedItems, [listItemElement.data], this.params.trackFieldGetter).length) return;\n\n        // this.setNextActiveListElement();\n        this.selectItem(listItemElement);\n\n        this.dispatchCustomInputEvent('click:list', listItemElement);\n    }\n\n    inputFieldClick() {\n        if (this.isDisabled) return;\n\n        if (this.params.openByInputClick && (this.params.multiple || !this.selectedItems.length)) {\n            this.open();\n        }\n    }\n\n    searchChange(value) {\n        this.closeList();\n        this.updateDropdownListItems(value)\n            .then(this.openList.bind(this))\n    }\n\n    searchKeydown(e) {\n        switch (e.key) {\n            case 'ArrowUp':\n                if (this.isOpen) {\n                    this.setPreviousActiveListElement();\n                } else {\n                    this.open(); // Useful if openDropdownAbove mode\n                }\n                break;\n\n            case 'ArrowDown':\n                if (this.isOpen) {\n                    this.setNextActiveListElement();\n                } else {\n                    this.open();\n                }\n                break;\n\n            case 'ArrowLeft':\n            case 'ArrowRight':\n                break;\n\n            case 'Tab':\n                this.saveOn('tab');\n                break;\n\n            case 'Enter':\n                this.saveOn('enter');\n                // this.focus(); //Should be if keypress!\n                e.preventDefault(); // Prevent the event from bubbling up as it might otherwise cause a form submission\n                break;\n\n            // case ' ':\n            //     this.saveOn('space');\n            //     break;\n\n            case 'Escape':\n                this.blur();\n\n                break;\n\n            case 'Backspace':\n                if (!this.tmpl.searchInput.value) {\n                    const lastSelectedElement = this.findLastChildElementWithData(this.tmpl.searchContainer);\n\n                    this.deselectItem(lastSelectedElement);\n                    break;\n                }\n            default: // any key\n                if (this.params.multiple) {\n                    this.setActiveSelectedElement();\n                }\n        }\n    }\n\n  dispatchCustomInputEvent(eventName, element?, item?, isRemoveButton?) {\n    // FIXME\n    // case: custom input lose focus after every action\n    // if (this.focusBlurInstance.inputElement !== this.tmpl.searchInput) {\n    //     setTimeout(() => {\n    //         if (!this.isFocused) {\n    //             console.log(2222);\n    //             this.open();\n    //             this.elem.dispatchEvent(new Event('click'));\n    //         }\n    //     }, 100)\n    // }\n    // setTimeout(() => {\n    //   this.elem.dispatchEvent(new CustomEvent(eventName, {\n    //     detail: {\n    //       element: element,\n    //       item: item,\n    //       isRemoveButton: isRemoveButton\n    //     },\n    //     bubbles: true,\n    //     cancelable: false\n    //   }));\n    // });\n  }\n}\n","import template from './select.html';\n\nimport {\n    intersection,\n    ascSort,\n    distributeOptionsByGroup,\n    getElementContainer,\n    findIndex,\n    removeChildren,\n    getItemsByField,\n    deepReplace,\n    bindFocusBlur,\n    scrollActiveOption,\n    updateElements,\n    hasNoSpaceBelowForMenu,\n    debounceEventValue,\n    noopPipe,\n    noop\n} from './utils';\n\nconst CssClass = {\n    select             : 'base-select',\n    open               : 'open',\n    multiple           : 'multiple',\n    active             : 'active',\n    focused            : 'focused',\n    loading            : 'loading',\n    removable          : 'removable',\n    selected           : 'selected',\n    readonly           : 'readonly',\n    disabled           : 'disabled',\n    limited            : 'limited',\n    above              : 'above',\n    hide               : 'hide',\n    selectedItem       : 'select-search-list-item_selection',\n    inputNote          : 'select-search-list-item_input-note',\n    selectedItemRemove : 'close',\n    listItem           : 'select-dropdown-list-optgroup-option',\n};\n\nconst ADD_CLASS_METHOD_NAME = 'add';\nconst REMOVE_CLASS_METHOD_NAME = 'remove';\n\nexport abstract class SelectDom {\n    paramsDefault: any = {\n        multiple: false,\n        readonly: false,\n        placeholder: 'Select',\n        multiplePlaceholder: 'Add', //''\n        emptyDropdownLabel: 'Not found', //TODO make getters\n\n        // Basic\n        openByRemove: true,\n        openByActiveRemove: true,\n        openByInputClick: true,\n        closeByRemove: true,\n        closeBySelect: true,\n        activeByOpen: true,\n\n        // Complex\n        keepOpened: false,\n        removable: false,\n        hideSelected: true,\n\n        // Models\n        value: undefined,\n        items: [],\n\n        getItems: (query?: any, selectedItemsForQuery?: any[]) => [],\n        getItemsByValue: undefined, //(value?) => [],\n\n        // Fields\n        valueField: undefined,\n        groupField: undefined,\n        searchField: undefined, //Field for search and edit\n        trackField: undefined,\n        disabledField: undefined,\n        dropdownItemLabelField: undefined,\n        selectedItemLabelField: undefined,\n\n        // Getters\n        valueFieldGetter: noopPipe, //private\n        searchFieldGetter: noopPipe,\n        trackFieldGetter: noopPipe,\n        disabledFieldGetter: noop,\n        selectedItemLabelGetter: noopPipe,\n        dropdownItemLabelGetter: noopPipe,\n        groupLabelGetter: noopPipe,\n        groupFieldGetter: (item) => '',\n        customAreaGetter: noop,\n        infoGetter: (hiddenItemsNumber) => '',\n\n        // New item\n        creatable: false, //{id: null, name: $query, category: 'shoes'}\n        createItemFn: noopPipe, //addItem($query)\n        removeItemFn: noopPipe, //removeItem($item)\n        saveTrigger: 'enter blur space . , ;', //no space\n\n        editable: true,\n        editItemFn: noopPipe,\n\n        // Misc\n        multipleVisibleLimit: Infinity,\n        multipleLimit: Infinity,\n        multipleLimitBlinkDelay: 150,\n        debounce: 200,\n        useCache: true,\n        rotateList: true,\n        position: undefined,\n\n        debug: false\n\n        // oneLine\n        // extraFilter\n        // myGroupFilter +/-\n        // validation\n    };\n\n    params: any = Object.assign({}, this.paramsDefault);\n    // value;\n    selectedItems = [];\n    elem: any;\n    tmpl: any = {};\n    isOpen: boolean = false; // Dropdown is opened\n    isFocused: boolean = false; // Input element is focused\n    isLoading: boolean = false; // Some process (e.g. load items) is in progress\n    isRemovable: boolean = false;\n    isEmpty: boolean = false;\n    isDisabled: boolean = false;\n    isReadonly: boolean = false;\n    isDropdownAbove: boolean = false;\n    activeListElement;\n    activeSelectedElement;\n\n    unbindFocusBlur = noop;\n    focusBlurInstance = null;\n\n    // Handlers\n    abstract searchChange(value): void;\n    abstract searchKeydown(e): void;\n    abstract selectedItemClick(element, isRemoveButton?): void;\n    abstract listItemClick(element): void;\n    abstract inputFieldClick(): void;\n\n    constructor(element, style?) {\n        let styleElement;\n\n        // Include style to component dom (useful for web-component shadow dom)\n        if (style) {\n            styleElement = document.createElement('style');\n\n            styleElement.innerHTML = String(style);\n            element.before(styleElement);\n        }\n\n        const containerElement = document.createElement('div');\n\n        containerElement.innerHTML = String(template);\n\n        this.elem = element;\n\n        // Get templates\n        this.tmpl.searchContainer = containerElement.querySelector('.select-search-list');\n        this.tmpl.searchPlaceholder = containerElement.querySelector('.select-search-placeholder');\n        this.tmpl.selection = containerElement.querySelector('.select-search-list-item_selection');\n        this.tmpl.selectionRemoveBtn = this.tmpl.selection.querySelector('.close');\n        this.tmpl.searchInputInfo = containerElement.querySelector('.select-search-list-item_info');\n        this.tmpl.searchInputItem = containerElement.querySelector('.select-search-list-item_input');\n        this.tmpl.searchInputNote = this.tmpl.searchInputItem.querySelector('.select-search-list-item_input-note');\n        this.tmpl.searchInput = this.tmpl.searchInputItem.querySelector('input');\n        this.tmpl.searchLoader = containerElement.querySelector('.select-search-list-item_loader');\n\n        this.tmpl.dropdownContainer = containerElement.querySelector('.select-dropdown-list');\n        this.tmpl.dropdownCustomArea = containerElement.querySelector('.select-dropdown-custom');\n        this.tmpl.dropdownEmpty = containerElement.querySelector('.select-dropdown-empty');\n        this.tmpl.optionGroup = containerElement.querySelector('.select-dropdown-list-optgroup');\n        this.tmpl.optionGroupHeader = containerElement.querySelector('.select-dropdown-list-optgroup-header');\n        this.tmpl.option = containerElement.querySelector('.select-dropdown-list-optgroup-option');\n\n        // Clean elements\n        this.tmpl.selection.remove();\n        this.tmpl.searchInputNote.remove();\n        this.tmpl.optionGroupHeader.remove();\n        this.tmpl.option.remove();\n        this.tmpl.optionGroup.remove();\n\n        this.elem.classList.add(CssClass.select);\n        removeChildren(this.elem);\n\n        // Set base template\n        this.elem.prepend.apply(this.elem, containerElement.children);\n\n        this.addListeners();\n    }\n\n    public bindInput(inputElement = this.tmpl.searchInput) {\n        if (this.focusBlurInstance) {\n            this.focusBlurInstance.unbind();\n        }\n\n        this.focusBlurInstance = bindFocusBlur(this.elem, inputElement);\n    }\n\n    // public bindInput(inputElement?) {\n    //     this.unbindFocusBlur();\n    //\n    //     if (inputElement) {\n    //         this.unbindFocusBlur = bindFocusBlur(this.elem, inputElement);\n    //     }\n    // }\n\n    addListeners() {\n        this.elem.addEventListener('focus', this.searchFocusHandler);\n        this.elem.addEventListener('blur', this.searchBlurHandler);\n        this.tmpl.searchInput.addEventListener('input', this.searchInputHandler);\n        this.tmpl.searchInput.addEventListener('keydown', this.searchKeydownHandler);\n        this.tmpl.searchInput.addEventListener('change', this.stopImmediatePropagation); // case: add element by Enter produce excess event\n        this.tmpl.searchContainer.addEventListener('click', this.searchContainerClickHandler);\n        this.tmpl.dropdownContainer.addEventListener('click', this.listItemClickHandler);\n        this.tmpl.dropdownContainer.addEventListener('mousemove', this.listItemMousemoveHandler);\n\n        // Implement focus/blur behaviour for the main select element according internal input element\n        this.bindInput(this.tmpl.searchInput); // todo: bind other events\n        // this.focusBlurInstance = bindFocusBlur(this.elem, this.tmpl.searchInput); // todo: bind other events\n    }\n\n    removeListeners() {\n        this.elem.removeEventListener('focus', this.searchFocusHandler);\n        this.elem.removeEventListener('blur', this.searchBlurHandler);\n        this.tmpl.searchInput.removeEventListener('input', this.searchInputHandler);\n        this.tmpl.searchInput.removeEventListener('keydown', this.searchKeydownHandler);\n        this.tmpl.searchInput.removeEventListener('change', this.stopImmediatePropagation);\n        this.tmpl.searchContainer.removeEventListener('click', this.searchContainerClickHandler);\n        this.tmpl.dropdownContainer.removeEventListener('click', this.listItemClickHandler);\n        this.tmpl.dropdownContainer.removeEventListener('mousemove', this.listItemMousemoveHandler);\n        // this.bindInput();\n        this.focusBlurInstance.unbind();\n    }\n\n    blinkRestriction() {\n        this.elem.classList.add(CssClass.limited);\n\n        setTimeout(() => {\n            this.elem.classList.remove(CssClass.limited);\n        }, this.params.multipleLimitBlinkDelay);\n    }\n\n\n    setDropdownAbove(isDropdownAbove: boolean) {\n        this.elem.classList[isDropdownAbove ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.above);\n        this.isDropdownAbove = isDropdownAbove;\n    }\n\n    setFocus(isFocus: boolean) {\n        this.elem.classList[isFocus ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.focused);\n        this.isFocused = isFocus;\n    }\n\n    setLoading(isLoading: boolean) {\n        this.elem.classList[isLoading ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.loading);\n        this.isLoading = isLoading;\n    }\n\n    setElementLoading(element, isLoading) {\n        element.classList[isLoading ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.loading);\n    }\n\n    setRemovable(isRemovable: boolean) {\n        this.elem.classList[isRemovable ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.removable);\n        this.isRemovable = isRemovable;\n    }\n\n    setElementDisabled(element, isDisabled: boolean) {\n        element.classList[isDisabled ? ADD_CLASS_METHOD_NAME : REMOVE_CLASS_METHOD_NAME](CssClass.disabled);\n    }\n\n    isElementDisabled(element) {\n        return element.classList.contains(CssClass.disabled)\n    }\n\n    setDisabled(isDisabled: boolean) {\n        if (isDisabled && !this.isDisabled) {\n            this.elem.setAttribute(CssClass.disabled, 'disabled');\n            this.tmpl.searchInput.setAttribute(CssClass.disabled, '');\n\n        } else if (!isDisabled && this.isDisabled) {\n            this.elem.removeAttribute(CssClass.disabled);\n            this.tmpl.searchInput.removeAttribute(CssClass.disabled);\n        }\n\n        this.isDisabled = isDisabled;\n    }\n\n    setReadonly(isReadonly: boolean) {\n        if (isReadonly && !this.isReadonly) {\n            this.elem.setAttribute(CssClass.readonly, '');\n            this.tmpl.searchInput.setAttribute(CssClass.readonly, '');\n\n        } else if (!isReadonly && this.isReadonly) {\n            this.elem.removeAttribute(CssClass.readonly);\n            this.tmpl.searchInput.removeAttribute(CssClass.readonly);\n        }\n\n        this.isReadonly = isReadonly;\n    }\n\n    openList() {\n        if (!this.isOpen) {\n            if (!this.params.position) {\n                this.setDropdownAbove(hasNoSpaceBelowForMenu(this.elem, this.tmpl.dropdownContainer));\n            }\n            this.isOpen = true;\n            this.elem.classList.add(CssClass.open);\n\n            if (this.params.activeByOpen) {\n                this.setFirstActiveListElement(); // Show menu first because scroll works if menu is visible only\n            }\n\n            this.elem.dispatchEvent(new Event('open'));\n        }\n    }\n\n    closeList() {\n        if (this.isOpen) {\n            this.isOpen = false;\n\n            // Do this in timeout because list can be opened immediately after closing (case: searching)\n            setTimeout(() => {\n                if (!this.isOpen) {\n                    this.elem.classList.remove(CssClass.open);\n                    this.setActiveListElement();\n                    this.elem.dispatchEvent(new Event('close'));\n                }\n            });\n        }\n\n    }\n\n    updatePlaceholder() {\n        const useMultiplePlaceholder = this.params.multiple && this.selectedItems.length;\n\n        this.tmpl.searchInput.placeholder = (useMultiplePlaceholder ? this.params.multiplePlaceholder : this.params.placeholder) || '';\n        this.tmpl.searchPlaceholder.innerHTML = this.params.placeholder || '';\n        // this.setPlaceholder(this.params.multiple && this.selectedItems.length ? this.params.multiplePlaceholder : this.params.placeholder)\n    }\n\n    setPlaceholder(text = '') { //E.g. needs for custom edit functions\n        this.tmpl.searchInput.placeholder = String(text);\n    }\n\n    setInputInfo(text = '') {\n        this.tmpl.searchInputInfo.innerHTML = String(text);\n    }\n\n    updateInputInfo() {\n        this.setInputInfo(this.params.infoGetter(this.selectedItems.length - this.params.multipleVisibleLimit))\n    }\n\n    setDropdownLabel(tmpl = '') {\n        this.tmpl.dropdownEmpty.innerHTML = String(tmpl);\n    }\n\n    setEmpty(isEmpty: boolean) {\n        this.tmpl.dropdownEmpty.classList[isEmpty ? 'remove' : 'add'](CssClass.hide);\n        this.isEmpty = isEmpty;\n    }\n\n    setQuery(text = '', selectAll?: boolean) {\n        const inputElement = this.focusBlurInstance.inputElement; //this.tmpl.searchInput;\n\n        inputElement.value = String(text);\n\n        if (selectAll && text && !this.isReadonly) {\n            inputElement.setSelectionRange(0, text.length)\n        }\n    }\n\n    getQuery() {\n        // return this.tmpl.searchInput.value;\n        return this.focusBlurInstance.inputElement.value;\n    }\n\n    isListElementSelected(element) {\n        return element.classList.contains(CssClass.selected);\n    }\n\n    setListElementSelected(element) {\n        if (!element.classList.contains(CssClass.selected)) {\n            return element.classList.add(CssClass.selected) || true;\n        }\n    }\n\n    unsetListElementSelected(element) {\n        if (element.classList.contains(CssClass.selected)) {\n            return element.classList.remove(CssClass.selected) || true;\n        }\n    }\n\n    focus() {\n        if (!this.isFocused && !this.isDisabled) {\n            // this.tmpl.searchInput.dispatchEvent(new Event('focus'));\n            // this.tmpl.searchInput.focus(); // doesn't work if input element have display:none\n            this.focusBlurInstance.inputElement.focus(); // doesn't work if input element have display:none\n        }\n    }\n\n    blur() {\n        if (this.isFocused && !this.isDisabled) {\n            // this.tmpl.searchInput.blur(); // doesn't work if input element have display:none\n            this.focusBlurInstance.inputElement.blur(); // doesn't work if input element have display:none\n        }\n    }\n\n    // Multiple/Single\n    setMultiple(isMultiple: boolean) {\n        this.elem.classList[isMultiple ? 'add' : 'remove'](CssClass.multiple);\n    }\n\n\n    getSelectedItemElementByItem(item) {\n        const trackFieldGetter = this.params.trackFieldGetter;\n\n        return Array.from(this.tmpl.searchContainer.children).find((element: any) => {\n            return element.data && trackFieldGetter(element.data) === trackFieldGetter(item);\n        })\n    }\n\n    getListElementByItem(item) {\n        const trackFieldGetter = this.params.trackFieldGetter;\n        const groupElements = this.tmpl.dropdownContainer.children;\n\n        for (let i = 0; i < groupElements.length; i++) {\n            if (this.isDataElement(groupElements[i])) {\n                const itemElements = groupElements[i].children;\n\n                for (let j = 0; j < itemElements.length; j++) {\n                    if (itemElements[j].data && trackFieldGetter(itemElements[j].data) === trackFieldGetter(item)) {\n                        return itemElements[j];\n                    }\n                }\n            }\n        }\n    }\n\n    // Element constructors\n    updateLabel(element, labelGetter, item, query?, extraLabelElement?){\n        const label = labelGetter(item, query);\n        // console.log(item.name, isDisabled);\n\n        if (typeof label === 'string' || typeof label === 'number') {\n            extraLabelElement = extraLabelElement ? extraLabelElement.outerHTML : '';\n            element.innerHTML = String(label) + extraLabelElement;\n\n        } else if (label) {\n            element.innerHTML = '';\n            element.appendChild(label);\n\n            if (extraLabelElement) {\n                element.appendChild(extraLabelElement.cloneNode(true));\n            }\n        }\n\n        // if (typeof item === 'object') { //Check for special data type\n        //     element.data = item;\n        // }\n\n        return element;\n    }\n\n    createListItemsGroupElement(groupName) {\n        const itemsGroupElement = this.tmpl.optionGroup.cloneNode();\n\n        itemsGroupElement.data = groupName;\n\n        // Add group header if non default group (group.name !== '')\n        if (groupName) {\n            const itemsGroupHeaderElement = this.tmpl.optionGroupHeader.cloneNode();\n\n            // this.updateLabel(itemsGroupHeaderElement, this.params.groupLabelGetter, groupName);\n            itemsGroupHeaderElement.innerHTML = this.params.groupLabelGetter(groupName);\n            itemsGroupElement.appendChild(itemsGroupHeaderElement);\n        }\n\n        return itemsGroupElement;\n    }\n\n    createListItemElement(item) {\n        const optionElement = this.tmpl.option.cloneNode();\n        const isDisabled = this.params.disabledFieldGetter(item);\n\n        this.updateLabel(optionElement, this.params.dropdownItemLabelGetter, item);\n        optionElement.data = item;\n        this.setElementDisabled(optionElement, isDisabled);\n\n        return optionElement;\n    }\n\n    createSelectedItemElement(item) {\n        const selectedElement = this.tmpl.selection.cloneNode();\n        const selectedItemLabel = this.params.selectedItemLabelGetter(item);\n\n        this.updateLabel(selectedElement, this.params.selectedItemLabelGetter, item, null, this.tmpl.selectionRemoveBtn);\n        selectedElement.data = item;\n\n        // if (typeof selectedItemLabel === 'string') {\n        //   selectedElement.innerHTML = selectedItemLabel + this.tmpl.selectionRemoveBtn.outerHTML;\n        //\n        // } else {\n        //   selectedElement.innerHTML = '';\n        //   selectedElement.appendChild(selectedItemLabel);\n        //   selectedElement.appendChild(this.tmpl.selectionRemoveBtn.cloneNode(true));\n        // }\n        //\n        // selectedElement.data = item;\n\n        return selectedElement;\n    }\n\n\n    postRenderSelectedElements() {\n        if (this.params.multipleVisibleLimit === Infinity) {\n            return;\n        }\n\n        //TODO make true multipleVisibleLimit logic. Without post rendering but with excluding element out of DOM\n        const elementsArr: any[] = Array.from(this.tmpl.searchContainer.children).filter(element => element.hasOwnProperty('data'));\n\n        for (let i = 0; i < elementsArr.length; i++) {\n            if (i < this.params.multipleVisibleLimit) {\n                elementsArr[i].classList.remove('hide');\n            } else {\n                elementsArr[i].classList.add('hide');\n            }\n        }\n    }\n\n    // DOM manipulations\n    insertSelectedElements(items = []) {\n        updateElements(this.tmpl.searchContainer, items, this.createSelectedItemElement.bind(this), this.params.trackFieldGetter, true);\n        this.postRenderSelectedElements();\n    }\n\n    insertSelectedElement(item) {\n        const itemElement = this.createSelectedItemElement(item);\n\n        itemElement.data = item;\n        this.tmpl.searchContainer.insertBefore(itemElement, this.tmpl.searchInputInfo);\n        this.postRenderSelectedElements();\n    }\n\n    removeElement(element) {\n        element.remove();\n        this.postRenderSelectedElements(); //!!\n    }\n\n    insertListItems(items = [], query = '') {\n        const selectedItems = this.selectedItems.slice();\n        const trackFieldGetter = this.params.trackFieldGetter;\n\n        if (this.params.hideSelected) {\n            items = intersection(items, selectedItems, trackFieldGetter, true);\n        }\n\n        this.setEmpty(!items.length);\n\n        const sortedList = ascSort(items, '', this.params.searchFieldGetter);\n        const groups = distributeOptionsByGroup(sortedList, this.params.groupFieldGetter);\n        const groupNames = Object.keys(groups).filter(key => groups[key].length).sort();\n        const updatedGroupElements = updateElements(this.tmpl.dropdownContainer, groupNames, this.createListItemsGroupElement.bind(this));\n\n        Array.from(updatedGroupElements.children).forEach((groupElement: any, i) => {\n            if (groupElement.data !== undefined) {\n                const items = groups[groupElement.data];\n                const updatedItemElementsContainer = updateElements(groupElement, items, this.createListItemElement.bind(this), trackFieldGetter);\n\n                // Post rendering for highlighting Todo: optimize it for deep elements\n                Array.from(updatedItemElementsContainer.children).map((itemElement: any) => {\n                    if (itemElement.data) {\n                        this.updateLabel(itemElement, this.params.dropdownItemLabelGetter, itemElement.data, query);\n\n                        if (!this.params.hideSelected) {\n                            const isSelected = selectedItems.some(item => trackFieldGetter(itemElement.data) === trackFieldGetter(item));\n\n                            isSelected ? this.setListElementSelected(itemElement) : this.unsetListElementSelected(itemElement);\n                        }\n                    }\n                });\n            }\n        });\n\n        return sortedList;\n    }\n\n    insertCustomArea() {\n        const customAreaElement =  this.params.customAreaGetter.call(this);\n\n        this.tmpl.dropdownCustomArea.innerHTML = '';\n\n        if (customAreaElement) {\n            this.tmpl.dropdownCustomArea.append(customAreaElement);\n        }\n    }\n\n    // Selected items controller\n    setActiveSelectedElement(element?) {\n        if (this.activeSelectedElement) {\n            this.activeSelectedElement.classList.remove(CssClass.active);\n            this.activeSelectedElement = null;\n        }\n\n        if (element) {\n            element.classList.add(CssClass.active);\n            this.activeSelectedElement = element;\n        }\n    }\n\n    // List elements controller\n    setActiveListElement(element?) {\n        // if (!element) return;\n        if (this.activeListElement) {\n            this.activeListElement.classList.remove(CssClass.active);\n            this.activeListElement = null\n        }\n\n        if (element && this.isOpen) { //ActiveListElement can't exist if list is closed\n            element.classList.add(CssClass.active);\n            this.activeListElement = element;\n            scrollActiveOption(this.tmpl.dropdownContainer, element);\n        }\n\n        // if (!keyUpDownWerePressed && scope.selectorPosition !== index) {\n        //     setOption(listElement, index);\n        // } else {\n        //     keyUpDownWerePressed = false;\n        // }\n    }\n\n    setFirstActiveListElement() {\n        const firstListElement = this.isDropdownAbove ? this.getLastListElement() : this.getFirstListElement();\n\n        this.setActiveListElement(firstListElement);\n    }\n\n    setNextActiveListElement(isPrevious?: boolean, parentNode?) {\n        try {\n            const activeElement = this.activeListElement;\n\n            if (!activeElement) {\n                return this.setActiveListElement((this.isDropdownAbove ? !isPrevious : isPrevious) ? this.getLastListElement() : this.getFirstListElement());\n            }\n\n            let nextElement = this.getSiblingElement(activeElement, isPrevious);\n\n            //if (!nextElement) return;\n            //debugger\n\n            if (!this.isDataElement(nextElement)) {\n                const nextGroup = this.getSiblingElement(activeElement.parentNode || parentNode, isPrevious);\n\n                if (this.isDataElement(nextGroup)) {\n                    nextElement = this.findFirstChildElementWithData(nextGroup, isPrevious);\n\n                } else if (this.params.rotateList) {\n                    nextElement = isPrevious ? this.getLastListElement() : this.getFirstListElement();\n                }\n            }\n\n            if (this.isDataElement(nextElement)) {\n                this.setActiveListElement(nextElement);\n            } else {\n                this.setActiveListElement(); //Need it for correct work\n            }\n        } catch (e) {\n            this.setFirstActiveListElement()\n        }\n\n    }\n\n    setPreviousActiveListElement() {\n        this.setNextActiveListElement(true);\n    }\n\n    // getActiveListElement() {\n    //     return this.activeListElement;\n    // }\n\n    getSiblingElement(element, isPrevious?: boolean) {\n        const siblingFieldName = isPrevious ? 'previousSibling' : 'nextSibling';\n\n        do  {\n            element = element && element[siblingFieldName];\n\n        } while (element && !this.isDataElement(element));\n\n        return element;\n    }\n\n    getFirstListElement() {\n        const firstGroup = this.findFirstChildElementWithData(this.tmpl.dropdownContainer);\n\n        return this.findFirstChildElementWithData(firstGroup);\n    }\n\n    getLastListElement() {\n        const lastGroup = this.findLastChildElementWithData(this.tmpl.dropdownContainer);\n\n        return this.findLastChildElementWithData(lastGroup);\n    }\n\n    findFirstChildElementWithData(containerElement, invert?: boolean) {\n        if (!containerElement) return;\n\n        const total = containerElement.children.length;\n\n        for (let f = 0, l = total - 1; f < total; f++, l--) {\n            const i = invert ? l : f;\n            const childElement = containerElement.children[i];\n\n            if (this.isDataElement(childElement)) {\n                return childElement;\n            }\n        }\n    }\n\n    findLastChildElementWithData(containerElement) {\n        return this.findFirstChildElementWithData(containerElement, true);\n    }\n\n    isDataElement(element) {\n        // Enabled element node with data\n        return element && element.nodeType === 1 && element.data !== undefined && !this.isElementDisabled(element);\n    }\n\n    // Event handlers\n    searchFocusHandler = () => {\n        // console.log('+ searchFocusHandler');\n        this.setFocus(true);\n    };\n\n    searchBlurHandler = () => {\n        // console.log('+ searchBlurHandler');\n        this.closeList();\n        this.setActiveSelectedElement();\n        this.insertListItems(); // Don't store list of items if component hasn't focus\n        this.setFocus(false);\n        this.setQuery(''); //maybe move it ti closeList\n    };\n\n    // searchInputHandler = (e) => {\n    //     console.log(22222, e.target.value);\n    //\n    //     // this.params.debounce\n    //     this.searchChange(e.target.value);\n    // };\n\n    searchInputHandler = debounceEventValue((value) => {\n        this.searchChange(value);\n    }, this.params.debounce);\n\n\n    searchKeydownHandler = (e) => {\n        this.searchKeydown(e);\n    };\n\n    searchContainerClickHandler = (e) => {\n        //this.focus(); //Maybe don't need\n\n        const selectedItemElement = getElementContainer(e.target, this.tmpl.dropdownContainer, CssClass.selectedItem);\n\n        if (selectedItemElement) {\n            const selectedItemRemoveElement = getElementContainer(e.target, selectedItemElement, CssClass.selectedItemRemove);\n\n            this.selectedItemClick(selectedItemElement, !!selectedItemRemoveElement);\n\n        } else {\n            this.inputFieldClick();\n        }\n    };\n\n    listItemClickHandler = (e) => {\n        const listItemElement = getElementContainer(e.target, this.tmpl.dropdownContainer,  CssClass.listItem);\n\n        if (listItemElement) {\n            this.listItemClick(listItemElement);\n\n            // Set next active element if dropdown still opened\n            setTimeout(() => {\n                if (!this.isOpen) return;\n\n                const nextListItemElement = getElementContainer(document.elementFromPoint(e.pageX, e.pageY) as HTMLElement, this.tmpl.dropdownContainer, CssClass.listItem) || this.getFirstListElement();\n\n                if (nextListItemElement) {\n                    this.setActiveListElement(nextListItemElement);\n                }\n            })\n\n        }\n    };\n\n    listItemMousemoveHandler = (e) => {\n        const optionElement = getElementContainer(e.target, this.tmpl.dropdownContainer, CssClass.listItem);\n\n        if (optionElement && optionElement !== this.activeListElement) {\n            this.setActiveListElement(optionElement);\n        }\n    };\n\n    stopImmediatePropagation = (e) => e.stopImmediatePropagation();\n}\n","export default \"<!-- TODO use display: contents when full providing appears https://javascript.ru/forum/showthread.php?p=492068#post492068 -->\\n<div class=\\\"select-search\\\">\\n    <div class=\\\"select-search-placeholder\\\"></div>\\n    <div class=\\\"select-search-list\\\">\\n        <div class=\\\"select-search-list-item select-search-list-item_selection\\\">\\n            <!-- selected option text -->\\n            <span class=\\\"close\\\">×</span>\\n        </div>\\n        <div class=\\\"select-search-list-item select-search-list-item_info\\\"></div>\\n        <div class=\\\"select-search-list-item select-search-list-item_input\\\"><span class=\\\"select-search-list-item_input-note\\\"></span><input autocomplete=\\\"off\\\"/></div>\\n        <div class=\\\"select-search-list-item select-search-list-item_loader\\\"></div>\\n    </div>\\n</div>\\n<div class=\\\"select-dropdown\\\">\\n    <div class=\\\"select-dropdown-custom\\\"></div>\\n    <div class=\\\"select-dropdown-empty\\\"></div>\\n    <div class=\\\"select-dropdown-list\\\">\\n        <div class=\\\"select-dropdown-list-optgroup\\\">\\n            <div class=\\\"select-dropdown-list-optgroup-header\\\">\\n                <!-- list option header text -->\\n            </div>\\n            <div class=\\\"select-dropdown-list-optgroup-option\\\">\\n                <!-- list option text -->\\n            </div>\\n        </div>\\n    </div>\\n</div>\";","/**\n * Array Diff\n *\n * Based on https://github.com/google/diff-match-patch\n *\n * This library implements Myer's diff algorithm which is generally considered to be the best general-purpose diff.\n * A layer of pre-diff speedups and post-diff cleanups surround the diff algorithm, improving both performance and output quality.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a editor prescription.\n * Applies the prescription onto another text, allowing for errors.\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n    // Defaults.\n    // Redefine these in your program to override the defaults.\n\n    // Number of seconds to map a diff before giving up (0 for infinity).\n    this.Diff_Timeout = 1.0;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nconst DIFF_DELETE = -1;\nconst DIFF_INSERT = 1;\nconst DIFF_EQUAL = 0;\n\n\n/**\n * Find the differences between two texts.  Simplifies the problem by stripping\n * any common prefix or suffix off the texts before diffing.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} opt_deadline Optional time when the diff should be complete\n *     by.  Used internally for recursive calls.  Users should set DiffTimeout\n *     instead.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_deadline) {\n    // Set a deadline by which time the diff must be complete.\n    if (typeof opt_deadline === 'undefined') {\n        if (this.Diff_Timeout <= 0) {\n            opt_deadline = Number.MAX_VALUE;\n        } else {\n            opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n        }\n    }\n    const deadline = opt_deadline;\n\n    // Check for null inputs.\n    if (text1 === null || text2 === null) {\n        throw new Error('Null input. (diff_main)');\n    }\n\n    // Check for equality (speedup).\n    if (text1 === text2) {\n        if (text1.length) {\n            return [[DIFF_EQUAL, text1]];\n        }\n        return [];\n    }\n\n    // Trim off common prefix (speedup).\n    let commonlength = this.diff_commonPrefix(text1, text2);\n\n    const commonprefix = text1.slice(0, commonlength);\n    text1 = text1.slice(commonlength);\n    text2 = text2.slice(commonlength);\n\n    // Trim off common suffix (speedup).\n    commonlength = this.diff_commonSuffix(text1, text2);\n    const commonsuffix = text1.slice(text1.length - commonlength);\n    text1 = text1.slice(0, text1.length - commonlength);\n    text2 = text2.slice(0, text2.length - commonlength);\n\n    // Compute the diff on the middle block.\n    const diffs = this.diff_compute_(text1, text2, deadline);\n\n    // Restore the prefix and suffix.\n    if (commonprefix.length) {\n        diffs.unshift([DIFF_EQUAL, commonprefix]);\n    }\n    if (commonsuffix.length) {\n        diffs.push([DIFF_EQUAL, commonsuffix]);\n    }\n    this.diff_cleanupMerge(diffs);\n    return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, deadline) {\n    let diffs;\n\n    if (!text1.length) {\n        // Just add some text (speedup).\n        return [[DIFF_INSERT, text2]];\n    }\n\n    if (!text2.length) {\n        // Just delete some text (speedup).\n        return [[DIFF_DELETE, text1]];\n    }\n\n    const longtext = text1.length > text2.length ? text1 : text2;\n    const shorttext = text1.length > text2.length ? text2 : text1;\n    let i = this.find_csa(longtext, shorttext);\n    if (i !== -1) {\n        // Shorter text is inside the longer text (speedup).\n        //console.log();\n        diffs = [[DIFF_INSERT, longtext.slice(0, i)], [DIFF_EQUAL, shorttext], [DIFF_INSERT, longtext.slice(i + shorttext.length)]];\n\n        // Swap insertions for deletions if diff is reversed.\n        if (text1.length > text2.length) {\n            diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n        }\n\n        // Remove diff with empty value\n        if (!diffs[0][1].length) {\n            diffs.shift();\n        }\n\n        return diffs;\n    }\n\n    if (shorttext.length === 1) {\n        // Single character string.\n        // After the previous speedup, the character can't be an equality.\n        return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n    }\n\n    // Check to see if the problem can be split in two.\n    const hm = this.diff_halfMatch_(text1, text2);\n    if (hm) {\n        // A half-match was found, sort out the return data.\n        const text1_a = hm[0];\n        const text1_b = hm[1];\n        const text2_a = hm[2];\n        const text2_b = hm[3];\n        const mid_common = hm[4];\n        // Send both pairs off for separate processing.\n        const diffs_a = this.diff_main(text1_a, text2_a, deadline);\n        const diffs_b = this.diff_main(text1_b, text2_b, deadline);\n        // Merge the results.\n        return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n    }\n\n    return this.diff_bisect_(text1, text2, deadline);\n};\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n    // Cache the text lengths to prevent multiple calls.\n    const text1_length = text1.length;\n    const text2_length = text2.length;\n    const max_d = Math.ceil((text1_length + text2_length) / 2);\n    const v_offset = max_d;\n    const v_length = 2 * max_d;\n    const v1 = new Array(v_length);\n    const v2 = new Array(v_length);\n    // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n    // integers and undefined.\n    for (let x = 0; x < v_length; x++) {\n        v1[x] = -1;\n        v2[x] = -1;\n    }\n    v1[v_offset + 1] = 0;\n    v2[v_offset + 1] = 0;\n    const delta = text1_length - text2_length;\n    // If the total number of characters is odd, then the front path will collide\n    // with the reverse path.\n    const front = (delta % 2 !== 0);\n    // Offsets for start and end of k loop.\n    // Prevents mapping of space beyond the grid.\n    let k1start = 0;\n    let k1end = 0;\n    let k2start = 0;\n    let k2end = 0;\n    for (let d = 0; d < max_d; d++) {\n        // Bail out if deadline is reached.\n        if ((new Date()).getTime() > deadline) {\n            break;\n        }\n\n        // Walk the front path one step.\n        for (let k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n            const k1_offset = v_offset + k1;\n            let x1;\n            if (k1 === -d || (k1 !== d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n                x1 = v1[k1_offset + 1];\n            } else {\n                x1 = v1[k1_offset - 1] + 1;\n            }\n            let y1 = x1 - k1;\n            while (x1 < text1_length && y1 < text2_length && text1[x1] === text2[y1]) {\n                x1++;\n                y1++;\n            }\n            v1[k1_offset] = x1;\n            if (x1 > text1_length) {\n                // Ran off the right of the graph.\n                k1end += 2;\n            } else if (y1 > text2_length) {\n                // Ran off the bottom of the graph.\n                k1start += 2;\n            } else if (front) {\n                let k2_offset = v_offset + delta - k1;\n                if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] !== -1) {\n                    // Mirror x2 onto top-left coordinate system.\n                    let x2 = text1_length - v2[k2_offset];\n                    if (x1 >= x2) {\n                        // Overlap detected.\n                        return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n                    }\n                }\n            }\n        }\n\n        // Walk the reverse path one step.\n        for (let k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n            const k2_offset = v_offset + k2;\n            let x2;\n            if (k2 === -d || (k2 !== d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n                x2 = v2[k2_offset + 1];\n            } else {\n                x2 = v2[k2_offset - 1] + 1;\n            }\n            let y2 = x2 - k2;\n            while (x2 < text1_length && y2 < text2_length &&\n            text1[text1_length - x2 - 1] === text2[text2_length - y2 - 1]) {\n                x2++;\n                y2++;\n            }\n            v2[k2_offset] = x2;\n            if (x2 > text1_length) {\n                // Ran off the left of the graph.\n                k2end += 2;\n            } else if (y2 > text2_length) {\n                // Ran off the top of the graph.\n                k2start += 2;\n            } else if (!front) {\n                const k1_offset = v_offset + delta - k2;\n                if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] !== -1) {\n                    let x1 = v1[k1_offset];\n                    let y1 = v_offset + x1 - k1_offset;\n                    // Mirror x2 onto top-left coordinate system.\n                    x2 = text1_length - x2;\n                    if (x1 >= x2) {\n                        // Overlap detected.\n                        return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n                    }\n                }\n            }\n        }\n    }\n    // Diff took too long and hit the deadline or\n    // number of diffs equals number of characters, no commonality at all.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y, deadline) {\n    const text1a = text1.slice(0, x);\n    const text2a = text2.slice(0, y);\n    const text1b = text1.slice(x);\n    const text2b = text2.slice(y);\n\n    // Compute both diffs serially.\n    const diffs = this.diff_main(text1a, text2a, deadline);\n    const diffsb = this.diff_main(text1b, text2b, deadline);\n    return diffs.concat(diffsb);\n};\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n    // Quick check for common null cases.\n    if (!text1.length || !text2.length || text1[0] !== text2[0]) {\n        return 0;\n    }\n    // Binary search.\n    // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n    let pointermin = 0;\n    let pointermax = Math.min(text1.length, text2.length);\n    let pointermid = pointermax;\n    let pointerstart = 0;\n    while (pointermin < pointermid) {\n        if (text1.slice(pointerstart, pointermid) === text2.slice(pointerstart, pointermid)) {\n            pointermin = pointermid;\n            pointerstart = pointermin;\n        } else {\n            pointermax = pointermid;\n        }\n        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n    }\n    return pointermid;\n};\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n    // Quick check for common null cases.\n    if (!text1.length || !text2.length ||\n        text1[text1.length - 1] !== text2[text2.length - 1]) {\n        return 0;\n    }\n    // Binary search.\n    // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n    let pointermin = 0;\n    let pointermax = Math.min(text1.length, text2.length);\n    let pointermid = pointermax;\n    let pointerend = 0;\n    while (pointermin < pointermid) {\n        if (this.compare_arrays(text1.slice(text1.length - pointermid, text1.length - pointerend), text2.slice(text2.length - pointermid, text2.length - pointerend))) {\n            pointermin = pointermid;\n            pointerend = pointermin;\n        } else {\n            pointermax = pointermid;\n        }\n        pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n    }\n    return pointermid;\n};\n\n/**\n * Do the two texts share a slice which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n    if (this.Diff_Timeout <= 0) {\n        // Don't risk returning a non-optimal diff if we have unlimited time.\n        return null;\n    }\n    var longtext = text1.length > text2.length ? text1 : text2;\n    var shorttext = text1.length > text2.length ? text2 : text1;\n    if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n        return null;  // Pointless.\n    }\n    var dmp = this;  // 'this' becomes 'window' in a closure.\n\n    /**\n     * Does a slice of shorttext exist within longtext such that the slice\n     * is at least half the length of longtext?\n     * Closure, but does not reference any external variables.\n     * @param {string} longtext Longer string.\n     * @param {string} shorttext Shorter string.\n     * @param {number} i Start index of quarter length slice within longtext.\n     * @return {Array.<string>} Five element Array, containing the prefix of\n     *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n     *     of shorttext and the common middle.  Or null if there was no match.\n     * @private\n     */\n    function diff_halfMatchI_(longtext, shorttext, i) {\n        // Start with a 1/4 length slice at position i as a seed.\n        const seed = longtext.slice(i, i + Math.floor(longtext.length / 4));\n        let j = -1;\n        let best_common = [];\n        let best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n\n        while ((j = dmp.find_csa(shorttext, seed, j + 1)) !== -1) {\n            const prefixLength = dmp.diff_commonPrefix(longtext.slice(i), shorttext.slice(j));\n            const suffixLength = dmp.diff_commonSuffix(longtext.slice(0, i), shorttext.slice(0, j));\n            if (best_common.length < suffixLength + prefixLength) {\n                best_common = shorttext.slice(j - suffixLength, j);\n                best_common.push.apply(best_common, shorttext.slice(j, j + prefixLength));\n                best_longtext_a = longtext.slice(0, i - suffixLength);\n                best_longtext_b = longtext.slice(i + prefixLength);\n                best_shorttext_a = shorttext.slice(0, j - suffixLength);\n                best_shorttext_b = shorttext.slice(j + prefixLength);\n            }\n        }\n        if (best_common.length * 2 >= longtext.length) {\n            //console.log(best_common);\n            return [best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b, best_common];\n        } else {\n            return null;\n        }\n    }\n\n    // First check if the second quarter is the seed for a half-match.\n    const hm1 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 4));\n    // Check again based on the third quarter.\n    const hm2 = diff_halfMatchI_(longtext, shorttext, Math.ceil(longtext.length / 2));\n    let hm;\n    if (!hm1 && !hm2) {\n        return null;\n    } else if (!hm2) {\n        hm = hm1;\n    } else if (!hm1) {\n        hm = hm2;\n    } else {\n        // Both matched.  Select the longest.\n        hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n    }\n\n    // A half-match was found, sort out the return data.\n    let text1_a, text1_b, text2_a, text2_b;\n    if (text1.length > text2.length) {\n        text1_a = hm[0];\n        text1_b = hm[1];\n        text2_a = hm[2];\n        text2_b = hm[3];\n    } else {\n        text2_a = hm[0];\n        text2_b = hm[1];\n        text1_a = hm[2];\n        text1_b = hm[3];\n    }\n    const mid_common = hm[4];\n    return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n    diffs.push([DIFF_EQUAL, []]);  // Add a dummy entry at the end.\n    var pointer = 0;\n    var count_delete = 0;\n    var count_insert = 0;\n    var text_delete = [];\n    var text_insert = [];\n    var commonlength;\n    while (pointer < diffs.length) {\n        switch (diffs[pointer][0]) {\n            case DIFF_INSERT:\n                count_insert++;\n                text_insert.push.apply(text_insert, diffs[pointer][1]);\n                pointer++;\n                break;\n            case DIFF_DELETE:\n                count_delete++;\n                text_delete.push.apply(text_delete, diffs[pointer][1]);\n                pointer++;\n                break;\n            case DIFF_EQUAL:\n                // Upon reaching an equality, check for prior redundancies.\n                if (count_delete + count_insert > 1) {\n                    if (count_delete !== 0 && count_insert !== 0) {\n                        // Factor out any common prefixies.\n                        commonlength = this.diff_commonPrefix(text_insert, text_delete);\n                        if (commonlength !== 0) {\n                            const diffItem = diffs[pointer - count_delete - count_insert - 1];\n\n                            if ((pointer - count_delete - count_insert) > 0 && diffItem[0] === DIFF_EQUAL) {\n                                diffItem[1].push.apply(diffItem[1], text_insert.slice(0, commonlength));\n                            } else {\n                                diffs.splice(0, 0, [DIFF_EQUAL, text_insert.slice(0, commonlength)]);\n                                pointer++;\n                            }\n                            text_insert = text_insert.slice(commonlength);\n                            text_delete = text_delete.slice(commonlength);\n                        }\n                        // Factor out any common suffixies.\n                        commonlength = this.diff_commonSuffix(text_insert, text_delete);\n                        if (commonlength !== 0) {\n                            const diffItem = diffs[pointer][1];\n                            diffItem.unshift.apply(diffItem, text_insert.slice(text_insert.length - commonlength));\n                            text_insert = text_insert.slice(0, text_insert.length - commonlength);\n                            text_delete = text_delete.slice(0, text_delete.length - commonlength);\n                        }\n                    }\n                    // Delete the offending records and add the merged ones.\n                    if (count_delete === 0) {\n                        diffs.splice(pointer - count_insert, count_delete + count_insert, [DIFF_INSERT, text_insert]);\n                    } else if (count_insert === 0) {\n                        diffs.splice(pointer - count_delete, count_delete + count_insert, [DIFF_DELETE, text_delete]);\n                    } else {\n                        diffs.splice(pointer - count_delete - count_insert, count_delete + count_insert, [DIFF_DELETE, text_delete], [DIFF_INSERT, text_insert]);\n                    }\n                    pointer = pointer - count_delete - count_insert +\n                        (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n                } else if (pointer !== 0 && diffs[pointer - 1][0] === DIFF_EQUAL) {\n                    // Merge this equality with the previous one.\n                    const prevDiffValues = diffs[pointer - 1][1];\n                    const diffValues = diffs[pointer][1];\n\n                    prevDiffValues.push.apply(prevDiffValues, diffValues.splice(1, diffValues.length));\n                    diffs.splice(pointer, 1);\n                } else {\n                    pointer++;\n                }\n                count_insert = 0;\n                count_delete = 0;\n                text_delete = [];\n                text_insert = [];\n                break;\n        }\n    }\n    if (!diffs[diffs.length - 1][1].length) {\n        diffs.pop();  // Remove the dummy entry at the end.\n    }\n\n    // Second pass: look for single edits surrounded on both sides by equalities\n    // which can be shifted sideways to eliminate an equality.\n    // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n    var changes = false;\n    pointer = 1;\n    // Intentionally ignore the first and last element (don't need checking).\n    while (pointer < diffs.length - 1) {\n        if (diffs[pointer - 1][0] === DIFF_EQUAL && diffs[pointer + 1][0] === DIFF_EQUAL) {\n            // This is a single edit surrounded by equalities.\n            if (diffs[pointer][1].slice(diffs[pointer][1].length - diffs[pointer - 1][1].length) === diffs[pointer - 1][1]) {\n                // Shift the edit over the previous equality.\n                diffs[pointer][1] = diffs[pointer - 1][1] +\n                    diffs[pointer][1].slice(0, diffs[pointer][1].length - diffs[pointer - 1][1].length);\n                diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n                diffs.splice(pointer - 1, 1);\n                changes = true;\n            } else if (diffs[pointer][1].slice(0, diffs[pointer + 1][1].length) === diffs[pointer + 1][1]) {\n                // Shift the edit over the next equality.\n                const prevDiffValues = diffs[pointer - 1][1];\n                prevDiffValues.push.apply(prevDiffValues, diffs[pointer + 1][1]);\n                diffs[pointer][1] =\n                    diffs[pointer][1].slice(diffs[pointer + 1][1].length) +\n                    diffs[pointer + 1][1];\n                diffs.splice(pointer + 1, 1);\n                changes = true;\n            }\n        }\n        pointer++;\n    }\n    // If shifts were made, the diff needs reordering and another shift sweep.\n    if (changes) {\n        this.diff_cleanupMerge(diffs);\n    }\n};\n\n/**\n * Find subarray in array\n * @param arr\n * @param subarr\n * @param from_index\n * @returns {*}\n */\ndiff_match_patch.prototype.find_csa = function(arr, subarr, from_index) {\n    let i = from_index >>> 0,\n        sl = subarr.length,\n        l = arr.length + 1 - sl;\n\n    loop: for (; i<l; i++) {\n        for (let j=0; j<sl; j++)\n            if (arr[i+j] !== subarr[j])\n                continue loop;\n        return i;\n    }\n    return -1;\n};\n\n/**\n * Compare two arrays\n * @param arr1\n * @param arr2\n * @returns {boolean}\n */\ndiff_match_patch.prototype.compare_arrays = function(arr1, arr2) {\n    let i = arr1.length;\n\n    if (i !== arr2.length) return false;\n\n    while (i--) {\n        if (arr1[i] !== arr2[i]) return false;\n    }\n    return true\n};\n\ndiff_match_patch.prototype.transform_to_splice_arguments = function(diffs) {\n    const sDiffs = [];\n\n    for (let i = 0, cursor = 0; i < diffs.length; i++) {\n        const diff = diffs[i];\n        const sDiff = [cursor];\n\n        switch (diff[0]) {\n            case DIFF_INSERT:\n                const newItems = diff[1];\n                sDiff.push(0);\n                sDiff.push.apply(sDiff, newItems);\n                cursor += newItems.length;\n                sDiffs.push(sDiff);\n                break;\n\n            case DIFF_DELETE:\n                sDiff.push(diff[1].length);\n\n                const nextDiff = diffs[i + 1];\n                if (nextDiff && nextDiff[0] === DIFF_INSERT) {\n                    const newItems = nextDiff[1];\n                    sDiff.push.apply(sDiff, newItems);\n                    i++;\n                    cursor += newItems.length;\n                }\n                sDiffs.push(sDiff);\n                break;\n\n            case DIFF_EQUAL:\n                cursor += diff[1].length;\n                break;\n        }\n    }\n\n    return sDiffs;\n};\n\n/**\n * Make editor prescriptions to transform one array to another. What element should be removed, what - added\n * - Arrays should contain unique elements\n * - Optimised for arrays with minimum differences\n * - Instruction has format like splice arguments [index, deleteCount, newItem]\n *\n * Example:\n *\n *   const instructions = getTransformInstructions(oldArr, newArr)\n *\n *   // Transform oldArr to newArr by instructions\n *   instructions.forEach(args => oldArr.splice.apply(oldArr, args))\n *\n * @param oldArr\n * @param newArr\n * @param deadline Optional time when the diff should be complete by.\n * @returns {[number , number , any, ...][]} List of editor prescriptions (arguments for splice method)\n */\ndiff_match_patch.prototype.diff = function(oldArr, newArr, deadline) {\n    return this.transform_to_splice_arguments(this.diff_main(oldArr, newArr, deadline));\n};\n\nexport const myer = new diff_match_patch();"],"sourceRoot":""}